{"remainingRequest":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\src\\views\\ScriptForm.vue?vue&type=style&index=0&id=b82d132e&lang=scss&scoped=true","dependencies":[{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\src\\views\\ScriptForm.vue","mtime":1747313213755},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1747314279928},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1747314282996},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1747314281070},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1747315066811},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747314279003},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1747314281934}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoucGFyYW1ldGVycy1oZWFkZXIgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIG1hcmdpbi1ib3R0b206IDEwcHg7DQogIA0KICBoMyB7DQogICAgbWFyZ2luOiAwOw0KICB9DQp9DQo="},{"version":3,"sources":["ScriptForm.vue"],"names":[],"mappings":";AAuSA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ScriptForm.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"script-form\">\r\n    <div class=\"page-container\">\r\n      <h1 class=\"page-title\">{{ isEdit ? '编辑脚本' : '添加脚本' }}</h1>\r\n      \r\n      <el-form \r\n        ref=\"form\" \r\n        :model=\"form\" \r\n        :rules=\"rules\" \r\n        label-width=\"100px\" \r\n        class=\"form-container\"\r\n        v-loading=\"loading\"\r\n      >\r\n        <el-form-item label=\"脚本名称\" prop=\"name\">\r\n          <el-input v-model=\"form.name\" placeholder=\"请输入脚本名称\"></el-input>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"脚本描述\" prop=\"description\">\r\n          <el-input \r\n            type=\"textarea\" \r\n            v-model=\"form.description\" \r\n            placeholder=\"请输入脚本描述\"\r\n            :rows=\"4\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"脚本文件\" prop=\"file\" v-if=\"!isEdit\">\r\n          <el-upload\r\n            class=\"upload-demo\"\r\n            ref=\"upload\"\r\n            action=\"#\"\r\n            :http-request=\"handleUpload\"\r\n            :before-upload=\"beforeUpload\"\r\n            :limit=\"1\"\r\n            :on-exceed=\"handleExceed\"\r\n            :file-list=\"fileList\"\r\n          >\r\n            <el-button size=\"small\" type=\"primary\">选择文件</el-button>\r\n            <div slot=\"tip\" class=\"el-upload__tip\">\r\n              支持上传 Python(.py), Shell(.sh), Batch(.bat), PowerShell(.ps1), JavaScript(.js) 文件\r\n            </div>\r\n          </el-upload>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"参数配置\">\r\n          <div class=\"parameters-header\">\r\n            <h3>脚本参数列表</h3>\r\n            <el-button type=\"primary\" size=\"small\" @click=\"addParam\">\r\n              <i class=\"el-icon-plus\"></i> 添加参数\r\n            </el-button>\r\n          </div>\r\n          \r\n          <el-table :data=\"form.parameters\" border style=\"width: 100%\">\r\n            <el-table-column label=\"参数名称\" prop=\"name\" width=\"150\">\r\n              <template slot-scope=\"scope\">\r\n                <el-input v-model=\"scope.row.name\" placeholder=\"参数名称\"></el-input>\r\n              </template>\r\n            </el-table-column>\r\n            \r\n            <el-table-column label=\"参数描述\" prop=\"description\">\r\n              <template slot-scope=\"scope\">\r\n                <el-input v-model=\"scope.row.description\" placeholder=\"参数描述\"></el-input>\r\n              </template>\r\n            </el-table-column>\r\n            \r\n            <el-table-column label=\"参数类型\" prop=\"param_type\" width=\"150\">\r\n              <template slot-scope=\"scope\">\r\n                <el-select v-model=\"scope.row.param_type\" placeholder=\"参数类型\">\r\n                  <el-option label=\"字符串\" value=\"string\"></el-option>\r\n                  <el-option label=\"数字\" value=\"number\"></el-option>\r\n                  <el-option label=\"布尔值\" value=\"boolean\"></el-option>\r\n                  <el-option label=\"选择框\" value=\"select\"></el-option>\r\n                </el-select>\r\n              </template>\r\n            </el-table-column>\r\n            \r\n            <el-table-column label=\"是否必填\" prop=\"is_required\" width=\"100\">\r\n              <template slot-scope=\"scope\">\r\n                <el-switch v-model=\"scope.row.is_required\" :active-value=\"1\" :inactive-value=\"0\"></el-switch>\r\n              </template>\r\n            </el-table-column>\r\n            \r\n            <el-table-column label=\"默认值\" prop=\"default_value\" width=\"150\">\r\n              <template slot-scope=\"scope\">\r\n                <el-input v-model=\"scope.row.default_value\" placeholder=\"默认值\"></el-input>\r\n              </template>\r\n            </el-table-column>\r\n            \r\n            <el-table-column label=\"操作\" width=\"100\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button\r\n                  type=\"danger\"\r\n                  size=\"mini\"\r\n                  @click=\"removeParam(scope.$index)\"\r\n                >\r\n                  删除\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-form-item>\r\n        \r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm\" :loading=\"submitting\">保存</el-button>\r\n          <el-button @click=\"cancel\">取消</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ScriptForm',\r\n  data() {\r\n    return {\r\n      isEdit: false,\r\n      scriptId: null,\r\n      form: {\r\n        name: '',\r\n        description: '',\r\n        parameters: []\r\n      },\r\n      rules: {\r\n        name: [\r\n          { required: true, message: '请输入脚本名称', trigger: 'blur' },\r\n          { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\r\n        ],\r\n        file: [\r\n          { required: true, message: '请上传脚本文件', trigger: 'change' }\r\n        ]\r\n      },\r\n      fileList: [],\r\n      loading: false,\r\n      submitting: false,\r\n      uploadFile: null\r\n    };\r\n  },\r\n  created() {\r\n    // 判断是否为编辑模式\r\n    this.scriptId = this.$route.params.id;\r\n    this.isEdit = this.$route.name === 'ScriptEdit';\r\n    \r\n    if (this.isEdit) {\r\n      this.fetchScriptDetail();\r\n    }\r\n  },\r\n  methods: {\r\n    fetchScriptDetail() {\r\n      this.loading = true;\r\n      this.$axios.get(`/api/scripts/${this.scriptId}`)\r\n        .then(response => {\r\n          if (response.data.code === 0) {\r\n            const script = response.data.data;\r\n            this.form.name = script.name;\r\n            this.form.description = script.description;\r\n            this.form.parameters = script.parameters || [];\r\n            \r\n            // 修复参数is_required字段类型\r\n            this.form.parameters.forEach(param => {\r\n              param.is_required = parseInt(param.is_required || 0);\r\n            });\r\n          } else {\r\n            this.$message.error(response.data.message || '获取脚本详情失败');\r\n            this.$router.push('/scripts');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          this.$message.error('获取脚本详情失败: ' + error.message);\r\n          this.$router.push('/scripts');\r\n        })\r\n        .finally(() => {\r\n          this.loading = false;\r\n        });\r\n    },\r\n    addParam() {\r\n      this.form.parameters.push({\r\n        name: '',\r\n        description: '',\r\n        param_type: 'string',\r\n        is_required: 0,\r\n        default_value: ''\r\n      });\r\n    },\r\n    removeParam(index) {\r\n      this.form.parameters.splice(index, 1);\r\n    },\r\n    beforeUpload(file) {\r\n      const isValidType = file.name.match(/\\.(py|sh|bat|ps1|js)$/i);\r\n      if (!isValidType) {\r\n        this.$message.error('请上传支持的脚本文件类型!');\r\n        return false;\r\n      }\r\n      \r\n      const isLt5M = file.size / 1024 / 1024 < 5;\r\n      if (!isLt5M) {\r\n        this.$message.error('文件大小不能超过 5MB!');\r\n        return false;\r\n      }\r\n      \r\n      this.uploadFile = file;\r\n      return true;\r\n    },\r\n    handleExceed() {\r\n      this.$message.warning('只能上传一个文件');\r\n    },\r\n    handleUpload() {\r\n      // 这里不实际上传，只保存文件对象，最终提交表单时一起上传\r\n      return { status: true };\r\n    },\r\n    submitForm() {\r\n      this.$refs.form.validate(valid => {\r\n        if (valid) {\r\n          if (!this.isEdit && !this.uploadFile) {\r\n            this.$message.error('请上传脚本文件');\r\n            return;\r\n          }\r\n          \r\n          this.submitting = true;\r\n          \r\n          // 检查参数表单是否填写完整\r\n          for (let i = 0; i < this.form.parameters.length; i++) {\r\n            const param = this.form.parameters[i];\r\n            if (!param.name) {\r\n              this.$message.error('参数名称不能为空');\r\n              this.submitting = false;\r\n              return;\r\n            }\r\n          }\r\n          \r\n          if (this.isEdit) {\r\n            this.updateScript();\r\n          } else {\r\n            this.addScript();\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    addScript() {\r\n      // 创建FormData对象\r\n      const formData = new FormData();\r\n      formData.append('name', this.form.name);\r\n      formData.append('description', this.form.description);\r\n      formData.append('file', this.uploadFile);\r\n      formData.append('parameters', JSON.stringify(this.form.parameters));\r\n      \r\n      // 发送请求\r\n      this.$axios.post('/api/scripts', formData)\r\n        .then(response => {\r\n          if (response.data.code === 0) {\r\n            this.$message.success('添加脚本成功');\r\n            this.$router.push('/scripts');\r\n          } else {\r\n            this.$message.error(response.data.message || '添加脚本失败');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          this.$message.error('添加脚本失败: ' + error.message);\r\n        })\r\n        .finally(() => {\r\n          this.submitting = false;\r\n        });\r\n    },\r\n    updateScript() {\r\n      // 更新脚本信息\r\n      this.$axios.put(`/api/scripts/${this.scriptId}`, {\r\n        name: this.form.name,\r\n        description: this.form.description,\r\n        parameters: this.form.parameters\r\n      })\r\n        .then(response => {\r\n          if (response.data.code === 0) {\r\n            this.$message.success('更新脚本成功');\r\n            this.$router.push('/scripts');\r\n          } else {\r\n            this.$message.error(response.data.message || '更新脚本失败');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          this.$message.error('更新脚本失败: ' + error.message);\r\n        })\r\n        .finally(() => {\r\n          this.submitting = false;\r\n        });\r\n    },\r\n    cancel() {\r\n      this.$router.go(-1);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.parameters-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n  \r\n  h3 {\r\n    margin: 0;\r\n  }\r\n}\r\n</style>\r\n"]}]}