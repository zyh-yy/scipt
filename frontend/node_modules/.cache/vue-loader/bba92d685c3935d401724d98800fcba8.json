{"remainingRequest":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\src\\components\\ExecutionStatusCard.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\src\\components\\ExecutionStatusCard.vue","mtime":1747319855680},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747314279003},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1747314323395},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747314279003},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1747314281934}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOw0KaW1wb3J0IFZDaGFydCBmcm9tICd2dWUtZWNoYXJ0cyc7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogJ0V4ZWN1dGlvblN0YXR1c0NhcmQnLA0KICBjb21wb25lbnRzOiB7DQogICAgVkNoYXJ0DQogIH0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGxvYWRpbmc6IGZhbHNlLA0KICAgICAgdGltZVJhbmdlOiAnMzAnLA0KICAgICAgc3RhdGlzdGljczogW10sDQogICAgICBzdWNjZXNzQ291bnQ6IDAsDQogICAgICBmYWlsZWRDb3VudDogMCwNCiAgICAgIHRvdGFsQ291bnQ6IDAsDQogICAgICBzdWNjZXNzUmF0ZTogJzAuMDAnLA0KICAgICAgY2hhcnRPcHRpb246IHsNCiAgICAgICAgdG9vbHRpcDogew0KICAgICAgICAgIHRyaWdnZXI6ICdpdGVtJywNCiAgICAgICAgICBmb3JtYXR0ZXI6ICd7YX0gPGJyLz57Yn06IHtjfSAoe2R9JSknDQogICAgICAgIH0sDQogICAgICAgIGxlZ2VuZDogew0KICAgICAgICAgIG9yaWVudDogJ2hvcml6b250YWwnLA0KICAgICAgICAgIGJvdHRvbTogMCwNCiAgICAgICAgICBkYXRhOiBbJ+aIkOWKnycsICflpLHotKUnLCAn5omn6KGM5LitJ10NCiAgICAgICAgfSwNCiAgICAgICAgc2VyaWVzOiBbDQogICAgICAgICAgew0KICAgICAgICAgICAgbmFtZTogJ+aJp+ihjOeKtuaAgScsDQogICAgICAgICAgICB0eXBlOiAncGllJywNCiAgICAgICAgICAgIHJhZGl1czogWyc1MCUnLCAnNzAlJ10sDQogICAgICAgICAgICBhdm9pZExhYmVsT3ZlcmxhcDogZmFsc2UsDQogICAgICAgICAgICBpdGVtU3R5bGU6IHsNCiAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAxMCwNCiAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICcjZmZmJywNCiAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDINCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBsYWJlbDogew0KICAgICAgICAgICAgICBzaG93OiBmYWxzZSwNCiAgICAgICAgICAgICAgcG9zaXRpb246ICdjZW50ZXInDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgZW1waGFzaXM6IHsNCiAgICAgICAgICAgICAgbGFiZWw6IHsNCiAgICAgICAgICAgICAgICBzaG93OiB0cnVlLA0KICAgICAgICAgICAgICAgIGZvbnRTaXplOiAnMTgnLA0KICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6ICdib2xkJw0KICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgbGFiZWxMaW5lOiB7DQogICAgICAgICAgICAgIHNob3c6IGZhbHNlDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgZGF0YTogWw0KICAgICAgICAgICAgICB7IHZhbHVlOiAwLCBuYW1lOiAn5oiQ5YqfJywgaXRlbVN0eWxlOiB7IGNvbG9yOiAnIzY3YzIzYScgfSB9LA0KICAgICAgICAgICAgICB7IHZhbHVlOiAwLCBuYW1lOiAn5aSx6LSlJywgaXRlbVN0eWxlOiB7IGNvbG9yOiAnI2Y1NmM2YycgfSB9LA0KICAgICAgICAgICAgICB7IHZhbHVlOiAwLCBuYW1lOiAn5omn6KGM5LitJywgaXRlbVN0eWxlOiB7IGNvbG9yOiAnIzQwOWVmZicgfSB9DQogICAgICAgICAgICBdDQogICAgICAgICAgfQ0KICAgICAgICBdDQogICAgICB9DQogICAgfTsNCiAgfSwNCiAgbW91bnRlZCgpIHsNCiAgICB0aGlzLmZldGNoRGF0YSgpOw0KICB9LA0KICBtZXRob2RzOiB7DQogICAgYXN5bmMgZmV0Y2hEYXRhKCkgew0KICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsNCiAgICAgIA0KICAgICAgdHJ5IHsNCiAgICAgICAgLy8g6K6h566X5pel5pyf6IyD5Zu0DQogICAgICAgIGNvbnN0IGVuZERhdGUgPSBuZXcgRGF0ZSgpOw0KICAgICAgICBjb25zdCBzdGFydERhdGUgPSBuZXcgRGF0ZSgpOw0KICAgICAgICBzdGFydERhdGUuc2V0RGF0ZShlbmREYXRlLmdldERhdGUoKSAtIHBhcnNlSW50KHRoaXMudGltZVJhbmdlKSk7DQogICAgICAgIA0KICAgICAgICBjb25zdCBwYXJhbXMgPSB7DQogICAgICAgICAgcGVyaW9kOiAnZGF5JywNCiAgICAgICAgICBzdGFydF9kYXRlOiB0aGlzLmZvcm1hdERhdGUoc3RhcnREYXRlKSwNCiAgICAgICAgICBlbmRfZGF0ZTogdGhpcy5mb3JtYXREYXRlKGVuZERhdGUpDQogICAgICAgIH07DQogICAgICAgIA0KICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCgnL2FwaS9leGVjdXRpb24vc3RhdGlzdGljcycsIHsgcGFyYW1zIH0pOw0KICAgICAgICANCiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuY29kZSA9PT0gMCkgew0KICAgICAgICAgIHRoaXMuc3RhdGlzdGljcyA9IHJlc3BvbnNlLmRhdGEuZGF0YTsNCiAgICAgICAgICB0aGlzLnByb2Nlc3NEYXRhKCk7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXNwb25zZS5kYXRhLm1lc3NhZ2UgfHwgJ+iOt+WPlue7n+iuoeaVsOaNruWksei0pScpOw0KICAgICAgICB9DQogICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfojrflj5bnu5/orqHmlbDmja7lpLHotKU6ICcgKyBlcnJvci5tZXNzYWdlKTsNCiAgICAgIH0gZmluYWxseSB7DQogICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOw0KICAgICAgfQ0KICAgIH0sDQogICAgZm9ybWF0RGF0ZShkYXRlKSB7DQogICAgICBjb25zdCB5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpOw0KICAgICAgY29uc3QgbW9udGggPSAoZGF0ZS5nZXRNb250aCgpICsgMSkudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpOw0KICAgICAgY29uc3QgZGF5ID0gZGF0ZS5nZXREYXRlKCkudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpOw0KICAgICAgcmV0dXJuIGAke3llYXJ9LSR7bW9udGh9LSR7ZGF5fWA7DQogICAgfSwNCiAgICBwcm9jZXNzRGF0YSgpIHsNCiAgICAgIGlmICghdGhpcy5zdGF0aXN0aWNzIHx8ICF0aGlzLnN0YXRpc3RpY3MubGVuZ3RoKSB7DQogICAgICAgIHRoaXMuc3VjY2Vzc0NvdW50ID0gMDsNCiAgICAgICAgdGhpcy5mYWlsZWRDb3VudCA9IDA7DQogICAgICAgIHRoaXMudG90YWxDb3VudCA9IDA7DQogICAgICAgIHRoaXMuc3VjY2Vzc1JhdGUgPSAnMC4wMCc7DQogICAgICAgIHRoaXMudXBkYXRlQ2hhcnQoMCwgMCwgMCk7DQogICAgICAgIHJldHVybjsNCiAgICAgIH0NCiAgICAgIA0KICAgICAgLy8g6K6h566X5oC75pWwDQogICAgICB0aGlzLnN1Y2Nlc3NDb3VudCA9IHRoaXMuc3RhdGlzdGljcy5yZWR1Y2UoKHN1bSwgaXRlbSkgPT4gc3VtICsgcGFyc2VJbnQoaXRlbS5zdWNjZXNzX2NvdW50IHx8IDApLCAwKTsNCiAgICAgIHRoaXMuZmFpbGVkQ291bnQgPSB0aGlzLnN0YXRpc3RpY3MucmVkdWNlKChzdW0sIGl0ZW0pID0+IHN1bSArIHBhcnNlSW50KGl0ZW0uZmFpbGVkX2NvdW50IHx8IDApLCAwKTsNCiAgICAgIHRoaXMudG90YWxDb3VudCA9IHRoaXMuc3VjY2Vzc0NvdW50ICsgdGhpcy5mYWlsZWRDb3VudDsNCiAgICAgIA0KICAgICAgLy8g6K6h566X5oiQ5Yqf546HDQogICAgICBpZiAodGhpcy50b3RhbENvdW50ID4gMCkgew0KICAgICAgICB0aGlzLnN1Y2Nlc3NSYXRlID0gKCh0aGlzLnN1Y2Nlc3NDb3VudCAvIHRoaXMudG90YWxDb3VudCkgKiAxMDApLnRvRml4ZWQoMik7DQogICAgICB9IGVsc2Ugew0KICAgICAgICB0aGlzLnN1Y2Nlc3NSYXRlID0gJzAuMDAnOw0KICAgICAgfQ0KICAgICAgDQogICAgICAvLyDorqHnrpfmiafooYzkuK3nmoTmlbDph48NCiAgICAgIGNvbnN0IHJ1bm5pbmdDb3VudCA9IHRoaXMuc3RhdGlzdGljcy5yZWR1Y2UoKHN1bSwgaXRlbSkgPT4gew0KICAgICAgICBjb25zdCB0b3RhbCA9IHBhcnNlSW50KGl0ZW0udG90YWxfY291bnQgfHwgMCk7DQogICAgICAgIGNvbnN0IHN1Y2Nlc3MgPSBwYXJzZUludChpdGVtLnN1Y2Nlc3NfY291bnQgfHwgMCk7DQogICAgICAgIGNvbnN0IGZhaWxlZCA9IHBhcnNlSW50KGl0ZW0uZmFpbGVkX2NvdW50IHx8IDApOw0KICAgICAgICByZXR1cm4gc3VtICsgKHRvdGFsIC0gc3VjY2VzcyAtIGZhaWxlZCk7DQogICAgICB9LCAwKTsNCiAgICAgIA0KICAgICAgLy8g5pu05paw5Zu+6KGoDQogICAgICB0aGlzLnVwZGF0ZUNoYXJ0KHRoaXMuc3VjY2Vzc0NvdW50LCB0aGlzLmZhaWxlZENvdW50LCBydW5uaW5nQ291bnQpOw0KICAgIH0sDQogICAgdXBkYXRlQ2hhcnQoc3VjY2VzcywgZmFpbGVkLCBydW5uaW5nKSB7DQogICAgICB0aGlzLmNoYXJ0T3B0aW9uLnNlcmllc1swXS5kYXRhID0gWw0KICAgICAgICB7IHZhbHVlOiBzdWNjZXNzLCBuYW1lOiAn5oiQ5YqfJywgaXRlbVN0eWxlOiB7IGNvbG9yOiAnIzY3YzIzYScgfSB9LA0KICAgICAgICB7IHZhbHVlOiBmYWlsZWQsIG5hbWU6ICflpLHotKUnLCBpdGVtU3R5bGU6IHsgY29sb3I6ICcjZjU2YzZjJyB9IH0sDQogICAgICAgIHsgdmFsdWU6IHJ1bm5pbmcsIG5hbWU6ICfmiafooYzkuK0nLCBpdGVtU3R5bGU6IHsgY29sb3I6ICcjNDA5ZWZmJyB9IH0NCiAgICAgIF07DQogICAgfQ0KICB9DQp9Ow0K"},{"version":3,"sources":["ExecutionStatusCard.vue"],"names":[],"mappings":";AAufile":"ExecutionStatusCard.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"execution-status-card\">\r\n    <el-card class=\"chart-card\" shadow=\"hover\" v-loading=\"loading\">\r\n      <div slot=\"header\" class=\"card-header\">\r\n        <h3>执行状态统计</h3>\r\n        <el-select v-model=\"timeRange\" size=\"small\" @change=\"fetchData\">\r\n          <el-option label=\"最近7天\" value=\"7\"></el-option>\r\n          <el-option label=\"最近30天\" value=\"30\"></el-option>\r\n          <el-option label=\"最近90天\" value=\"90\"></el-option>\r\n        </el-select>\r\n      </div>\r\n      \r\n      <div class=\"chart-container\">\r\n        <div class=\"stats-summary\">\r\n          <div class=\"stat-item success\">\r\n            <div class=\"stat-value\">{{ successCount }}</div>\r\n            <div class=\"stat-label\">成功</div>\r\n          </div>\r\n          <div class=\"stat-item failed\">\r\n            <div class=\"stat-value\">{{ failedCount }}</div>\r\n            <div class=\"stat-label\">失败</div>\r\n          </div>\r\n          <div class=\"stat-item total\">\r\n            <div class=\"stat-value\">{{ totalCount }}</div>\r\n            <div class=\"stat-label\">总计</div>\r\n          </div>\r\n          <div class=\"stat-item rate\">\r\n            <div class=\"stat-value\">{{ successRate }}%</div>\r\n            <div class=\"stat-label\">成功率</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <v-chart class=\"pie-chart\" :option=\"chartOption\" autoresize />\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport VChart from 'vue-echarts';\r\n\r\nexport default {\r\n  name: 'ExecutionStatusCard',\r\n  components: {\r\n    VChart\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      timeRange: '30',\r\n      statistics: [],\r\n      successCount: 0,\r\n      failedCount: 0,\r\n      totalCount: 0,\r\n      successRate: '0.00',\r\n      chartOption: {\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n        },\r\n        legend: {\r\n          orient: 'horizontal',\r\n          bottom: 0,\r\n          data: ['成功', '失败', '执行中']\r\n        },\r\n        series: [\r\n          {\r\n            name: '执行状态',\r\n            type: 'pie',\r\n            radius: ['50%', '70%'],\r\n            avoidLabelOverlap: false,\r\n            itemStyle: {\r\n              borderRadius: 10,\r\n              borderColor: '#fff',\r\n              borderWidth: 2\r\n            },\r\n            label: {\r\n              show: false,\r\n              position: 'center'\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: '18',\r\n                fontWeight: 'bold'\r\n              }\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            },\r\n            data: [\r\n              { value: 0, name: '成功', itemStyle: { color: '#67c23a' } },\r\n              { value: 0, name: '失败', itemStyle: { color: '#f56c6c' } },\r\n              { value: 0, name: '执行中', itemStyle: { color: '#409eff' } }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchData();\r\n  },\r\n  methods: {\r\n    async fetchData() {\r\n      this.loading = true;\r\n      \r\n      try {\r\n        // 计算日期范围\r\n        const endDate = new Date();\r\n        const startDate = new Date();\r\n        startDate.setDate(endDate.getDate() - parseInt(this.timeRange));\r\n        \r\n        const params = {\r\n          period: 'day',\r\n          start_date: this.formatDate(startDate),\r\n          end_date: this.formatDate(endDate)\r\n        };\r\n        \r\n        const response = await axios.get('/api/execution/statistics', { params });\r\n        \r\n        if (response.data.code === 0) {\r\n          this.statistics = response.data.data;\r\n          this.processData();\r\n        } else {\r\n          this.$message.error(response.data.message || '获取统计数据失败');\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('获取统计数据失败: ' + error.message);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    formatDate(date) {\r\n      const year = date.getFullYear();\r\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n      const day = date.getDate().toString().padStart(2, '0');\r\n      return `${year}-${month}-${day}`;\r\n    },\r\n    processData() {\r\n      if (!this.statistics || !this.statistics.length) {\r\n        this.successCount = 0;\r\n        this.failedCount = 0;\r\n        this.totalCount = 0;\r\n        this.successRate = '0.00';\r\n        this.updateChart(0, 0, 0);\r\n        return;\r\n      }\r\n      \r\n      // 计算总数\r\n      this.successCount = this.statistics.reduce((sum, item) => sum + parseInt(item.success_count || 0), 0);\r\n      this.failedCount = this.statistics.reduce((sum, item) => sum + parseInt(item.failed_count || 0), 0);\r\n      this.totalCount = this.successCount + this.failedCount;\r\n      \r\n      // 计算成功率\r\n      if (this.totalCount > 0) {\r\n        this.successRate = ((this.successCount / this.totalCount) * 100).toFixed(2);\r\n      } else {\r\n        this.successRate = '0.00';\r\n      }\r\n      \r\n      // 计算执行中的数量\r\n      const runningCount = this.statistics.reduce((sum, item) => {\r\n        const total = parseInt(item.total_count || 0);\r\n        const success = parseInt(item.success_count || 0);\r\n        const failed = parseInt(item.failed_count || 0);\r\n        return sum + (total - success - failed);\r\n      }, 0);\r\n      \r\n      // 更新图表\r\n      this.updateChart(this.successCount, this.failedCount, runningCount);\r\n    },\r\n    updateChart(success, failed, running) {\r\n      this.chartOption.series[0].data = [\r\n        { value: success, name: '成功', itemStyle: { color: '#67c23a' } },\r\n        { value: failed, name: '失败', itemStyle: { color: '#f56c6c' } },\r\n        { value: running, name: '执行中', itemStyle: { color: '#409eff' } }\r\n      ];\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.execution-status-card {\r\n  margin-bottom: 20px;\r\n  \r\n  .chart-card {\r\n    .card-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      \r\n      h3 {\r\n        margin: 0;\r\n        font-size: 16px;\r\n        font-weight: 500;\r\n      }\r\n    }\r\n    \r\n    .chart-container {\r\n      display: flex;\r\n      \r\n      .stats-summary {\r\n        width: 40%;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        \r\n        .stat-item {\r\n          width: 50%;\r\n          padding: 15px;\r\n          text-align: center;\r\n          \r\n          .stat-value {\r\n            font-size: 24px;\r\n            font-weight: bold;\r\n            margin-bottom: 5px;\r\n          }\r\n          \r\n          .stat-label {\r\n            font-size: 14px;\r\n            color: #909399;\r\n          }\r\n          \r\n          &.success .stat-value {\r\n            color: #67c23a;\r\n          }\r\n          \r\n          &.failed .stat-value {\r\n            color: #f56c6c;\r\n          }\r\n          \r\n          &.rate .stat-value {\r\n            color: #409eff;\r\n          }\r\n          \r\n          &.total .stat-value {\r\n            color: #e6a23c;\r\n          }\r\n        }\r\n      }\r\n      \r\n      .pie-chart {\r\n        flex: 1;\r\n        height: 200px;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}