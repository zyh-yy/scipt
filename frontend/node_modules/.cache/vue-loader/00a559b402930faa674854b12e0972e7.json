{"remainingRequest":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\src\\components\\ScriptExecutionTrend.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\src\\components\\ScriptExecutionTrend.vue","mtime":1747319762523},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747314279003},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1747314323395},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747314279003},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1747314281934}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOw0KaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4JzsNCmltcG9ydCBWQ2hhcnQgZnJvbSAndnVlLWVjaGFydHMnOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdTY3JpcHRFeGVjdXRpb25UcmVuZCcsDQogIGNvbXBvbmVudHM6IHsNCiAgICBWQ2hhcnQNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgbG9hZGluZzogZmFsc2UsDQogICAgICBzZWxlY3RlZFNjcmlwdDogbnVsbCwNCiAgICAgIHRpbWVSYW5nZTogJzMwJywNCiAgICAgIHRyZW5kRGF0YTogW10sDQogICAgICB0cmVuZE9wdGlvbjogew0KICAgICAgICB0b29sdGlwOiB7DQogICAgICAgICAgdHJpZ2dlcjogJ2F4aXMnLA0KICAgICAgICAgIGF4aXNQb2ludGVyOiB7DQogICAgICAgICAgICB0eXBlOiAnc2hhZG93Jw0KICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgbGVnZW5kOiB7DQogICAgICAgICAgZGF0YTogWyfmiafooYzmrKHmlbAnLCAn5oiQ5Yqf546HJywgJ+W5s+Wdh+aJp+ihjOaXtumXtCddDQogICAgICAgIH0sDQogICAgICAgIGdyaWQ6IHsNCiAgICAgICAgICBsZWZ0OiAnMyUnLA0KICAgICAgICAgIHJpZ2h0OiAnNCUnLA0KICAgICAgICAgIGJvdHRvbTogJzMlJywNCiAgICAgICAgICBjb250YWluTGFiZWw6IHRydWUNCiAgICAgICAgfSwNCiAgICAgICAgeEF4aXM6IFsNCiAgICAgICAgICB7DQogICAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLA0KICAgICAgICAgICAgZGF0YTogW10sDQogICAgICAgICAgICBheGlzUG9pbnRlcjogew0KICAgICAgICAgICAgICB0eXBlOiAnc2hhZG93Jw0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0NCiAgICAgICAgXSwNCiAgICAgICAgeUF4aXM6IFsNCiAgICAgICAgICB7DQogICAgICAgICAgICB0eXBlOiAndmFsdWUnLA0KICAgICAgICAgICAgbmFtZTogJ+aJp+ihjOasoeaVsCcsDQogICAgICAgICAgICBtaW46IDAsDQogICAgICAgICAgICBheGlzTGFiZWw6IHsNCiAgICAgICAgICAgICAgZm9ybWF0dGVyOiAne3ZhbHVlfScNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9LA0KICAgICAgICAgIHsNCiAgICAgICAgICAgIHR5cGU6ICd2YWx1ZScsDQogICAgICAgICAgICBuYW1lOiAn55m+5YiG5q+UL+aXtumXtCcsDQogICAgICAgICAgICBtaW46IDAsDQogICAgICAgICAgICBtYXg6IDEwMCwNCiAgICAgICAgICAgIGF4aXNMYWJlbDogew0KICAgICAgICAgICAgICBmb3JtYXR0ZXI6ICd7dmFsdWV9Jw0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0NCiAgICAgICAgXSwNCiAgICAgICAgc2VyaWVzOiBbDQogICAgICAgICAgew0KICAgICAgICAgICAgbmFtZTogJ+aJp+ihjOasoeaVsCcsDQogICAgICAgICAgICB0eXBlOiAnYmFyJywNCiAgICAgICAgICAgIGRhdGE6IFtdLA0KICAgICAgICAgICAgY29sb3I6ICcjNDA5ZWZmJw0KICAgICAgICAgIH0sDQogICAgICAgICAgew0KICAgICAgICAgICAgbmFtZTogJ+aIkOWKn+eOhycsDQogICAgICAgICAgICB0eXBlOiAnbGluZScsDQogICAgICAgICAgICB5QXhpc0luZGV4OiAxLA0KICAgICAgICAgICAgZGF0YTogW10sDQogICAgICAgICAgICBjb2xvcjogJyM2N2MyM2EnLA0KICAgICAgICAgICAgc3ltYm9sOiAnY2lyY2xlJywNCiAgICAgICAgICAgIHN5bWJvbFNpemU6IDgNCiAgICAgICAgICB9LA0KICAgICAgICAgIHsNCiAgICAgICAgICAgIG5hbWU6ICflubPlnYfmiafooYzml7bpl7QnLA0KICAgICAgICAgICAgdHlwZTogJ2xpbmUnLA0KICAgICAgICAgICAgeUF4aXNJbmRleDogMSwNCiAgICAgICAgICAgIGRhdGE6IFtdLA0KICAgICAgICAgICAgY29sb3I6ICcjZTZhMjNjJywNCiAgICAgICAgICAgIHN5bWJvbDogJ3RyaWFuZ2xlJywNCiAgICAgICAgICAgIHN5bWJvbFNpemU6IDgNCiAgICAgICAgICB9DQogICAgICAgIF0NCiAgICAgIH0NCiAgICB9Ow0KICB9LA0KICBjb21wdXRlZDogew0KICAgIC4uLm1hcFN0YXRlKFsnc2NyaXB0cyddKQ0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIHRoaXMuZmV0Y2hTY3JpcHRzKCk7DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBmZXRjaFNjcmlwdHMoKSB7DQogICAgICBpZiAodGhpcy5zY3JpcHRzLmxlbmd0aCA9PT0gMCkgew0KICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZmV0Y2hTY3JpcHRzJykudGhlbigoKSA9PiB7DQogICAgICAgICAgaWYgKHRoaXMuc2NyaXB0cy5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICB0aGlzLnNlbGVjdGVkU2NyaXB0ID0gdGhpcy5zY3JpcHRzWzBdLmlkOw0KICAgICAgICAgICAgdGhpcy5mZXRjaFRyZW5kKCk7DQogICAgICAgICAgfQ0KICAgICAgICB9KTsNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHRoaXMuc2VsZWN0ZWRTY3JpcHQgPSB0aGlzLnNjcmlwdHNbMF0uaWQ7DQogICAgICAgIHRoaXMuZmV0Y2hUcmVuZCgpOw0KICAgICAgfQ0KICAgIH0sDQogICAgYXN5bmMgZmV0Y2hUcmVuZCgpIHsNCiAgICAgIGlmICghdGhpcy5zZWxlY3RlZFNjcmlwdCkgcmV0dXJuOw0KICAgICAgDQogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOw0KICAgICAgDQogICAgICB0cnkgew0KICAgICAgICAvLyDorqHnrpfml6XmnJ/ojIPlm7QNCiAgICAgICAgY29uc3QgZW5kRGF0ZSA9IG5ldyBEYXRlKCk7DQogICAgICAgIGNvbnN0IHN0YXJ0RGF0ZSA9IG5ldyBEYXRlKCk7DQogICAgICAgIHN0YXJ0RGF0ZS5zZXREYXRlKGVuZERhdGUuZ2V0RGF0ZSgpIC0gcGFyc2VJbnQodGhpcy50aW1lUmFuZ2UpKTsNCiAgICAgICAgDQogICAgICAgIGNvbnN0IHBhcmFtcyA9IHsNCiAgICAgICAgICBwZXJpb2Q6ICdkYXknLA0KICAgICAgICAgIHNjcmlwdF9pZDogdGhpcy5zZWxlY3RlZFNjcmlwdCwNCiAgICAgICAgICBzdGFydF9kYXRlOiB0aGlzLmZvcm1hdERhdGUoc3RhcnREYXRlKSwNCiAgICAgICAgICBlbmRfZGF0ZTogdGhpcy5mb3JtYXREYXRlKGVuZERhdGUpDQogICAgICAgIH07DQogICAgICAgIA0KICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCgnL2FwaS9leGVjdXRpb24vc3RhdGlzdGljcycsIHsgcGFyYW1zIH0pOw0KICAgICAgICANCiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuY29kZSA9PT0gMCkgew0KICAgICAgICAgIHRoaXMudHJlbmREYXRhID0gcmVzcG9uc2UuZGF0YS5kYXRhOw0KICAgICAgICAgIHRoaXMudXBkYXRlQ2hhcnQoKTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKHJlc3BvbnNlLmRhdGEubWVzc2FnZSB8fCAn6I635Y+W6LaL5Yq/5pWw5o2u5aSx6LSlJyk7DQogICAgICAgIH0NCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+iOt+WPlui2i+WKv+aVsOaNruWksei0pTogJyArIGVycm9yLm1lc3NhZ2UpOw0KICAgICAgfSBmaW5hbGx5IHsNCiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7DQogICAgICB9DQogICAgfSwNCiAgICBmb3JtYXREYXRlKGRhdGUpIHsNCiAgICAgIGNvbnN0IHllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCk7DQogICAgICBjb25zdCBtb250aCA9IChkYXRlLmdldE1vbnRoKCkgKyAxKS50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJyk7DQogICAgICBjb25zdCBkYXkgPSBkYXRlLmdldERhdGUoKS50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJyk7DQogICAgICByZXR1cm4gYCR7eWVhcn0tJHttb250aH0tJHtkYXl9YDsNCiAgICB9LA0KICAgIHVwZGF0ZUNoYXJ0KCkgew0KICAgICAgaWYgKCF0aGlzLnRyZW5kRGF0YSB8fCAhdGhpcy50cmVuZERhdGEubGVuZ3RoKSB7DQogICAgICAgIHRoaXMudHJlbmRPcHRpb24ueEF4aXNbMF0uZGF0YSA9IFtdOw0KICAgICAgICB0aGlzLnRyZW5kT3B0aW9uLnNlcmllc1swXS5kYXRhID0gW107DQogICAgICAgIHRoaXMudHJlbmRPcHRpb24uc2VyaWVzWzFdLmRhdGEgPSBbXTsNCiAgICAgICAgdGhpcy50cmVuZE9wdGlvbi5zZXJpZXNbMl0uZGF0YSA9IFtdOw0KICAgICAgICByZXR1cm47DQogICAgICB9DQogICAgICANCiAgICAgIC8vIOaPkOWPluaVsOaNrg0KICAgICAgY29uc3QgdGltZUxhYmVscyA9IHRoaXMudHJlbmREYXRhLm1hcChpdGVtID0+IGl0ZW0udGltZV9wZXJpb2QpOw0KICAgICAgY29uc3QgdG90YWxDb3VudHMgPSB0aGlzLnRyZW5kRGF0YS5tYXAoaXRlbSA9PiBpdGVtLnRvdGFsX2NvdW50KTsNCiAgICAgIA0KICAgICAgLy8g6K6h566X5oiQ5Yqf546HDQogICAgICBjb25zdCBzdWNjZXNzUmF0ZXMgPSB0aGlzLnRyZW5kRGF0YS5tYXAoaXRlbSA9PiB7DQogICAgICAgIGlmIChpdGVtLnRvdGFsX2NvdW50ID4gMCkgew0KICAgICAgICAgIHJldHVybiAoKGl0ZW0uc3VjY2Vzc19jb3VudCAvIGl0ZW0udG90YWxfY291bnQpICogMTAwKS50b0ZpeGVkKDIpOw0KICAgICAgICB9DQogICAgICAgIHJldHVybiAwOw0KICAgICAgfSk7DQogICAgICANCiAgICAgIC8vIOW5s+Wdh+aJp+ihjOaXtumXtO+8iOenku+8iQ0KICAgICAgY29uc3QgYXZnVGltZXMgPSB0aGlzLnRyZW5kRGF0YS5tYXAoaXRlbSA9PiB7DQogICAgICAgIGlmIChpdGVtLmF2Z19leGVjdXRpb25fdGltZSkgew0KICAgICAgICAgIC8vIOWmguaenOW5s+Wdh+aJp+ihjOaXtumXtOi2hei/hzEwMOenku+8jOi/m+ihjOe8qeaUvuS7peS+v+WcqOWbvuihqOS4iuaYvuekug0KICAgICAgICAgIGNvbnN0IHRpbWUgPSBOdW1iZXIoaXRlbS5hdmdfZXhlY3V0aW9uX3RpbWUpOw0KICAgICAgICAgIHJldHVybiB0aW1lID4gMTAwID8gMTAwIDogdGltZS50b0ZpeGVkKDIpOw0KICAgICAgICB9DQogICAgICAgIHJldHVybiAwOw0KICAgICAgfSk7DQogICAgICANCiAgICAgIC8vIOabtOaWsOWbvuihqA0KICAgICAgdGhpcy50cmVuZE9wdGlvbi54QXhpc1swXS5kYXRhID0gdGltZUxhYmVsczsNCiAgICAgIHRoaXMudHJlbmRPcHRpb24uc2VyaWVzWzBdLmRhdGEgPSB0b3RhbENvdW50czsNCiAgICAgIHRoaXMudHJlbmRPcHRpb24uc2VyaWVzWzFdLmRhdGEgPSBzdWNjZXNzUmF0ZXM7DQogICAgICB0aGlzLnRyZW5kT3B0aW9uLnNlcmllc1syXS5kYXRhID0gYXZnVGltZXM7DQogICAgfQ0KICB9DQp9Ow0K"},{"version":3,"sources":["ScriptExecutionTrend.vue"],"names":[],"mappings":";AA2BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ScriptExecutionTrend.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"script-execution-trend\">\r\n    <el-card class=\"chart-card\" v-loading=\"loading\">\r\n      <div slot=\"header\" class=\"card-header\">\r\n        <h3>脚本执行趋势</h3>\r\n        <div class=\"controls\">\r\n          <el-select v-model=\"selectedScript\" size=\"small\" placeholder=\"选择脚本\" clearable @change=\"fetchTrend\">\r\n            <el-option\r\n              v-for=\"script in scripts\"\r\n              :key=\"script.id\"\r\n              :label=\"script.name\"\r\n              :value=\"script.id\"\r\n            ></el-option>\r\n          </el-select>\r\n          <el-select v-model=\"timeRange\" size=\"small\" style=\"margin-left: 10px\" @change=\"fetchTrend\">\r\n            <el-option label=\"最近7天\" value=\"7\"></el-option>\r\n            <el-option label=\"最近30天\" value=\"30\"></el-option>\r\n            <el-option label=\"最近90天\" value=\"90\"></el-option>\r\n          </el-select>\r\n        </div>\r\n      </div>\r\n      <v-chart class=\"chart\" :option=\"trendOption\" autoresize />\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { mapState } from 'vuex';\r\nimport VChart from 'vue-echarts';\r\n\r\nexport default {\r\n  name: 'ScriptExecutionTrend',\r\n  components: {\r\n    VChart\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      selectedScript: null,\r\n      timeRange: '30',\r\n      trendData: [],\r\n      trendOption: {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        legend: {\r\n          data: ['执行次数', '成功率', '平均执行时间']\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: [\r\n          {\r\n            type: 'category',\r\n            data: [],\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            }\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: 'value',\r\n            name: '执行次数',\r\n            min: 0,\r\n            axisLabel: {\r\n              formatter: '{value}'\r\n            }\r\n          },\r\n          {\r\n            type: 'value',\r\n            name: '百分比/时间',\r\n            min: 0,\r\n            max: 100,\r\n            axisLabel: {\r\n              formatter: '{value}'\r\n            }\r\n          }\r\n        ],\r\n        series: [\r\n          {\r\n            name: '执行次数',\r\n            type: 'bar',\r\n            data: [],\r\n            color: '#409eff'\r\n          },\r\n          {\r\n            name: '成功率',\r\n            type: 'line',\r\n            yAxisIndex: 1,\r\n            data: [],\r\n            color: '#67c23a',\r\n            symbol: 'circle',\r\n            symbolSize: 8\r\n          },\r\n          {\r\n            name: '平均执行时间',\r\n            type: 'line',\r\n            yAxisIndex: 1,\r\n            data: [],\r\n            color: '#e6a23c',\r\n            symbol: 'triangle',\r\n            symbolSize: 8\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(['scripts'])\r\n  },\r\n  mounted() {\r\n    this.fetchScripts();\r\n  },\r\n  methods: {\r\n    fetchScripts() {\r\n      if (this.scripts.length === 0) {\r\n        this.$store.dispatch('fetchScripts').then(() => {\r\n          if (this.scripts.length > 0) {\r\n            this.selectedScript = this.scripts[0].id;\r\n            this.fetchTrend();\r\n          }\r\n        });\r\n      } else {\r\n        this.selectedScript = this.scripts[0].id;\r\n        this.fetchTrend();\r\n      }\r\n    },\r\n    async fetchTrend() {\r\n      if (!this.selectedScript) return;\r\n      \r\n      this.loading = true;\r\n      \r\n      try {\r\n        // 计算日期范围\r\n        const endDate = new Date();\r\n        const startDate = new Date();\r\n        startDate.setDate(endDate.getDate() - parseInt(this.timeRange));\r\n        \r\n        const params = {\r\n          period: 'day',\r\n          script_id: this.selectedScript,\r\n          start_date: this.formatDate(startDate),\r\n          end_date: this.formatDate(endDate)\r\n        };\r\n        \r\n        const response = await axios.get('/api/execution/statistics', { params });\r\n        \r\n        if (response.data.code === 0) {\r\n          this.trendData = response.data.data;\r\n          this.updateChart();\r\n        } else {\r\n          this.$message.error(response.data.message || '获取趋势数据失败');\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('获取趋势数据失败: ' + error.message);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    formatDate(date) {\r\n      const year = date.getFullYear();\r\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n      const day = date.getDate().toString().padStart(2, '0');\r\n      return `${year}-${month}-${day}`;\r\n    },\r\n    updateChart() {\r\n      if (!this.trendData || !this.trendData.length) {\r\n        this.trendOption.xAxis[0].data = [];\r\n        this.trendOption.series[0].data = [];\r\n        this.trendOption.series[1].data = [];\r\n        this.trendOption.series[2].data = [];\r\n        return;\r\n      }\r\n      \r\n      // 提取数据\r\n      const timeLabels = this.trendData.map(item => item.time_period);\r\n      const totalCounts = this.trendData.map(item => item.total_count);\r\n      \r\n      // 计算成功率\r\n      const successRates = this.trendData.map(item => {\r\n        if (item.total_count > 0) {\r\n          return ((item.success_count / item.total_count) * 100).toFixed(2);\r\n        }\r\n        return 0;\r\n      });\r\n      \r\n      // 平均执行时间（秒）\r\n      const avgTimes = this.trendData.map(item => {\r\n        if (item.avg_execution_time) {\r\n          // 如果平均执行时间超过100秒，进行缩放以便在图表上显示\r\n          const time = Number(item.avg_execution_time);\r\n          return time > 100 ? 100 : time.toFixed(2);\r\n        }\r\n        return 0;\r\n      });\r\n      \r\n      // 更新图表\r\n      this.trendOption.xAxis[0].data = timeLabels;\r\n      this.trendOption.series[0].data = totalCounts;\r\n      this.trendOption.series[1].data = successRates;\r\n      this.trendOption.series[2].data = avgTimes;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.chart-card {\r\n  margin-bottom: 20px;\r\n  \r\n  .card-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    \r\n    h3 {\r\n      margin: 0;\r\n      font-size: 16px;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n  \r\n  .chart {\r\n    height: 300px;\r\n  }\r\n}\r\n</style>\r\n"]}]}