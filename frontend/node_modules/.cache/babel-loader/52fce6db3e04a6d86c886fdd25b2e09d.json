{"remainingRequest":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\src\\components\\ScriptCountChart.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\src\\components\\ScriptCountChart.vue","mtime":1747320496914},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747314279003},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1747314323395},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747314279003},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1747314281934}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IFZDaGFydCBmcm9tICd2dWUtZWNoYXJ0cyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnU2NyaXB0Q291bnRDaGFydCcsCiAgY29tcG9uZW50czogewogICAgVkNoYXJ0CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgIHRpbWVSYW5nZTogJzkwJywKICAgICAgY2hhcnRPcHRpb246IHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogJ+iEmuacrOaVsOmHj+WPmOWMlicsCiAgICAgICAgICBsZWZ0OiAnY2VudGVyJwogICAgICAgIH0sCiAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgdHJpZ2dlcjogJ2F4aXMnLAogICAgICAgICAgYXhpc1BvaW50ZXI6IHsKICAgICAgICAgICAgdHlwZTogJ3NoYWRvdycKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgZGF0YTogWyfmlrDlop7ohJrmnKwnLCAn57Sv6K6h6ISa5pysJ10sCiAgICAgICAgICBib3R0b206IDEwCiAgICAgICAgfSwKICAgICAgICBncmlkOiB7CiAgICAgICAgICBsZWZ0OiAnMyUnLAogICAgICAgICAgcmlnaHQ6ICc0JScsCiAgICAgICAgICBib3R0b206ICcxNSUnLAogICAgICAgICAgdG9wOiAnMTUlJywKICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgeEF4aXM6IHsKICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsCiAgICAgICAgICBkYXRhOiBbXSwKICAgICAgICAgIGF4aXNMYWJlbDogewogICAgICAgICAgICByb3RhdGU6IDQ1CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB5QXhpczogW3sKICAgICAgICAgIHR5cGU6ICd2YWx1ZScsCiAgICAgICAgICBuYW1lOiAn5paw5aKe5pWw6YePJywKICAgICAgICAgIHBvc2l0aW9uOiAnbGVmdCcsCiAgICAgICAgICBheGlzTGluZTogewogICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogJyNFNkEyM0MnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBheGlzTGFiZWw6IHsKICAgICAgICAgICAgZm9ybWF0dGVyOiAne3ZhbHVlfScKICAgICAgICAgIH0KICAgICAgICB9LCB7CiAgICAgICAgICB0eXBlOiAndmFsdWUnLAogICAgICAgICAgbmFtZTogJ+e0r+iuoeaVsOmHjycsCiAgICAgICAgICBwb3NpdGlvbjogJ3JpZ2h0JywKICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnIzQwOUVGRicKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNMYWJlbDogewogICAgICAgICAgICBmb3JtYXR0ZXI6ICd7dmFsdWV9JwogICAgICAgICAgfQogICAgICAgIH1dLAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIG5hbWU6ICfmlrDlop7ohJrmnKwnLAogICAgICAgICAgdHlwZTogJ2JhcicsCiAgICAgICAgICBkYXRhOiBbXSwKICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICBjb2xvcjogJyNFNkEyM0MnCiAgICAgICAgICB9CiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogJ+e0r+iuoeiEmuacrCcsCiAgICAgICAgICB0eXBlOiAnbGluZScsCiAgICAgICAgICB5QXhpc0luZGV4OiAxLAogICAgICAgICAgZGF0YTogW10sCiAgICAgICAgICBzeW1ib2w6ICdjaXJjbGUnLAogICAgICAgICAgc3ltYm9sU2l6ZTogOCwKICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICBjb2xvcjogJyM0MDlFRkYnCiAgICAgICAgICB9LAogICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgIHdpZHRoOiAzCiAgICAgICAgICB9CiAgICAgICAgfV0KICAgICAgfQogICAgfTsKICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmZldGNoRGF0YSgpOwogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgZmV0Y2hEYXRhKCkgewogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICB0cnkgewogICAgICAgIC8vIOiuoeeul+aXpeacn+iMg+WbtAogICAgICAgIGNvbnN0IGVuZERhdGUgPSBuZXcgRGF0ZSgpOwogICAgICAgIGNvbnN0IHN0YXJ0RGF0ZSA9IG5ldyBEYXRlKCk7CiAgICAgICAgc3RhcnREYXRlLnNldERhdGUoZW5kRGF0ZS5nZXREYXRlKCkgLSBwYXJzZUludCh0aGlzLnRpbWVSYW5nZSkpOwoKICAgICAgICAvLyDojrflj5bohJrmnKzliJfooagKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCgnL2FwaS9zY3JpcHRzJyk7CiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuY29kZSA9PT0gMCkgewogICAgICAgICAgdGhpcy5wcm9jZXNzRGF0YShyZXNwb25zZS5kYXRhLmRhdGEpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKHJlc3BvbnNlLmRhdGEubWVzc2FnZSB8fCAn6I635Y+W6ISa5pys5pWw5o2u5aSx6LSlJyk7CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+iOt+WPluiEmuacrOaVsOaNruWksei0pTogJyArIGVycm9yLm1lc3NhZ2UpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICB9CiAgICB9LAogICAgcHJvY2Vzc0RhdGEoc2NyaXB0cykgewogICAgICBpZiAoIXNjcmlwdHMgfHwgIXNjcmlwdHMubGVuZ3RoKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICAvLyDlhYjop6PmnpDliJvlu7rml7bpl7TvvIzlubbmjInml7bpl7TmjpLluo8KICAgICAgY29uc3Qgc2NyaXB0c1dpdGhUaW1lID0gc2NyaXB0cy5tYXAoc2NyaXB0ID0+IHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgLi4uc2NyaXB0LAogICAgICAgICAgY3JlYXRlZF90aW1lOiBuZXcgRGF0ZShzY3JpcHQuY3JlYXRlZF9hdCkKICAgICAgICB9OwogICAgICB9KS5zb3J0KChhLCBiKSA9PiBhLmNyZWF0ZWRfdGltZSAtIGIuY3JlYXRlZF90aW1lKTsKCiAgICAgIC8vIOehruWumuaXpeacn+iMg+WbtOWSjOmXtOmalAogICAgICBjb25zdCBkYXlzID0gcGFyc2VJbnQodGhpcy50aW1lUmFuZ2UpOwogICAgICBjb25zdCBlbmREYXRlID0gbmV3IERhdGUoKTsKICAgICAgY29uc3Qgc3RhcnREYXRlID0gbmV3IERhdGUoKTsKICAgICAgc3RhcnREYXRlLnNldERhdGUoZW5kRGF0ZS5nZXREYXRlKCkgLSBkYXlzKTsKCiAgICAgIC8vIOWGs+WumuaXpeacn+WIhue7hOaWueW8jwogICAgICBsZXQgaW50ZXJ2YWwgPSAnZGF5JzsKICAgICAgbGV0IGZvcm1hdCA9ICdNTS1ERCc7CiAgICAgIGlmIChkYXlzID4gMTIwKSB7CiAgICAgICAgaW50ZXJ2YWwgPSAnd2Vlayc7CiAgICAgICAgZm9ybWF0ID0gJ3l5eXktTU0tREQnOwogICAgICB9IGVsc2UgaWYgKGRheXMgPiA2MCkgewogICAgICAgIGludGVydmFsID0gJ3dlZWsnOwogICAgICAgIGZvcm1hdCA9ICdNTS1ERCc7CiAgICAgIH0KCiAgICAgIC8vIOagueaNrumXtOmalOWIm+W7uuaXpeacn+WIhue7hAogICAgICBjb25zdCBkYXRlR3JvdXBzID0gW107CiAgICAgIGNvbnN0IGN1cnJlbnREYXRlID0gbmV3IERhdGUoc3RhcnREYXRlKTsKICAgICAgd2hpbGUgKGN1cnJlbnREYXRlIDw9IGVuZERhdGUpIHsKICAgICAgICBjb25zdCBkYXRlS2V5ID0gdGhpcy5mb3JtYXREYXRlKGN1cnJlbnREYXRlLCBmb3JtYXQpOwogICAgICAgIGRhdGVHcm91cHMucHVzaCh7CiAgICAgICAgICBkYXRlOiBuZXcgRGF0ZShjdXJyZW50RGF0ZSksCiAgICAgICAgICBkYXRlS2V5LAogICAgICAgICAgY291bnQ6IDAKICAgICAgICB9KTsKCiAgICAgICAgLy8g5qC55o2u6Ze06ZqU5aKe5Yqg5pel5pyfCiAgICAgICAgaWYgKGludGVydmFsID09PSAnZGF5JykgewogICAgICAgICAgY3VycmVudERhdGUuc2V0RGF0ZShjdXJyZW50RGF0ZS5nZXREYXRlKCkgKyAxKTsKICAgICAgICB9IGVsc2UgaWYgKGludGVydmFsID09PSAnd2VlaycpIHsKICAgICAgICAgIGN1cnJlbnREYXRlLnNldERhdGUoY3VycmVudERhdGUuZ2V0RGF0ZSgpICsgNyk7CiAgICAgICAgfQogICAgICB9CgogICAgICAvLyDnu5/orqHmr4/kuKrml7bpl7TmrrXlhoXnmoTmlrDlop7ohJrmnKzmlbDph48KICAgICAgc2NyaXB0c1dpdGhUaW1lLmZvckVhY2goc2NyaXB0ID0+IHsKICAgICAgICBpZiAoc2NyaXB0LmNyZWF0ZWRfdGltZSA+PSBzdGFydERhdGUgJiYgc2NyaXB0LmNyZWF0ZWRfdGltZSA8PSBlbmREYXRlKSB7CiAgICAgICAgICAvLyDmib7liLDohJrmnKzliJvlu7rml7bpl7Tlr7nlupTnmoTml6XmnJ/nu4QKICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0ZUdyb3Vwcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAvLyDlpoLmnpzmmK/mnIDlkI7kuIDkuKrnu4TmiJbogIXliJvlu7rml7bpl7TlsI/kuo7kuIvkuIDkuKrnu4TnmoTml6XmnJ/vvIzliJnorqHlhaXlvZPliY3nu4QKICAgICAgICAgICAgaWYgKGkgPT09IGRhdGVHcm91cHMubGVuZ3RoIC0gMSB8fCBzY3JpcHQuY3JlYXRlZF90aW1lIDwgZGF0ZUdyb3Vwc1tpICsgMV0uZGF0ZSkgewogICAgICAgICAgICAgIGRhdGVHcm91cHNbaV0uY291bnQrKzsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7CgogICAgICAvLyDlpITnkIbntK/orqHmlbAKICAgICAgbGV0IHRvdGFsQ291bnQgPSBzY3JpcHRzV2l0aFRpbWUuZmlsdGVyKHMgPT4gcy5jcmVhdGVkX3RpbWUgPCBzdGFydERhdGUpLmxlbmd0aDsKICAgICAgY29uc3QgY3VtdWxhdGl2ZUNvdW50cyA9IFtdOwogICAgICBkYXRlR3JvdXBzLmZvckVhY2goZ3JvdXAgPT4gewogICAgICAgIHRvdGFsQ291bnQgKz0gZ3JvdXAuY291bnQ7CiAgICAgICAgY3VtdWxhdGl2ZUNvdW50cy5wdXNoKHRvdGFsQ291bnQpOwogICAgICB9KTsKCiAgICAgIC8vIOabtOaWsOWbvuihqOaVsOaNrgogICAgICB0aGlzLmNoYXJ0T3B0aW9uLnhBeGlzLmRhdGEgPSBkYXRlR3JvdXBzLm1hcChnID0+IGcuZGF0ZUtleSk7CiAgICAgIHRoaXMuY2hhcnRPcHRpb24uc2VyaWVzWzBdLmRhdGEgPSBkYXRlR3JvdXBzLm1hcChnID0+IGcuY291bnQpOwogICAgICB0aGlzLmNoYXJ0T3B0aW9uLnNlcmllc1sxXS5kYXRhID0gY3VtdWxhdGl2ZUNvdW50czsKCiAgICAgIC8vIOabtOaWsOagh+mimAogICAgICB0aGlzLmNoYXJ0T3B0aW9uLnRpdGxlLnRleHQgPSBg6ISa5pys5pWw6YeP5Y+Y5YyWICgke3RoaXMuZm9ybWF0RGF0ZShzdGFydERhdGUsICd5eXl5LU1NLWRkJyl9IOiHsyAke3RoaXMuZm9ybWF0RGF0ZShlbmREYXRlLCAneXl5eS1NTS1kZCcpfSlgOwogICAgfSwKICAgIGZvcm1hdERhdGUoZGF0ZSwgZm9ybWF0ID0gJ3l5eXktTU0tZGQnKSB7CiAgICAgIGNvbnN0IHllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCk7CiAgICAgIGNvbnN0IG1vbnRoID0gKGRhdGUuZ2V0TW9udGgoKSArIDEpLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKTsKICAgICAgY29uc3QgZGF5ID0gZGF0ZS5nZXREYXRlKCkudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpOwogICAgICBpZiAoZm9ybWF0ID09PSAneXl5eS1NTS1kZCcpIHsKICAgICAgICByZXR1cm4gYCR7eWVhcn0tJHttb250aH0tJHtkYXl9YDsKICAgICAgfSBlbHNlIGlmIChmb3JtYXQgPT09ICdNTS1ERCcpIHsKICAgICAgICByZXR1cm4gYCR7bW9udGh9LSR7ZGF5fWA7CiAgICAgIH0gZWxzZSBpZiAoZm9ybWF0ID09PSAneXl5eS1NTScpIHsKICAgICAgICByZXR1cm4gYCR7eWVhcn0tJHttb250aH1gOwogICAgICB9CiAgICAgIHJldHVybiBgJHt5ZWFyfS0ke21vbnRofS0ke2RheX1gOwogICAgfQogIH0KfTs="},{"version":3,"names":["axios","VChart","name","components","data","loading","timeRange","chartOption","title","text","left","tooltip","trigger","axisPointer","type","legend","bottom","grid","right","top","containLabel","xAxis","axisLabel","rotate","yAxis","position","axisLine","lineStyle","color","formatter","series","itemStyle","yAxisIndex","symbol","symbolSize","width","mounted","fetchData","methods","endDate","Date","startDate","setDate","getDate","parseInt","response","get","code","processData","$message","error","message","scripts","length","scriptsWithTime","map","script","created_time","created_at","sort","a","b","days","interval","format","dateGroups","currentDate","dateKey","formatDate","push","date","count","forEach","i","totalCount","filter","s","cumulativeCounts","group","g","year","getFullYear","month","getMonth","toString","padStart","day"],"sources":["src/components/ScriptCountChart.vue"],"sourcesContent":["<template>\r\n  <div class=\"script-count-chart\">\r\n    <el-card class=\"chart-card\" v-loading=\"loading\">\r\n      <div slot=\"header\" class=\"card-header\">\r\n        <h3>脚本数量变化</h3>\r\n        <el-select \r\n          v-model=\"timeRange\" \r\n          size=\"small\" \r\n          @change=\"fetchData\"\r\n        >\r\n          <el-option label=\"最近30天\" value=\"30\"></el-option>\r\n          <el-option label=\"最近90天\" value=\"90\"></el-option>\r\n          <el-option label=\"最近半年\" value=\"180\"></el-option>\r\n          <el-option label=\"最近一年\" value=\"365\"></el-option>\r\n        </el-select>\r\n      </div>\r\n      <v-chart class=\"chart\" :option=\"chartOption\" autoresize />\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport VChart from 'vue-echarts';\r\n\r\nexport default {\r\n  name: 'ScriptCountChart',\r\n  components: {\r\n    VChart\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      timeRange: '90',\r\n      chartOption: {\r\n        title: {\r\n          text: '脚本数量变化',\r\n          left: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        legend: {\r\n          data: ['新增脚本', '累计脚本'],\r\n          bottom: 10\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '15%',\r\n          top: '15%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: [],\r\n          axisLabel: {\r\n            rotate: 45\r\n          }\r\n        },\r\n        yAxis: [\r\n          {\r\n            type: 'value',\r\n            name: '新增数量',\r\n            position: 'left',\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: '#E6A23C'\r\n              }\r\n            },\r\n            axisLabel: {\r\n              formatter: '{value}'\r\n            }\r\n          },\r\n          {\r\n            type: 'value',\r\n            name: '累计数量',\r\n            position: 'right',\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: '#409EFF'\r\n              }\r\n            },\r\n            axisLabel: {\r\n              formatter: '{value}'\r\n            }\r\n          }\r\n        ],\r\n        series: [\r\n          {\r\n            name: '新增脚本',\r\n            type: 'bar',\r\n            data: [],\r\n            itemStyle: {\r\n              color: '#E6A23C'\r\n            }\r\n          },\r\n          {\r\n            name: '累计脚本',\r\n            type: 'line',\r\n            yAxisIndex: 1,\r\n            data: [],\r\n            symbol: 'circle',\r\n            symbolSize: 8,\r\n            itemStyle: {\r\n              color: '#409EFF'\r\n            },\r\n            lineStyle: {\r\n              width: 3\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchData();\r\n  },\r\n  methods: {\r\n    async fetchData() {\r\n      this.loading = true;\r\n      \r\n      try {\r\n        // 计算日期范围\r\n        const endDate = new Date();\r\n        const startDate = new Date();\r\n        startDate.setDate(endDate.getDate() - parseInt(this.timeRange));\r\n        \r\n        // 获取脚本列表\r\n        const response = await axios.get('/api/scripts');\r\n        \r\n        if (response.data.code === 0) {\r\n          this.processData(response.data.data);\r\n        } else {\r\n          this.$message.error(response.data.message || '获取脚本数据失败');\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('获取脚本数据失败: ' + error.message);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    processData(scripts) {\r\n      if (!scripts || !scripts.length) {\r\n        return;\r\n      }\r\n      \r\n      // 先解析创建时间，并按时间排序\r\n      const scriptsWithTime = scripts.map(script => {\r\n        return {\r\n          ...script,\r\n          created_time: new Date(script.created_at)\r\n        };\r\n      }).sort((a, b) => a.created_time - b.created_time);\r\n      \r\n      // 确定日期范围和间隔\r\n      const days = parseInt(this.timeRange);\r\n      const endDate = new Date();\r\n      const startDate = new Date();\r\n      startDate.setDate(endDate.getDate() - days);\r\n      \r\n      // 决定日期分组方式\r\n      let interval = 'day';\r\n      let format = 'MM-DD';\r\n      \r\n      if (days > 120) {\r\n        interval = 'week';\r\n        format = 'yyyy-MM-DD';\r\n      } else if (days > 60) {\r\n        interval = 'week';\r\n        format = 'MM-DD';\r\n      }\r\n      \r\n      // 根据间隔创建日期分组\r\n      const dateGroups = [];\r\n      const currentDate = new Date(startDate);\r\n      \r\n      while (currentDate <= endDate) {\r\n        const dateKey = this.formatDate(currentDate, format);\r\n        dateGroups.push({\r\n          date: new Date(currentDate),\r\n          dateKey,\r\n          count: 0\r\n        });\r\n        \r\n        // 根据间隔增加日期\r\n        if (interval === 'day') {\r\n          currentDate.setDate(currentDate.getDate() + 1);\r\n        } else if (interval === 'week') {\r\n          currentDate.setDate(currentDate.getDate() + 7);\r\n        }\r\n      }\r\n      \r\n      // 统计每个时间段内的新增脚本数量\r\n      scriptsWithTime.forEach(script => {\r\n        if (script.created_time >= startDate && script.created_time <= endDate) {\r\n          // 找到脚本创建时间对应的日期组\r\n          for (let i = 0; i < dateGroups.length; i++) {\r\n            // 如果是最后一个组或者创建时间小于下一个组的日期，则计入当前组\r\n            if (i === dateGroups.length - 1 || script.created_time < dateGroups[i + 1].date) {\r\n              dateGroups[i].count++;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      });\r\n      \r\n      // 处理累计数\r\n      let totalCount = scriptsWithTime.filter(s => s.created_time < startDate).length;\r\n      const cumulativeCounts = [];\r\n      \r\n      dateGroups.forEach(group => {\r\n        totalCount += group.count;\r\n        cumulativeCounts.push(totalCount);\r\n      });\r\n      \r\n      // 更新图表数据\r\n      this.chartOption.xAxis.data = dateGroups.map(g => g.dateKey);\r\n      this.chartOption.series[0].data = dateGroups.map(g => g.count);\r\n      this.chartOption.series[1].data = cumulativeCounts;\r\n      \r\n      // 更新标题\r\n      this.chartOption.title.text = `脚本数量变化 (${this.formatDate(startDate, 'yyyy-MM-dd')} 至 ${this.formatDate(endDate, 'yyyy-MM-dd')})`;\r\n    },\r\n    formatDate(date, format = 'yyyy-MM-dd') {\r\n      const year = date.getFullYear();\r\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n      const day = date.getDate().toString().padStart(2, '0');\r\n      \r\n      if (format === 'yyyy-MM-dd') {\r\n        return `${year}-${month}-${day}`;\r\n      } else if (format === 'MM-DD') {\r\n        return `${month}-${day}`;\r\n      } else if (format === 'yyyy-MM') {\r\n        return `${year}-${month}`;\r\n      }\r\n      \r\n      return `${year}-${month}-${day}`;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.chart-card {\r\n  margin-bottom: 20px;\r\n  \r\n  .card-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    \r\n    h3 {\r\n      margin: 0;\r\n      font-size: 16px;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n  \r\n  .chart {\r\n    height: 300px;\r\n    margin-top: 10px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]}]}