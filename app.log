2025-05-15 20:59:49,655 - config - INFO - 数据库初始化成功
2025-05-15 20:59:49,660 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-15 20:59:51,043 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-15 20:59:51,043 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-15 20:59:51,047 - werkzeug - INFO -  * Restarting with stat
2025-05-15 20:59:51,482 - config - INFO - 数据库初始化成功
2025-05-15 20:59:51,486 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-15 20:59:51,545 - werkzeug - WARNING -  * Debugger is active!
2025-05-15 20:59:51,549 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-15 21:23:54,302 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:23:54] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 21:23:54,302 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:23:54] "GET /api/chains HTTP/1.1" 200 -
2025-05-15 21:23:54,303 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:23:54] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-15 21:23:55,761 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:23:55] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 21:23:58,494 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:23:58] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 21:23:58,495 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:23:58] "GET /api/chains HTTP/1.1" 200 -
2025-05-15 21:23:58,496 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:23:58] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-15 21:24:02,678 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:24:02] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 21:30:02,779 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:30:02] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 21:30:02,780 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:30:02] "GET /api/chains HTTP/1.1" 200 -
2025-05-15 21:30:02,780 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:30:02] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-15 21:30:29,466 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:30:29] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 21:38:18,422 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\routes\\scripts.py', reloading
2025-05-15 21:38:18,473 - werkzeug - INFO -  * Restarting with stat
2025-05-15 21:38:18,971 - config - INFO - 数据库初始化成功
2025-05-15 21:38:18,976 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-15 21:38:19,036 - werkzeug - WARNING -  * Debugger is active!
2025-05-15 21:38:19,040 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-15 21:38:43,876 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\routes\\scripts.py', reloading
2025-05-15 21:38:43,916 - werkzeug - INFO -  * Restarting with stat
2025-05-15 21:38:44,371 - config - INFO - 数据库初始化成功
2025-05-15 21:38:44,375 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-15 21:38:44,424 - werkzeug - WARNING -  * Debugger is active!
2025-05-15 21:38:44,429 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-15 21:43:12,419 - config - INFO - 数据库初始化成功
2025-05-15 21:43:12,424 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-15 21:43:13,810 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-15 21:43:13,810 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-15 21:43:13,813 - werkzeug - INFO -  * Restarting with stat
2025-05-15 21:43:14,209 - config - INFO - 数据库初始化成功
2025-05-15 21:43:14,214 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-15 21:43:14,259 - werkzeug - WARNING -  * Debugger is active!
2025-05-15 21:43:14,264 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-15 21:43:18,653 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:43:18] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-15 21:43:18,653 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:43:18] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 21:43:18,654 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:43:18] "GET /api/chains HTTP/1.1" 200 -
2025-05-15 21:43:18,977 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:43:18] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 21:43:19,815 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:43:19] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 21:43:19,816 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:43:19] "GET /api/chains HTTP/1.1" 200 -
2025-05-15 21:43:19,817 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:43:19] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-15 21:43:20,061 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:43:20] "GET /api/chains HTTP/1.1" 200 -
2025-05-15 21:43:20,327 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:43:20] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 21:43:20,742 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:43:20] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 21:43:21,323 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:43:21] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 21:43:21,324 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:43:21] "GET /api/chains HTTP/1.1" 200 -
2025-05-15 21:43:21,325 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:43:21] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-15 21:43:22,214 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:43:22] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 21:43:34,639 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:43:34] "POST /api/scripts/upload-file HTTP/1.1" 200 -
2025-05-15 21:48:48,275 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:48:48] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 21:48:48,276 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:48:48] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-15 21:48:48,286 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:48:48] "GET /api/chains HTTP/1.1" 200 -
2025-05-15 21:48:50,323 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:48:50] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 21:49:00,046 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:49:00] "POST /api/scripts/upload-file HTTP/1.1" 200 -
2025-05-15 21:49:12,492 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:49:12] "POST /api/scripts/upload-file HTTP/1.1" 200 -
2025-05-15 21:49:18,790 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:49:18] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 21:49:18,797 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:49:18] "GET /api/chains HTTP/1.1" 200 -
2025-05-15 21:49:18,799 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:49:18] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-15 21:49:19,446 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 21:49:19] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 21:59:05,722 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\base.py', reloading
2025-05-15 21:59:05,764 - werkzeug - INFO -  * Restarting with stat
2025-05-15 21:59:06,204 - config - INFO - 数据库初始化成功
2025-05-15 21:59:06,209 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-15 21:59:06,252 - werkzeug - WARNING -  * Debugger is active!
2025-05-15 21:59:06,255 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-15 22:00:09,624 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\script.py', reloading
2025-05-15 22:00:09,656 - werkzeug - INFO -  * Restarting with stat
2025-05-15 22:00:09,967 - config - INFO - 数据库初始化成功
2025-05-15 22:00:09,970 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-15 22:00:10,008 - werkzeug - WARNING -  * Debugger is active!
2025-05-15 22:00:10,011 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-15 22:00:48,020 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\chain.py', reloading
2025-05-15 22:00:48,048 - werkzeug - INFO -  * Restarting with stat
2025-05-15 22:00:48,423 - config - INFO - 数据库初始化成功
2025-05-15 22:00:48,428 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-15 22:00:48,502 - werkzeug - WARNING -  * Debugger is active!
2025-05-15 22:00:48,505 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-15 22:02:08,628 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\execution.py', reloading
2025-05-15 22:02:08,667 - werkzeug - INFO -  * Restarting with stat
2025-05-15 22:02:09,170 - config - INFO - 数据库初始化成功
2025-05-15 22:02:09,174 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-15 22:02:09,209 - werkzeug - WARNING -  * Debugger is active!
2025-05-15 22:02:09,211 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-15 22:02:51,515 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\schedule.py', reloading
2025-05-15 22:02:51,551 - werkzeug - INFO -  * Restarting with stat
2025-05-15 22:02:51,851 - config - INFO - 数据库初始化成功
2025-05-15 22:02:51,854 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-15 22:02:51,889 - werkzeug - WARNING -  * Debugger is active!
2025-05-15 22:02:51,893 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-15 22:03:52,584 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\ai_generator.py', reloading
2025-05-15 22:03:52,644 - werkzeug - INFO -  * Restarting with stat
2025-05-15 22:03:52,917 - config - INFO - 数据库初始化成功
2025-05-15 22:03:52,921 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-15 22:03:52,952 - werkzeug - WARNING -  * Debugger is active!
2025-05-15 22:03:52,956 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-15 22:06:57,048 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\__init__.py', reloading
2025-05-15 22:06:57,080 - werkzeug - INFO -  * Restarting with stat
2025-05-15 22:30:18,657 - config - INFO - 数据库初始化成功
2025-05-15 22:30:18,663 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-15 22:30:19,998 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-15 22:30:19,998 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-15 22:30:20,000 - werkzeug - INFO -  * Restarting with stat
2025-05-15 22:30:20,931 - config - INFO - 数据库初始化成功
2025-05-15 22:30:20,939 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-15 22:30:20,971 - werkzeug - WARNING -  * Debugger is active!
2025-05-15 22:30:20,974 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-15 22:30:40,880 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:30:40] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 22:30:40,881 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:30:40] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-15 22:30:40,891 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:30:40] "GET /api/chains HTTP/1.1" 200 -
2025-05-15 22:30:41,771 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:30:41] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-15 22:30:43,167 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:30:43] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-15 22:30:43,415 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:30:43] "GET /api/schedule HTTP/1.1" 200 -
2025-05-15 22:30:43,604 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:30:43] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 22:30:43,605 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:30:43] "GET /api/chains HTTP/1.1" 200 -
2025-05-15 22:30:43,737 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:30:43] "GET /api/chains HTTP/1.1" 200 -
2025-05-15 22:30:44,042 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:30:44] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 22:30:44,385 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:30:44] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 22:30:44,635 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:30:44] "GET /api/chains HTTP/1.1" 200 -
2025-05-15 22:30:44,635 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:30:44] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-15 22:30:44,636 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:30:44] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 22:30:46,406 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:30:46] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 22:30:47,263 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:30:47] "GET /api/chains HTTP/1.1" 200 -
2025-05-15 22:30:47,264 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:30:47] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 22:30:47,814 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:30:47] "GET /api/schedule HTTP/1.1" 200 -
2025-05-15 22:30:48,119 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:30:48] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 22:30:48,120 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:30:48] "GET /api/chains HTTP/1.1" 200 -
2025-05-15 22:30:48,892 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:30:48] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-15 22:30:50,762 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:30:50] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 22:30:58,139 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:30:58] "POST /api/scripts/upload-file HTTP/1.1" 200 -
2025-05-15 22:31:01,749 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:31:01] "GET /api/chains HTTP/1.1" 200 -
2025-05-15 22:31:02,050 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:31:02] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 22:31:02,390 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:31:02] "GET /api/schedule HTTP/1.1" 200 -
2025-05-15 22:31:02,390 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:31:02] "GET /api/scripts HTTP/1.1" 200 -
2025-05-15 22:31:02,391 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:31:02] "GET /api/chains HTTP/1.1" 200 -
2025-05-15 22:31:02,654 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:31:02] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-15 22:31:02,833 - werkzeug - INFO - 127.0.0.1 - - [15/May/2025 22:31:02] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-15 22:39:14,862 - config - INFO - 数据库初始化成功
2025-05-15 22:39:14,869 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-15 22:39:16,220 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-15 22:39:16,220 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-15 22:39:16,222 - werkzeug - INFO -  * Restarting with stat
2025-05-15 22:39:17,096 - config - INFO - 数据库初始化成功
2025-05-15 22:39:17,103 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-15 22:39:17,135 - werkzeug - WARNING -  * Debugger is active!
2025-05-15 22:39:17,137 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-15 22:51:49,413 - config - INFO - 数据库初始化成功
2025-05-15 22:51:49,422 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-15 22:51:50,784 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-15 22:51:50,785 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-15 22:51:50,788 - werkzeug - INFO -  * Restarting with stat
2025-05-15 22:51:52,889 - config - INFO - 数据库初始化成功
2025-05-15 22:51:52,899 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-15 22:51:52,955 - werkzeug - WARNING -  * Debugger is active!
2025-05-15 22:51:52,960 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-15 22:55:34,317 - config - INFO - 数据库初始化成功
2025-05-15 22:55:34,327 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-15 22:55:35,696 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-15 22:55:35,696 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-15 22:55:35,698 - werkzeug - INFO -  * Restarting with stat
2025-05-15 22:55:36,986 - config - INFO - 数据库初始化成功
2025-05-15 22:55:36,995 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-15 22:55:37,042 - werkzeug - WARNING -  * Debugger is active!
2025-05-15 22:55:37,047 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-15 23:12:15,342 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\routes\\alert.py', reloading
2025-05-15 23:12:15,401 - werkzeug - INFO -  * Restarting with stat
2025-05-15 23:12:16,994 - config - INFO - 数据库初始化成功
2025-05-15 23:12:17,004 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-15 23:12:17,050 - werkzeug - WARNING -  * Debugger is active!
2025-05-15 23:12:17,053 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-15 23:25:22,981 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\base.py', reloading
2025-05-15 23:25:23,034 - werkzeug - INFO -  * Restarting with stat
2025-05-15 23:30:57,767 - backend.config - INFO - 数据库初始化成功
2025-05-15 23:30:57,771 - backend.config - ERROR - 添加脚本失败: table scripts has no column named url_path
2025-05-15 23:30:57,776 - backend.config - ERROR - 添加脚本失败: table scripts has no column named url_path
2025-05-15 23:30:57,779 - backend.config - ERROR - 添加脚本失败: table scripts has no column named url_path
2025-05-15 23:30:57,782 - backend.config - ERROR - 添加脚本失败: table scripts has no column named url_path
2025-05-15 23:30:57,784 - backend.config - ERROR - 添加脚本失败: table scripts has no column named url_path
2025-05-15 23:30:57,799 - backend.config - INFO - 添加告警配置成功: 脚本执行失败告警
2025-05-15 23:30:57,806 - backend.config - INFO - 添加告警配置成功: 执行时间过长告警
2025-05-15 23:30:57,811 - backend.config - INFO - 添加告警配置成功: 脚本链执行失败告警
2025-05-15 23:31:59,775 - backend.config - INFO - 数据库初始化成功
2025-05-15 23:31:59,779 - backend.config - ERROR - 添加脚本失败: table scripts has no column named url_path
2025-05-15 23:31:59,782 - backend.config - ERROR - 添加脚本失败: table scripts has no column named url_path
2025-05-15 23:31:59,784 - backend.config - ERROR - 添加脚本失败: table scripts has no column named url_path
2025-05-15 23:31:59,787 - backend.config - ERROR - 添加脚本失败: table scripts has no column named url_path
2025-05-15 23:31:59,788 - backend.config - ERROR - 添加脚本失败: table scripts has no column named url_path
2025-05-15 23:31:59,799 - backend.config - INFO - 添加告警配置成功: 脚本执行失败告警
2025-05-15 23:31:59,806 - backend.config - INFO - 添加告警配置成功: 执行时间过长告警
2025-05-15 23:31:59,812 - backend.config - INFO - 添加告警配置成功: 脚本链执行失败告警
2025-05-15 23:34:28,259 - backend.config - INFO - 数据库初始化成功
2025-05-15 23:34:49,312 - backend.config - INFO - 数据库初始化成功
2025-05-15 23:34:49,337 - backend.config - INFO - 添加脚本成功: 系统信息获取
2025-05-15 23:34:49,346 - backend.config - INFO - 添加脚本参数成功: filter 属于脚本ID 2
2025-05-15 23:34:49,355 - backend.config - INFO - 添加脚本成功: 文件生成器
2025-05-15 23:34:49,362 - backend.config - INFO - 添加脚本参数成功: file_path 属于脚本ID 3
2025-05-15 23:34:49,369 - backend.config - INFO - 添加脚本参数成功: size_kb 属于脚本ID 3
2025-05-15 23:34:49,375 - backend.config - INFO - 添加脚本参数成功: content_type 属于脚本ID 3
2025-05-15 23:34:49,383 - backend.config - INFO - 添加脚本成功: 日志分析器
2025-05-15 23:34:49,388 - backend.config - INFO - 添加脚本参数成功: file_path 属于脚本ID 4
2025-05-15 23:34:49,393 - backend.config - INFO - 添加脚本参数成功: pattern 属于脚本ID 4
2025-05-15 23:34:49,399 - backend.config - INFO - 添加脚本参数成功: time_window 属于脚本ID 4
2025-05-15 23:34:49,407 - backend.config - INFO - 添加脚本成功: 数据库备份
2025-05-15 23:34:49,415 - backend.config - INFO - 添加脚本参数成功: db_path 属于脚本ID 5
2025-05-15 23:34:49,420 - backend.config - INFO - 添加脚本参数成功: backup_dir 属于脚本ID 5
2025-05-15 23:34:49,425 - backend.config - INFO - 添加脚本参数成功: compress 属于脚本ID 5
2025-05-15 23:34:49,432 - backend.config - INFO - 添加脚本成功: 网络诊断
2025-05-15 23:34:49,438 - backend.config - INFO - 添加脚本参数成功: targets 属于脚本ID 6
2025-05-15 23:34:49,444 - backend.config - INFO - 添加脚本链成功: 系统信息收集与备份
2025-05-15 23:34:49,450 - backend.config - INFO - 添加脚本链节点成功: 链ID 1, 脚本ID 2, 序号 1
2025-05-15 23:35:36,496 - backend.config - INFO - 数据库初始化成功
2025-05-15 23:35:36,512 - backend.config - INFO - 添加脚本成功: 系统信息获取
2025-05-15 23:35:36,519 - backend.config - INFO - 添加脚本参数成功: filter 属于脚本ID 7
2025-05-15 23:35:36,530 - backend.config - INFO - 添加脚本成功: 文件生成器
2025-05-15 23:35:36,538 - backend.config - INFO - 添加脚本参数成功: file_path 属于脚本ID 8
2025-05-15 23:35:36,546 - backend.config - INFO - 添加脚本参数成功: size_kb 属于脚本ID 8
2025-05-15 23:35:36,551 - backend.config - INFO - 添加脚本参数成功: content_type 属于脚本ID 8
2025-05-15 23:35:36,559 - backend.config - INFO - 添加脚本成功: 日志分析器
2025-05-15 23:35:36,566 - backend.config - INFO - 添加脚本参数成功: file_path 属于脚本ID 9
2025-05-15 23:35:36,572 - backend.config - INFO - 添加脚本参数成功: pattern 属于脚本ID 9
2025-05-15 23:35:36,580 - backend.config - INFO - 添加脚本参数成功: time_window 属于脚本ID 9
2025-05-15 23:35:36,587 - backend.config - INFO - 添加脚本成功: 数据库备份
2025-05-15 23:35:36,594 - backend.config - INFO - 添加脚本参数成功: db_path 属于脚本ID 10
2025-05-15 23:35:36,600 - backend.config - INFO - 添加脚本参数成功: backup_dir 属于脚本ID 10
2025-05-15 23:35:36,608 - backend.config - INFO - 添加脚本参数成功: compress 属于脚本ID 10
2025-05-15 23:35:36,617 - backend.config - INFO - 添加脚本成功: 网络诊断
2025-05-15 23:35:36,624 - backend.config - INFO - 添加脚本参数成功: targets 属于脚本ID 11
2025-05-15 23:35:36,637 - backend.config - INFO - 添加脚本链成功: 系统信息收集与备份
2025-05-15 23:35:36,644 - backend.config - INFO - 添加脚本链节点成功: 链ID 2, 脚本ID 7, 序号 1
2025-05-15 23:37:06,955 - backend.config - INFO - 数据库初始化成功
2025-05-15 23:37:06,964 - backend.config - INFO - 添加脚本成功: 系统信息获取
2025-05-15 23:37:06,972 - backend.config - INFO - 添加脚本参数成功: filter 属于脚本ID 12
2025-05-15 23:37:06,980 - backend.config - INFO - 添加脚本成功: 文件生成器
2025-05-15 23:37:06,989 - backend.config - INFO - 添加脚本参数成功: file_path 属于脚本ID 13
2025-05-15 23:37:06,998 - backend.config - INFO - 添加脚本参数成功: size_kb 属于脚本ID 13
2025-05-15 23:37:07,013 - backend.config - INFO - 添加脚本参数成功: content_type 属于脚本ID 13
2025-05-15 23:37:07,024 - backend.config - INFO - 添加脚本成功: 日志分析器
2025-05-15 23:37:07,030 - backend.config - INFO - 添加脚本参数成功: file_path 属于脚本ID 14
2025-05-15 23:37:07,038 - backend.config - INFO - 添加脚本参数成功: pattern 属于脚本ID 14
2025-05-15 23:37:07,045 - backend.config - INFO - 添加脚本参数成功: time_window 属于脚本ID 14
2025-05-15 23:37:07,054 - backend.config - INFO - 添加脚本成功: 数据库备份
2025-05-15 23:37:07,062 - backend.config - INFO - 添加脚本参数成功: db_path 属于脚本ID 15
2025-05-15 23:37:07,070 - backend.config - INFO - 添加脚本参数成功: backup_dir 属于脚本ID 15
2025-05-15 23:37:07,078 - backend.config - INFO - 添加脚本参数成功: compress 属于脚本ID 15
2025-05-15 23:37:07,086 - backend.config - INFO - 添加脚本成功: 网络诊断
2025-05-15 23:37:07,095 - backend.config - INFO - 添加脚本参数成功: targets 属于脚本ID 16
2025-05-15 23:37:07,107 - backend.config - INFO - 添加脚本链成功: 系统信息收集与备份
2025-05-15 23:37:07,117 - backend.config - INFO - 添加脚本链节点成功: 链ID 3, 脚本ID 12, 序号 1
2025-05-15 23:37:07,126 - backend.config - INFO - 添加脚本链节点成功: 链ID 3, 脚本ID 15, 序号 2
2025-05-15 23:37:07,137 - backend.config - INFO - 添加脚本链成功: 文件生成与分析
2025-05-15 23:37:07,144 - backend.config - INFO - 添加脚本链节点成功: 链ID 4, 脚本ID 13, 序号 1
2025-05-15 23:37:07,152 - backend.config - INFO - 添加脚本链节点成功: 链ID 4, 脚本ID 14, 序号 2
2025-05-15 23:37:07,163 - backend.config - INFO - 添加脚本链成功: 完整诊断流程
2025-05-15 23:37:07,172 - backend.config - INFO - 添加脚本链节点成功: 链ID 5, 脚本ID 12, 序号 1
2025-05-15 23:37:07,182 - backend.config - INFO - 添加脚本链节点成功: 链ID 5, 脚本ID 16, 序号 2
2025-05-15 23:37:07,192 - backend.config - INFO - 添加脚本链节点成功: 链ID 5, 脚本ID 15, 序号 3
2025-05-15 23:37:07,203 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 12, 链ID None
2025-05-15 23:37:07,226 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 12, 链ID None
2025-05-15 23:37:07,249 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 12, 链ID None
2025-05-15 23:37:07,274 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 12, 链ID None
2025-05-15 23:37:07,294 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 13, 链ID None
2025-05-15 23:37:07,318 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 13, 链ID None
2025-05-15 23:37:07,343 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 13, 链ID None
2025-05-15 23:37:07,372 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 14, 链ID None
2025-05-15 23:37:07,393 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 14, 链ID None
2025-05-15 23:37:07,413 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 14, 链ID None
2025-05-15 23:37:07,432 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 15, 链ID None
2025-05-15 23:37:07,450 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 15, 链ID None
2025-05-15 23:37:07,468 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 15, 链ID None
2025-05-15 23:37:07,486 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 15, 链ID None
2025-05-15 23:37:07,504 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 16, 链ID None
2025-05-15 23:37:07,521 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 16, 链ID None
2025-05-15 23:37:07,541 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 16, 链ID None
2025-05-15 23:37:07,557 - backend.config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 3
2025-05-15 23:37:07,573 - backend.config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 3
2025-05-15 23:37:07,589 - backend.config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 3
2025-05-15 23:37:07,604 - backend.config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 3
2025-05-15 23:37:07,619 - backend.config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 4
2025-05-15 23:37:07,636 - backend.config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 4
2025-05-15 23:37:07,652 - backend.config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 5
2025-05-15 23:37:07,672 - backend.config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 5
2025-05-15 23:37:07,693 - backend.config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 5
2025-05-15 23:37:07,711 - backend.config - INFO - 添加告警配置成功: 脚本执行失败告警
2025-05-15 23:37:07,720 - backend.config - INFO - 添加告警配置成功: 执行时间过长告警
2025-05-15 23:37:07,730 - backend.config - INFO - 添加告警配置成功: 脚本链执行失败告警
2025-05-15 23:37:07,739 - backend.config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 1
2025-05-15 23:37:07,749 - backend.config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 4
2025-05-15 23:37:07,755 - backend.config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 8
2025-05-15 23:37:07,762 - backend.config - INFO - 添加告警历史记录成功: 配置ID 2, 执行ID 10
2025-05-15 23:37:07,769 - backend.config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 12
2025-05-15 23:37:07,776 - backend.config - INFO - 添加告警历史记录成功: 配置ID 2, 执行ID 16
2025-05-15 23:37:07,784 - backend.config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 19
2025-05-15 23:37:07,790 - backend.config - INFO - 添加告警历史记录成功: 配置ID 2, 执行ID 24
2025-05-15 23:37:07,805 - backend.config - INFO - 添加定时任务成功: 系统信息获取定时任务
2025-05-15 23:37:07,814 - backend.config - INFO - 添加定时任务成功: 文件生成器定时任务
2025-05-15 23:37:07,821 - backend.config - INFO - 添加定时任务成功: 日志分析器定时任务
2025-05-15 23:37:07,829 - backend.config - INFO - 添加定时任务成功: 系统信息收集与备份定时任务
2025-05-15 23:37:07,834 - backend.config - INFO - 添加定时任务成功: 文件生成与分析定时任务
2025-05-15 23:37:07,839 - backend.config - INFO - 添加定时任务成功: 完整诊断流程定时任务
2025-05-16 00:19:59,700 - config - INFO - 数据库初始化成功
2025-05-16 00:19:59,712 - backend.config - INFO - 添加脚本成功: 系统信息获取
2025-05-16 00:19:59,718 - backend.config - INFO - 添加脚本参数成功: filter 属于脚本ID 17
2025-05-16 00:19:59,727 - backend.config - INFO - 添加脚本成功: 文件生成器
2025-05-16 00:19:59,734 - backend.config - INFO - 添加脚本参数成功: file_path 属于脚本ID 18
2025-05-16 00:19:59,741 - backend.config - INFO - 添加脚本参数成功: size_kb 属于脚本ID 18
2025-05-16 00:19:59,747 - backend.config - INFO - 添加脚本参数成功: content_type 属于脚本ID 18
2025-05-16 00:19:59,754 - backend.config - INFO - 添加脚本成功: 日志分析器
2025-05-16 00:19:59,760 - backend.config - INFO - 添加脚本参数成功: file_path 属于脚本ID 19
2025-05-16 00:19:59,765 - backend.config - INFO - 添加脚本参数成功: pattern 属于脚本ID 19
2025-05-16 00:19:59,771 - backend.config - INFO - 添加脚本参数成功: time_window 属于脚本ID 19
2025-05-16 00:19:59,777 - backend.config - INFO - 添加脚本成功: 数据库备份
2025-05-16 00:19:59,782 - backend.config - INFO - 添加脚本参数成功: db_path 属于脚本ID 20
2025-05-16 00:19:59,787 - backend.config - INFO - 添加脚本参数成功: backup_dir 属于脚本ID 20
2025-05-16 00:19:59,791 - backend.config - INFO - 添加脚本参数成功: compress 属于脚本ID 20
2025-05-16 00:19:59,796 - backend.config - INFO - 添加脚本成功: 网络诊断
2025-05-16 00:19:59,800 - backend.config - INFO - 添加脚本参数成功: targets 属于脚本ID 21
2025-05-16 00:19:59,809 - backend.config - INFO - 添加脚本链成功: 系统信息收集与备份
2025-05-16 00:19:59,833 - backend.config - INFO - 添加脚本链节点成功: 链ID 6, 脚本ID 17, 序号 1
2025-05-16 00:19:59,839 - backend.config - INFO - 添加脚本链节点成功: 链ID 6, 脚本ID 20, 序号 2
2025-05-16 00:19:59,844 - backend.config - INFO - 添加脚本链成功: 文件生成与分析
2025-05-16 00:19:59,848 - backend.config - INFO - 添加脚本链节点成功: 链ID 7, 脚本ID 18, 序号 1
2025-05-16 00:19:59,854 - backend.config - INFO - 添加脚本链节点成功: 链ID 7, 脚本ID 19, 序号 2
2025-05-16 00:19:59,859 - backend.config - INFO - 添加脚本链成功: 完整诊断流程
2025-05-16 00:19:59,863 - backend.config - INFO - 添加脚本链节点成功: 链ID 8, 脚本ID 17, 序号 1
2025-05-16 00:19:59,868 - backend.config - INFO - 添加脚本链节点成功: 链ID 8, 脚本ID 21, 序号 2
2025-05-16 00:19:59,873 - backend.config - INFO - 添加脚本链节点成功: 链ID 8, 脚本ID 20, 序号 3
2025-05-16 00:19:59,880 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-16 00:19:59,886 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-16 00:19:59,893 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-16 00:19:59,907 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-16 00:19:59,921 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-16 00:19:59,934 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 18, 链ID None
2025-05-16 00:19:59,947 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 18, 链ID None
2025-05-16 00:19:59,980 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 18, 链ID None
2025-05-16 00:19:59,993 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 19, 链ID None
2025-05-16 00:20:00,005 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 19, 链ID None
2025-05-16 00:20:00,024 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 19, 链ID None
2025-05-16 00:20:00,038 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 20, 链ID None
2025-05-16 00:20:00,050 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 20, 链ID None
2025-05-16 00:20:00,064 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 20, 链ID None
2025-05-16 00:20:00,079 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 20, 链ID None
2025-05-16 00:20:00,097 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 20, 链ID None
2025-05-16 00:20:00,128 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 21, 链ID None
2025-05-16 00:20:00,142 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 21, 链ID None
2025-05-16 00:20:00,155 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 21, 链ID None
2025-05-16 00:20:00,169 - backend.config - INFO - 添加执行历史记录成功: 脚本ID 21, 链ID None
2025-05-16 00:20:00,180 - backend.config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 6
2025-05-16 00:20:00,192 - backend.config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 6
2025-05-16 00:20:00,205 - backend.config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 7
2025-05-16 00:20:00,217 - backend.config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 7
2025-05-16 00:20:00,231 - backend.config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 8
2025-05-16 00:20:00,261 - backend.config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 8
2025-05-16 00:20:00,273 - backend.config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 8
2025-05-16 00:20:00,287 - backend.config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 8
2025-05-16 00:20:00,300 - backend.config - INFO - 添加告警配置成功: 脚本执行失败告警
2025-05-16 00:20:00,305 - backend.config - INFO - 添加告警配置成功: 执行时间过长告警
2025-05-16 00:20:00,311 - backend.config - INFO - 添加告警配置成功: 脚本链执行失败告警
2025-05-16 00:20:00,319 - backend.config - INFO - 添加告警历史记录成功: 配置ID 5, 执行ID 1
2025-05-16 00:20:00,324 - backend.config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 4
2025-05-16 00:20:00,328 - backend.config - INFO - 添加告警历史记录成功: 配置ID 5, 执行ID 8
2025-05-16 00:20:00,333 - backend.config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 10
2025-05-16 00:20:00,338 - backend.config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 12
2025-05-16 00:20:00,343 - backend.config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 16
2025-05-16 00:20:00,350 - backend.config - INFO - 添加告警历史记录成功: 配置ID 5, 执行ID 19
2025-05-16 00:20:00,356 - backend.config - INFO - 添加告警历史记录成功: 配置ID 5, 执行ID 24
2025-05-16 00:20:00,360 - backend.config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 31
2025-05-16 00:20:00,366 - backend.config - INFO - 添加告警历史记录成功: 配置ID 5, 执行ID 32
2025-05-16 00:20:00,381 - backend.config - INFO - 添加定时任务成功: 系统信息获取定时任务
2025-05-16 00:20:00,389 - backend.config - INFO - 添加定时任务成功: 文件生成器定时任务
2025-05-16 00:20:00,408 - backend.config - INFO - 添加定时任务成功: 日志分析器定时任务
2025-05-16 00:20:00,414 - backend.config - INFO - 添加定时任务成功: 系统信息收集与备份定时任务
2025-05-16 00:20:00,420 - backend.config - INFO - 添加定时任务成功: 文件生成与分析定时任务
2025-05-16 00:20:00,426 - backend.config - INFO - 添加定时任务成功: 完整诊断流程定时任务
2025-05-19 23:29:58,426 - config - INFO - 数据库初始化成功
2025-05-19 23:29:58,432 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-19 23:29:59,878 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-19 23:29:59,879 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-19 23:29:59,880 - werkzeug - INFO -  * Restarting with stat
2025-05-19 23:30:00,617 - config - INFO - 数据库初始化成功
2025-05-19 23:30:00,623 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-19 23:30:00,650 - werkzeug - WARNING -  * Debugger is active!
2025-05-19 23:30:00,654 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-19 23:32:36,499 - config - INFO - 数据库初始化成功
2025-05-19 23:32:36,505 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-19 23:32:37,889 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-19 23:32:37,889 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-19 23:32:37,891 - werkzeug - INFO -  * Restarting with stat
2025-05-19 23:32:38,857 - config - INFO - 数据库初始化成功
2025-05-19 23:32:38,864 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-19 23:32:38,900 - werkzeug - WARNING -  * Debugger is active!
2025-05-19 23:32:38,904 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-19 23:41:02,305 - config - INFO - 数据库初始化成功
2025-05-19 23:41:02,312 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-19 23:41:03,650 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-19 23:41:03,650 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-19 23:41:03,651 - werkzeug - INFO -  * Restarting with stat
2025-05-19 23:41:04,403 - config - INFO - 数据库初始化成功
2025-05-19 23:41:04,408 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-19 23:41:04,435 - werkzeug - WARNING -  * Debugger is active!
2025-05-19 23:41:04,437 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-19 23:41:18,940 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:18] "GET /api/chains HTTP/1.1" 200 -
2025-05-19 23:41:18,942 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:18] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-19 23:41:18,950 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:18] "GET /api/scripts HTTP/1.1" 200 -
2025-05-19 23:41:18,989 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:18] "GET /api/execution/statistics?period=day&start_date=2025-04-19&end_date=2025-05-19 HTTP/1.1" 200 -
2025-05-19 23:41:23,771 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:23] "GET /api/scripts HTTP/1.1" 200 -
2025-05-19 23:41:24,726 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:24] "GET /api/chains HTTP/1.1" 200 -
2025-05-19 23:41:24,730 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:24] "GET /api/scripts HTTP/1.1" 200 -
2025-05-19 23:41:25,654 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:25] "GET /api/schedule HTTP/1.1" 200 -
2025-05-19 23:41:25,958 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:25] "GET /api/scripts HTTP/1.1" 200 -
2025-05-19 23:41:25,959 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:25] "GET /api/chains HTTP/1.1" 200 -
2025-05-19 23:41:26,138 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:26] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-19 23:41:26,808 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:26] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-19 23:41:28,510 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:28] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-19 23:41:29,242 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:29] "GET /api/schedule HTTP/1.1" 200 -
2025-05-19 23:41:29,244 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:29] "GET /api/scripts HTTP/1.1" 200 -
2025-05-19 23:41:29,547 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:29] "GET /api/chains HTTP/1.1" 200 -
2025-05-19 23:41:29,598 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:29] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-19 23:41:29,940 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:29] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-19 23:41:31,813 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:31] "GET /api/alert/config/4 HTTP/1.1" 200 -
2025-05-19 23:41:31,814 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:31] "GET /api/alert/history?limit=20&offset=0&config_id=4 HTTP/1.1" 200 -
2025-05-19 23:41:35,834 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:35] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-19 23:41:40,239 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:40] "GET /api/chains HTTP/1.1" 200 -
2025-05-19 23:41:40,544 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:40] "GET /api/scripts HTTP/1.1" 200 -
2025-05-19 23:41:47,100 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:47] "GET /api/scripts HTTP/1.1" 200 -
2025-05-19 23:41:49,008 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:49] "GET /api/scripts HTTP/1.1" 200 -
2025-05-19 23:41:49,010 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:49] "GET /api/chains HTTP/1.1" 200 -
2025-05-19 23:41:49,317 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:49] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-19 23:41:49,317 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:49] "GET /api/execution/statistics?period=day&start_date=2025-04-19&end_date=2025-05-19 HTTP/1.1" 200 -
2025-05-19 23:41:49,361 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:41:49] "GET /api/scripts HTTP/1.1" 200 -
2025-05-19 23:46:26,945 - config - INFO - 数据库初始化成功
2025-05-19 23:46:26,950 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-19 23:46:28,276 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-19 23:46:28,276 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-19 23:46:28,277 - werkzeug - INFO -  * Restarting with stat
2025-05-19 23:46:29,041 - config - INFO - 数据库初始化成功
2025-05-19 23:46:29,046 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-19 23:46:29,080 - werkzeug - WARNING -  * Debugger is active!
2025-05-19 23:46:29,083 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-19 23:46:42,030 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:46:42] "GET /api/execution/statistics?period=day&start_date=2025-04-19&end_date=2025-05-19 HTTP/1.1" 200 -
2025-05-19 23:46:44,087 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:46:44] "GET /api/execution/statistics?period=day&start_date=2025-04-19&end_date=2025-05-19 HTTP/1.1" 200 -
2025-05-19 23:47:19,387 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:47:19] "GET /api/scripts HTTP/1.1" 200 -
2025-05-19 23:47:19,388 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:47:19] "GET /api/chains HTTP/1.1" 200 -
2025-05-19 23:47:19,389 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:47:19] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-19 23:47:19,426 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:47:19] "GET /api/execution/statistics?period=day&start_date=2025-04-19&end_date=2025-05-19 HTTP/1.1" 200 -
2025-05-19 23:50:05,592 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\routes\\scripts.py', reloading
2025-05-19 23:50:05,670 - werkzeug - INFO -  * Restarting with stat
2025-05-19 23:50:06,532 - config - INFO - 数据库初始化成功
2025-05-19 23:50:06,537 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-19 23:50:06,566 - werkzeug - WARNING -  * Debugger is active!
2025-05-19 23:50:06,568 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-19 23:50:37,240 - config - INFO - 数据库初始化成功
2025-05-19 23:50:37,246 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-19 23:50:38,565 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-19 23:50:38,565 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-19 23:50:38,565 - werkzeug - INFO -  * Restarting with stat
2025-05-19 23:50:39,326 - config - INFO - 数据库初始化成功
2025-05-19 23:50:39,331 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-19 23:50:39,358 - werkzeug - WARNING -  * Debugger is active!
2025-05-19 23:50:39,361 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-19 23:50:48,781 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:50:48] "GET /api/chains HTTP/1.1" 200 -
2025-05-19 23:50:48,781 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:50:48] "GET /api/scripts HTTP/1.1" 200 -
2025-05-19 23:50:48,782 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:50:48] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-19 23:50:48,856 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:50:48] "GET /api/execution/statistics?period=day&start_date=2025-04-19&end_date=2025-05-19 HTTP/1.1" 200 -
2025-05-19 23:50:51,164 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:50:51] "GET /api/scripts HTTP/1.1" 200 -
2025-05-19 23:50:53,782 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:50:53] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-19&end_date=2025-05-19 HTTP/1.1" 200 -
2025-05-19 23:51:09,696 - werkzeug - INFO - 127.0.0.1 - - [19/May/2025 23:51:09] "GET /api/scripts HTTP/1.1" 200 -
2025-05-19 23:59:07,560 - config - INFO - 数据库初始化成功
2025-05-19 23:59:07,566 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-19 23:59:08,884 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-19 23:59:08,884 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-19 23:59:08,885 - werkzeug - INFO -  * Restarting with stat
2025-05-19 23:59:09,651 - config - INFO - 数据库初始化成功
2025-05-19 23:59:09,656 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-19 23:59:09,684 - werkzeug - WARNING -  * Debugger is active!
2025-05-19 23:59:09,687 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 00:07:49,526 - config - INFO - 数据库初始化成功
2025-05-20 00:07:49,533 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 00:07:50,858 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-20 00:07:50,859 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-20 00:07:50,860 - werkzeug - INFO -  * Restarting with stat
2025-05-20 00:07:51,622 - config - INFO - 数据库初始化成功
2025-05-20 00:07:51,629 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 00:07:51,655 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 00:07:51,658 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 00:13:24,537 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:13:24] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:13:24,539 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:13:24] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 00:13:24,540 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:13:24] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 00:13:24,574 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:13:24] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 00:13:46,268 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:13:46] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:21:16,416 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:21:16] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:21:16,416 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:21:16] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 00:21:16,418 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:21:16] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 00:21:16,445 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:21:16] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 00:21:21,126 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:21:21] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:25:10,114 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:25:10] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 00:25:10,116 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:25:10] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 00:25:10,116 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:25:10] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:25:10,336 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:25:10] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 00:26:17,801 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:26:17] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 00:26:17,802 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:26:17] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:26:17,804 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:26:17] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 00:26:17,835 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:26:17] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 00:38:52,336 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:38:52] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 00:38:52,352 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:38:52] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:38:52,453 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:38:52] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 00:38:52,454 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:38:52] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 00:42:55,292 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:42:55] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:42:55,292 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:42:55] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 00:42:55,299 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:42:55] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 00:42:55,524 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:42:55] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 00:43:00,110 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:43:00] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:45:23,409 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:45:23] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:46:55,139 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:46:55] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:46:55,140 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:46:55] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 00:46:55,142 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:46:55] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 00:46:55,201 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:46:55] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 00:47:30,018 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:47:30] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:47:30,018 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:47:30] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 00:47:30,020 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:47:30] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 00:47:30,050 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:47:30] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 00:47:34,425 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:47:34] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:51:08,806 - config - INFO - 添加脚本成功: fdsa
2025-05-20 00:51:08,808 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:08] "POST /api/scripts/with-file HTTP/1.1" 200 -
2025-05-20 00:51:08,858 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:08] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:51:14,484 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:14] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 00:51:14,497 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:14] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 00:51:18,952 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:18] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:51:20,316 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:20] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 00:51:20,317 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:20] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 00:51:21,882 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:21] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:51:23,295 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:23] "GET /api/scripts/20 HTTP/1.1" 200 -
2025-05-20 00:51:23,598 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:23] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 00:51:25,605 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:25] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:51:27,969 - config - INFO - 添加执行历史记录成功: 脚本ID 22, 链ID None
2025-05-20 00:51:27,970 - config - INFO - 使用Docker容器执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250520005108_create_db.py
2025-05-20 00:51:27,972 - config - ERROR - 检查Docker安装失败: [WinError 2] 系统找不到指定的文件。
2025-05-20 00:51:27,992 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 00:51:27,992 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 00:51:27,997 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 55
2025-05-20 00:51:27,998 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 00:51:27,998 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 00:51:28,003 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 55
2025-05-20 00:51:28,003 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 00:51:28,004 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 00:51:28,008 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 55
2025-05-20 00:51:28,008 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 00:51:28,008 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 00:51:28,013 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 55
2025-05-20 00:51:28,014 - config - INFO - 更新执行历史记录成功: ID 55
2025-05-20 00:51:28,014 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:28] "POST /api/execution/script/22 HTTP/1.1" 200 -
2025-05-20 00:51:34,579 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:34] "GET /api/execution/history/55 HTTP/1.1" 200 -
2025-05-20 00:51:36,172 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:36] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 00:51:38,275 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:38] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 00:51:38,283 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:38] "GET /api/execution/history?script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 00:51:38,589 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:38] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 00:51:38,590 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:38] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:51:38,912 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:38] "GET /api/execution/history?chain_id=6&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 00:51:44,090 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:44] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 00:51:44,404 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:44] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:51:44,612 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:44] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:51:46,552 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:46] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 00:51:50,986 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:50] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:51:53,652 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:53] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 00:51:53,656 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:53] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 00:51:55,057 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:55] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:51:56,104 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:56] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 00:51:56,416 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:56] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 00:51:57,806 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:57] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 00:51:59,240 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:51:59] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 00:52:01,440 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:52:01] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-05-13&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 00:52:02,699 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:52:02] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:52:03,121 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:52:03] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 00:52:28,263 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:52:28] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 00:52:31,898 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:52:31] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 00:52:34,148 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:52:34] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:52:37,569 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 00:52:37,570 - config - INFO - 使用Docker容器执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_系统信息获取.py
2025-05-20 00:52:37,573 - config - ERROR - 检查Docker安装失败: [WinError 2] 系统找不到指定的文件。
2025-05-20 00:52:37,583 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 00:52:37,583 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 00:52:37,590 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 56
2025-05-20 00:52:37,591 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 00:52:37,591 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 00:52:37,599 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 56
2025-05-20 00:52:37,599 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 00:52:37,599 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 00:52:37,607 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 56
2025-05-20 00:52:37,608 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 00:52:37,608 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 00:52:37,616 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 56
2025-05-20 00:52:37,616 - config - INFO - 更新执行历史记录成功: ID 56
2025-05-20 00:52:37,617 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:52:37] "POST /api/execution/script/17 HTTP/1.1" 200 -
2025-05-20 00:52:59,655 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:52:59] "GET /api/scripts/11 HTTP/1.1" 200 -
2025-05-20 00:52:59,961 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:52:59] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 00:53:03,601 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:53:03] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 00:53:06,590 - config - INFO - 添加执行历史记录成功: 脚本ID 21, 链ID None
2025-05-20 00:53:06,590 - config - INFO - 使用Docker容器执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_网络诊断.py
2025-05-20 00:53:06,593 - config - ERROR - 检查Docker安装失败: [WinError 2] 系统找不到指定的文件。
2025-05-20 00:53:06,602 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 00:53:06,602 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 00:53:06,609 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 57
2025-05-20 00:53:06,609 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 00:53:06,610 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 00:53:06,617 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 57
2025-05-20 00:53:06,618 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 00:53:06,618 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 00:53:06,626 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 57
2025-05-20 00:53:06,627 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 00:53:06,627 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 00:53:06,635 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 57
2025-05-20 00:53:06,635 - config - INFO - 更新执行历史记录成功: ID 57
2025-05-20 00:53:06,636 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:53:06] "POST /api/execution/script/21 HTTP/1.1" 200 -
2025-05-20 00:53:08,311 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:53:08] "GET /api/execution/history/57 HTTP/1.1" 200 -
2025-05-20 00:53:10,145 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:53:10] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 00:53:15,984 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 00:53:15] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 01:49:23,964 - config - INFO - 数据库初始化成功
2025-05-20 01:49:23,971 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 01:49:25,288 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-20 01:49:25,288 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-20 01:49:25,290 - werkzeug - INFO -  * Restarting with stat
2025-05-20 01:49:26,025 - config - INFO - 数据库初始化成功
2025-05-20 01:49:26,031 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 01:49:26,059 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 01:49:26,063 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 01:53:34,155 - config - INFO - 数据库初始化成功
2025-05-20 01:53:34,161 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 01:53:35,485 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-20 01:53:35,485 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-20 01:53:35,486 - werkzeug - INFO -  * Restarting with stat
2025-05-20 01:53:36,222 - config - INFO - 数据库初始化成功
2025-05-20 01:53:36,227 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 01:53:36,252 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 01:53:36,255 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 01:54:49,974 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 01:54:49] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 01:54:50,041 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 01:54:50] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 01:54:50,152 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 01:54:50] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 01:54:50,153 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 01:54:50] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 01:54:53,439 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 01:54:53] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 01:54:53,439 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 01:54:53] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 01:54:53,822 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 01:54:53] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 01:54:56,341 - config - INFO - 添加执行历史记录成功: 脚本ID 22, 链ID None
2025-05-20 01:54:56,342 - config - INFO - 使用Docker容器执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250520005108_create_db.py
2025-05-20 01:54:56,546 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim python /app/20250520005108_create_db.py /params/tmpmwaq88w9.json
2025-05-20 01:55:10,536 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 01:55:10] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 01:55:14,435 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 01:55:14,436 - config - INFO - 使用Docker容器执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_系统信息获取.py
2025-05-20 01:55:14,625 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim python /app/20250516001959_系统信息获取.py /params/tmpjwovpio2.json
2025-05-20 01:56:50,856 - config - INFO - 数据库初始化成功
2025-05-20 01:56:50,861 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 01:56:52,178 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-20 01:56:52,178 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-20 01:56:52,179 - werkzeug - INFO -  * Restarting with stat
2025-05-20 01:56:52,918 - config - INFO - 数据库初始化成功
2025-05-20 01:56:52,924 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 01:56:52,953 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 01:56:52,956 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 01:57:04,661 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 01:57:04,661 - config - INFO - 使用Docker容器执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_系统信息获取.py
2025-05-20 01:57:04,881 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim python /app/20250516001959_系统信息获取.py /params/tmphsu7892a.json
2025-05-20 01:57:50,793 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 01:57:50,793 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 01:57:50,799 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 60
2025-05-20 01:57:50,799 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 01:57:50,799 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 01:57:50,804 - config - INFO - 添加告警历史记录成功: 配置ID 5, 执行ID 60
2025-05-20 01:57:50,805 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 01:57:50,805 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 01:57:50,812 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 60
2025-05-20 01:57:50,812 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 01:57:50,812 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 01:57:50,819 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 60
2025-05-20 01:57:50,819 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 01:57:50,819 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 01:57:50,825 - config - INFO - 添加告警历史记录成功: 配置ID 2, 执行ID 60
2025-05-20 01:57:50,825 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 01:57:50,825 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 01:57:50,831 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 60
2025-05-20 01:57:50,831 - config - INFO - 更新执行历史记录成功: ID 60
2025-05-20 01:57:50,832 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 01:57:50] "POST /api/execution/script/17 HTTP/1.1" 200 -
2025-05-20 01:58:52,371 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 01:58:52,371 - config - INFO - 使用Docker容器执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_系统信息获取.py
2025-05-20 01:58:52,573 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim python /app/20250516001959_系统信息获取.py /params/tmpl2wxtm5i.json
2025-05-20 01:58:53,818 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 01:58:53,819 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 01:58:53,823 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 61
2025-05-20 01:58:53,823 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 01:58:53,823 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 01:58:53,828 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 61
2025-05-20 01:58:53,828 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 01:58:53,828 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 01:58:53,834 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 61
2025-05-20 01:58:53,834 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 01:58:53,834 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 01:58:53,839 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 61
2025-05-20 01:58:53,839 - config - INFO - 更新执行历史记录成功: ID 61
2025-05-20 01:58:53,840 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 01:58:53] "POST /api/execution/script/17 HTTP/1.1" 200 -
2025-05-20 02:24:17,800 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:24:17] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 02:24:25,481 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:24:25] "GET /api/alert/config/4 HTTP/1.1" 200 -
2025-05-20 02:24:25,789 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:24:25] "GET /api/alert/history?limit=20&offset=0&config_id=4 HTTP/1.1" 200 -
2025-05-20 02:24:30,621 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:24:30] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 02:24:31,912 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:24:31] "GET /api/alert/config?is_active=1 HTTP/1.1" 200 -
2025-05-20 02:24:32,521 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:24:32] "GET /api/alert/config?is_active=0 HTTP/1.1" 200 -
2025-05-20 02:24:32,790 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:24:32] "GET /api/alert/config?is_active=1 HTTP/1.1" 200 -
2025-05-20 02:24:33,082 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:24:33] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 02:24:34,103 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:24:34] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 02:24:37,469 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:24:37] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 02:24:37,476 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:24:37] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 02:24:40,836 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:24:40] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 02:25:13,565 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\utils\\docker_executor.py', reloading
2025-05-20 02:25:13,667 - werkzeug - INFO -  * Restarting with stat
2025-05-20 02:25:14,466 - config - INFO - 数据库初始化成功
2025-05-20 02:25:14,471 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 02:25:14,519 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 02:25:14,521 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 02:25:20,554 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 02:25:20,555 - config - INFO - 使用Docker容器执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_系统信息获取.py
2025-05-20 02:25:20,763 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim python /app/20250516001959_系统信息获取.py /params/tmp4ynqaz2m.json
2025-05-20 02:25:22,085 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 02:25:22,085 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 02:25:22,091 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 62
2025-05-20 02:25:22,091 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 02:25:22,091 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 02:25:22,096 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 62
2025-05-20 02:25:22,096 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 02:25:22,096 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 02:25:22,101 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 62
2025-05-20 02:25:22,101 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 02:25:22,101 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 02:25:22,107 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 62
2025-05-20 02:25:22,107 - config - INFO - 更新执行历史记录成功: ID 62
2025-05-20 02:25:22,108 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:25:22] "POST /api/execution/script/17 HTTP/1.1" 200 -
2025-05-20 02:28:17,939 - config - INFO - 数据库初始化成功
2025-05-20 02:28:17,944 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 02:28:19,254 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-20 02:28:19,254 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-20 02:28:19,255 - werkzeug - INFO -  * Restarting with stat
2025-05-20 02:28:19,975 - config - INFO - 数据库初始化成功
2025-05-20 02:28:19,981 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 02:28:20,010 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 02:28:20,012 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 02:28:32,800 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 02:28:32,800 - config - INFO - 使用Docker容器执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_系统信息获取.py
2025-05-20 02:28:33,014 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip install --no-cache-dir -r /params/requirements.txt && python /app/20250516001959_系统信息获取.py /params/tmpxjvwcl9q.json
2025-05-20 02:33:25,614 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 02:33:25,614 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 02:33:25,621 - config - INFO - 添加告警历史记录成功: 配置ID 5, 执行ID 63
2025-05-20 02:33:25,621 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 02:33:25,621 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 02:33:25,627 - config - INFO - 添加告警历史记录成功: 配置ID 2, 执行ID 63
2025-05-20 02:33:25,627 - config - INFO - 更新执行历史记录成功: ID 63
2025-05-20 02:33:25,629 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:33:25] "POST /api/execution/script/17 HTTP/1.1" 200 -
2025-05-20 02:39:22,301 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\utils\\docker_executor.py', reloading
2025-05-20 02:39:22,348 - werkzeug - INFO -  * Restarting with stat
2025-05-20 02:39:23,151 - config - INFO - 数据库初始化成功
2025-05-20 02:39:23,157 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 02:39:23,185 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 02:39:23,187 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 02:39:52,745 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\utils\\docker_executor.py', reloading
2025-05-20 02:39:52,799 - werkzeug - INFO -  * Restarting with stat
2025-05-20 02:39:53,548 - config - INFO - 数据库初始化成功
2025-05-20 02:39:53,553 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 02:39:53,580 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 02:39:53,582 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 02:41:42,979 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\routes\\execution.py', reloading
2025-05-20 02:41:43,030 - werkzeug - INFO -  * Restarting with stat
2025-05-20 02:41:43,758 - config - INFO - 数据库初始化成功
2025-05-20 02:41:43,763 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 02:41:43,789 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 02:41:43,791 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 02:42:35,734 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 02:42:35,735 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:42:35] "POST /api/execution/script/17 HTTP/1.1" 200 -
2025-05-20 02:42:35,742 - config - INFO - 更新执行进度成功: ID 64
2025-05-20 02:42:35,936 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_系统信息获取.py
2025-05-20 02:42:35,937 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-20 02:42:35,937 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir -r /params/requirements.txt && pip install --no-cache-dir psutil && python /app/20250516001959_系统信息获取.py /params/tmpgcdo9ffd.json
2025-05-20 02:42:37,272 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:42:37] "GET /api/execution/history/64 HTTP/1.1" 200 -
2025-05-20 02:42:41,225 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:42:41] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 02:42:44,976 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:42:44] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 02:42:46,069 - config - INFO - Docker执行完成，返回码: 0
2025-05-20 02:42:46,069 - config - INFO - Docker执行成功，输出长度: 4378
2025-05-20 02:42:46,082 - config - INFO - 更新执行历史记录成功: ID 64
2025-05-20 02:43:29,597 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:43:29] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 02:43:34,134 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:43:34] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 02:43:35,495 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:43:35] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 02:43:35,807 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:43:35] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 02:43:35,807 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:43:35] "GET /api/execution/history?script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 02:43:35,809 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:43:35] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 02:43:36,129 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:43:36] "GET /api/execution/history?chain_id=6&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 02:43:38,231 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:43:38] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 02:43:43,487 - config - INFO - 添加执行历史记录成功: 脚本ID 18, 链ID None
2025-05-20 02:43:43,488 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:43:43] "POST /api/execution/script/18 HTTP/1.1" 200 -
2025-05-20 02:43:43,496 - config - INFO - 更新执行进度成功: ID 65
2025-05-20 02:43:43,717 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_文件生成器.py
2025-05-20 02:43:43,717 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-20 02:43:43,717 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir -r /params/requirements.txt && pip install --no-cache-dir psutil && python /app/20250516001959_文件生成器.py /params/tmpkx8_krxp.json
2025-05-20 02:43:44,375 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:43:44] "GET /api/execution/history/65 HTTP/1.1" 200 -
2025-05-20 02:43:46,412 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:43:46] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 02:43:54,149 - config - INFO - Docker执行完成，返回码: 0
2025-05-20 02:43:54,149 - config - INFO - Docker执行成功，输出长度: 4048
2025-05-20 02:43:54,155 - config - INFO - 更新执行历史记录成功: ID 65
2025-05-20 02:43:55,887 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 02:43:55] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 14:24:48,786 - config - INFO - 数据库初始化成功
2025-05-20 14:24:48,792 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 14:24:50,137 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-20 14:24:50,137 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-20 14:24:50,138 - werkzeug - INFO -  * Restarting with stat
2025-05-20 14:24:50,836 - config - INFO - 数据库初始化成功
2025-05-20 14:24:50,841 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 14:24:50,870 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 14:24:50,873 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 14:25:08,022 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:25:08] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 14:25:08,023 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:25:08] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 14:25:08,045 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:25:08] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 14:25:08,154 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:25:08] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 14:25:12,465 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:25:12] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 14:25:20,888 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 14:25:20,889 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:25:20] "POST /api/execution/script/17 HTTP/1.1" 200 -
2025-05-20 14:25:20,900 - config - INFO - 更新执行进度成功: ID 66
2025-05-20 14:25:21,121 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_系统信息获取.py
2025-05-20 14:25:21,121 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-20 14:25:21,121 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir -r /params/requirements.txt && pip install --no-cache-dir psutil && python /app/20250516001959_系统信息获取.py /params/tmpy2zpij2y.json
2025-05-20 14:25:23,401 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:25:23] "GET /api/execution/history/66 HTTP/1.1" 200 -
2025-05-20 14:25:33,752 - config - INFO - Docker执行完成，返回码: 0
2025-05-20 14:25:33,752 - config - INFO - Docker执行成功，输出长度: 4377
2025-05-20 14:25:33,774 - config - INFO - 更新执行历史记录成功: ID 66
2025-05-20 14:25:59,426 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:25:59] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 14:26:05,433 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:26:05] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 14:26:06,504 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:26:06] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 14:26:12,043 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:26:12] "GET /api/alert/config?is_active=1 HTTP/1.1" 200 -
2025-05-20 14:26:12,523 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:26:12] "GET /api/alert/config?is_active=0 HTTP/1.1" 200 -
2025-05-20 14:26:13,320 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:26:13] "GET /api/alert/config?is_active=1 HTTP/1.1" 200 -
2025-05-20 14:26:13,588 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:26:13] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 14:26:15,114 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:26:15] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 14:26:15,432 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:26:15] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 14:26:15,433 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:26:15] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 14:26:15,434 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:26:15] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 14:26:29,192 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:26:29] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 14:26:29,447 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:26:29] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 14:26:29,899 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:26:29] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 14:26:30,204 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:26:30] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 14:26:30,205 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:26:30] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 14:26:30,240 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:26:30] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 14:26:30,595 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:26:30] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 14:26:30,962 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:26:30] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 14:26:31,419 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:26:31] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 14:26:31,422 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:26:31] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 14:26:31,732 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:26:31] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 14:26:31,780 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:26:31] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 14:26:32,137 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:26:32] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 14:27:04,890 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:27:04] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 14:27:05,205 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:27:05] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 14:27:05,206 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:27:05] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 14:27:05,207 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:27:05] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 14:27:05,630 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:27:05] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 14:27:05,949 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:27:05] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 14:27:06,244 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:27:06] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 14:27:06,586 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:27:06] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 14:27:06,855 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:27:06] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 14:27:06,906 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:27:06] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 14:27:06,907 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:27:06] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 14:27:08,124 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:27:08] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 14:27:11,452 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:27:11] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 14:27:11,769 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:27:11] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 14:27:12,392 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:27:12] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 14:28:50,076 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:28:50] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 14:28:53,457 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 14:28:53] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 14:57:26,013 - backend.config - INFO - 添加description字段
2025-05-20 14:57:26,017 - backend.config - INFO - 添加content_hash字段
2025-05-20 14:57:26,031 - backend.config - INFO - script_versions表更新成功
2025-05-20 14:59:52,487 - config - INFO - 数据库初始化成功
2025-05-20 14:59:52,494 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 14:59:53,823 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-20 14:59:53,824 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-20 14:59:53,824 - werkzeug - INFO -  * Restarting with stat
2025-05-20 14:59:54,535 - config - INFO - 数据库初始化成功
2025-05-20 14:59:54,541 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 14:59:54,568 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 14:59:54,571 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 15:00:05,393 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:00:05] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:00:05,394 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:00:05] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:00:05,449 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:00:05] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 15:00:05,526 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:00:05] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:00:07,485 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:00:07] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:00:08,517 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:00:08] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:00:08,518 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:00:08] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:00:09,024 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:00:09] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:00:13,337 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:00:13] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 15:00:15,176 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:00:15] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:00:16,899 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:00:16] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:00:17,207 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:00:17] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:00:17,409 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:00:17] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 15:00:17,719 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:00:17] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:00:17,720 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:00:17] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:00:17,742 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:00:17] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 15:00:18,039 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:00:18] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 15:00:18,394 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:00:18] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:02:57,887 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:02:57] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:05:17,303 - config - INFO - 数据库初始化成功
2025-05-20 15:05:17,309 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 15:05:18,623 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-20 15:05:18,623 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-20 15:05:18,624 - werkzeug - INFO -  * Restarting with stat
2025-05-20 15:05:19,374 - config - INFO - 数据库初始化成功
2025-05-20 15:05:19,380 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 15:05:19,405 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 15:05:19,407 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 15:05:44,013 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:44] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:05:44,118 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:44] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:05:44,145 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:44] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:05:44,147 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:44] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 15:05:45,584 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:45] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:05:48,049 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:48] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 15:05:50,186 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:50] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:05:51,057 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:51] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:05:51,058 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:51] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:05:51,397 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:51] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:05:51,787 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:51] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:05:52,003 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:52] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:05:52,101 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:52] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:05:52,102 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:52] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 15:05:52,203 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:52] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:05:52,607 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:52] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:05:52,915 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:52] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:05:52,946 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:52] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 15:05:53,228 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:53] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:05:53,261 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:53] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:05:53,293 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:53] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 15:05:54,126 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:54] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 15:05:54,947 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:54] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 15:05:57,131 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:57] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 15:05:57,135 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:57] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:05:57,437 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:57] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:05:57,759 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:57] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:05:58,079 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:05:58] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:06:02,761 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:02] "GET /api/chains/6 HTTP/1.1" 200 -
2025-05-20 15:06:03,083 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:03] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 15:06:03,084 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:03] "GET /api/scripts/20 HTTP/1.1" 200 -
2025-05-20 15:06:05,847 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:05] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:06:06,150 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:06] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:06:06,871 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:06] "GET /api/chains/6 HTTP/1.1" 200 -
2025-05-20 15:06:07,192 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:07] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 15:06:07,193 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:07] "GET /api/scripts/20 HTTP/1.1" 200 -
2025-05-20 15:06:15,390 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 6
2025-05-20 15:06:15,397 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:15] "POST /api/execution/chain/6 HTTP/1.1" 200 -
2025-05-20 15:06:15,404 - config - INFO - 更新执行进度成功: ID 67
2025-05-20 15:06:15,410 - config - INFO - 更新执行进度成功: ID 67
2025-05-20 15:06:15,620 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_系统信息获取.py
2025-05-20 15:06:15,620 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-20 15:06:15,620 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir -r /params/requirements.txt && pip install --no-cache-dir psutil && python /app/20250516001959_系统信息获取.py /params/tmpun3h_izl.json
2025-05-20 15:06:16,985 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:16] "GET /api/execution/history/67 HTTP/1.1" 200 -
2025-05-20 15:06:20,551 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:20] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:06:20,552 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:20] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:06:20,856 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:20] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:06:20,858 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:20] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 15:06:22,301 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:22] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:06:23,414 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:23] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:06:23,415 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:23] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:06:23,902 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:23] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 15:06:24,007 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:24] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:06:24,221 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:24] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:06:24,252 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:24] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:06:24,253 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:24] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:06:24,896 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:24] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:06:25,259 - config - INFO - Docker执行完成，返回码: 0
2025-05-20 15:06:25,259 - config - INFO - Docker执行成功，输出长度: 4377
2025-05-20 15:06:25,269 - config - INFO - 更新执行进度成功: ID 67
2025-05-20 15:06:25,310 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:25] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:06:25,488 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_数据库备份.py
2025-05-20 15:06:25,489 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-20 15:06:25,489 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir -r /params/requirements.txt && pip install --no-cache-dir psutil && python /app/20250516001959_数据库备份.py /params/tmpppd_emcb.json
2025-05-20 15:06:25,614 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:25] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:06:26,522 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:26] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:06:27,839 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:27] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 15:06:31,592 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:31] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:06:31,773 - config - INFO - Docker执行完成，返回码: 1
2025-05-20 15:06:31,774 - config - ERROR - Docker执行失败，错误信息: WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
错误: 数据库文件不存在: /database/scripts.db

2025-05-20 15:06:31,793 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 15:06:31,793 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 15:06:31,800 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 67
2025-05-20 15:06:31,800 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 15:06:31,801 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 15:06:31,807 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 67
2025-05-20 15:06:31,808 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 15:06:31,808 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 15:06:31,815 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 67
2025-05-20 15:06:31,815 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 15:06:31,815 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 15:06:31,822 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 67
2025-05-20 15:06:31,822 - config - INFO - 更新执行历史记录成功: ID 67
2025-05-20 15:06:31,893 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:31] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:06:31,906 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:31] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:06:54,864 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:54] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 15:06:58,907 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:06:58] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 15:07:30,523 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:07:30] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 15:07:32,196 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:07:32] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 15:07:32,197 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:07:32] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:07:32,501 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:07:32] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:08:01,549 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:08:01] "GET /api/schedule?is_active=1 HTTP/1.1" 200 -
2025-05-20 15:08:02,323 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:08:02] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 15:08:03,449 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:08:03] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:08:03,450 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:08:03] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:08:10,493 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:08:10] "GET /api/chains/8 HTTP/1.1" 200 -
2025-05-20 15:08:10,825 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:08:10] "GET /api/scripts/20 HTTP/1.1" 200 -
2025-05-20 15:08:10,826 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:08:10] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 15:08:10,840 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:08:10] "GET /api/scripts/21 HTTP/1.1" 200 -
2025-05-20 15:08:20,991 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:08:20] "GET /api/chains/4 HTTP/1.1" 200 -
2025-05-20 15:08:21,313 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:08:21] "GET /api/scripts/14 HTTP/1.1" 200 -
2025-05-20 15:08:21,313 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:08:21] "GET /api/scripts/13 HTTP/1.1" 200 -
2025-05-20 15:08:27,206 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:08:27] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:08:27,516 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:08:27] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:08:29,250 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:08:29] "GET /api/chains/4 HTTP/1.1" 200 -
2025-05-20 15:08:29,572 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:08:29] "GET /api/scripts/13 HTTP/1.1" 200 -
2025-05-20 15:08:29,574 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:08:29] "GET /api/scripts/14 HTTP/1.1" 200 -
2025-05-20 15:08:39,818 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 4
2025-05-20 15:08:39,825 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:08:39] "POST /api/execution/chain/4 HTTP/1.1" 200 -
2025-05-20 15:08:39,831 - config - INFO - 更新执行进度成功: ID 68
2025-05-20 15:08:39,838 - config - INFO - 更新执行进度成功: ID 68
2025-05-20 15:08:40,062 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250515233706_文件生成器.py
2025-05-20 15:08:40,062 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-20 15:08:40,062 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir -r /params/requirements.txt && pip install --no-cache-dir psutil && python /app/20250515233706_文件生成器.py /params/tmp_l6fekc4.json
2025-05-20 15:08:42,509 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:08:42] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:08:47,654 - config - INFO - Docker执行完成，返回码: 0
2025-05-20 15:08:47,654 - config - INFO - Docker执行成功，输出长度: 4047
2025-05-20 15:08:47,662 - config - INFO - 更新执行进度成功: ID 68
2025-05-20 15:08:47,885 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250515233707_日志分析器.py
2025-05-20 15:08:47,885 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-20 15:08:47,885 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir -r /params/requirements.txt && pip install --no-cache-dir psutil && python /app/20250515233707_日志分析器.py /params/tmp_q77iqwi.json
2025-05-20 15:08:53,766 - config - INFO - Docker执行完成，返回码: 1
2025-05-20 15:08:53,766 - config - ERROR - Docker执行失败，错误信息: WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
错误: 必须提供日志文件路径参数 'file_path'

2025-05-20 15:08:53,772 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 15:08:53,772 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 15:08:53,776 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 68
2025-05-20 15:08:53,776 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 15:08:53,776 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 15:08:53,779 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 68
2025-05-20 15:08:53,779 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 15:08:53,779 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 15:08:53,782 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 68
2025-05-20 15:08:53,782 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 15:08:53,782 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 15:08:53,785 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 68
2025-05-20 15:08:53,785 - config - INFO - 更新执行历史记录成功: ID 68
2025-05-20 15:08:58,272 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:08:58] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 15:08:59,040 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:08:59] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:09:06,606 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:09:06] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:09:06,606 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:09:06] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:09:06,607 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:09:06] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 15:09:06,610 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:09:06] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:09:06,690 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:09:06] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:09:08,416 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:09:08] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:09:08,418 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:09:08] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 15:09:11,723 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:09:11] "GET /api/scripts/22/versions HTTP/1.1" 200 -
2025-05-20 15:09:15,704 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:09:15] "GET /api/scripts/22/versions/21/content HTTP/1.1" 200 -
2025-05-20 15:09:21,422 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:09:21] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 15:09:24,120 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:09:24] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:09:24,121 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:09:24] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 15:09:27,808 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:09:27] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 15:09:42,737 - config - ERROR - 更新脚本失败: 'sqlite3.Row' object has no attribute 'get'
2025-05-20 15:09:42,737 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:09:42] "[35m[1mPUT /api/scripts/22 HTTP/1.1[0m" 500 -
2025-05-20 15:10:33,373 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:10:33] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 15:10:33,679 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:10:33] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:10:35,659 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:10:35] "GET /api/scripts/22/versions HTTP/1.1" 200 -
2025-05-20 15:10:37,488 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:10:37] "GET /api/scripts/22/versions/21/content HTTP/1.1" 200 -
2025-05-20 15:18:21,210 - config - INFO - 数据库初始化成功
2025-05-20 15:18:21,217 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 15:18:22,521 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-20 15:18:22,521 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-20 15:18:22,522 - werkzeug - INFO -  * Restarting with stat
2025-05-20 15:18:23,255 - config - INFO - 数据库初始化成功
2025-05-20 15:18:23,262 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 15:18:23,289 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 15:18:23,291 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 15:18:31,368 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:18:31] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:18:31,370 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:18:31] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:18:31,370 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:18:31] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:18:31,371 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:18:31] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 15:18:32,156 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:18:32] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 15:18:32,168 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:18:32] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:18:32,193 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:18:32] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:18:36,720 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:18:36] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:18:40,345 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:18:40] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:18:40,347 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:18:40] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 15:18:41,466 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:18:41] "GET /api/scripts/22/versions HTTP/1.1" 200 -
2025-05-20 15:18:44,206 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:18:44] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 15:18:46,774 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:18:46] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:18:46,775 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:18:46] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 15:18:58,425 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:18:58] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:19:00,549 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:19:00] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:19:00,551 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:19:00] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 15:19:02,259 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:19:02] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 15:19:03,469 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:19:03] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 15:19:03,782 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:19:03] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:19:04,297 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:19:04] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:19:07,559 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:19:07] "GET /api/scripts/18 HTTP/1.1" 200 -
2025-05-20 15:19:15,874 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:19:15] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:19:20,196 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:19:20] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 15:19:20,197 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:19:20] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:19:23,068 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:19:23] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 15:19:27,424 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:19:27] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:20:56,917 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:20:56] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:20:56,918 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:20:56] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:20:56,925 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:20:56] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 15:20:57,173 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:20:57] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:21:25,844 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:21:25] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:21:52,346 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:21:52] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 15:21:54,125 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:21:54] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:21:55,651 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:21:55] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 15:21:56,726 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:21:56] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:21:58,936 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:21:58] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:21:58,944 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:21:58] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 15:21:59,763 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:21:59] "GET /api/scripts/22/versions HTTP/1.1" 200 -
2025-05-20 15:22:01,592 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:22:01] "GET /api/scripts/22/versions/21/content HTTP/1.1" 200 -
2025-05-20 15:22:13,697 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:22:13] "GET /api/scripts/22/versions HTTP/1.1" 200 -
2025-05-20 15:22:15,251 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:22:15] "GET /api/scripts/22/versions/21/content HTTP/1.1" 200 -
2025-05-20 15:24:16,849 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:24:16] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 15:24:17,076 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:24:17] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:24:17,155 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:24:17] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:24:43,238 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:24:43] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 15:26:31,250 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:26:31] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:26:33,089 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:26:33] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 15:26:33,091 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:26:33] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:26:34,035 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:26:34] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 15:26:34,050 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:26:34] "GET /api/scripts/22/versions/21/content HTTP/1.1" 200 -
2025-05-20 15:27:15,818 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:27:15] "[31m[1mPOST /api/scripts/22/content HTTP/1.1[0m" 400 -
2025-05-20 15:33:32,790 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:33:32] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 15:33:32,847 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:33:32] "GET /api/scripts/22/versions/21/content HTTP/1.1" 200 -
2025-05-20 15:37:34,783 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:37:34] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 15:37:34,810 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:37:34] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:37:34,832 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:37:34] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:37:36,349 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:37:36] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 15:37:36,670 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:37:36] "GET /api/scripts/22/versions/21/content HTTP/1.1" 200 -
2025-05-20 15:37:43,878 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:37:43] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 15:37:44,155 - config - INFO - 添加脚本版本成功: 脚本ID 22, 版本 1.0.1
2025-05-20 15:37:44,156 - config - INFO - 更新脚本参数成功: 脚本ID 22
2025-05-20 15:37:44,159 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:37:44] "POST /api/scripts/22/content HTTP/1.1" 200 -
2025-05-20 15:37:44,221 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:37:44] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:37:48,005 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:37:48] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:37:48,008 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:37:48] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 15:37:49,103 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:37:49] "GET /api/scripts/22/versions HTTP/1.1" 200 -
2025-05-20 15:37:53,544 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:37:53] "GET /api/scripts/22/versions/21/content HTTP/1.1" 200 -
2025-05-20 15:37:58,248 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:37:58] "GET /api/scripts/22/versions/22/content HTTP/1.1" 200 -
2025-05-20 15:38:07,592 - config - INFO - 设置脚本当前版本成功: 脚本ID 22, 版本ID 21
2025-05-20 15:38:07,595 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:38:07] "PUT /api/scripts/22/versions/21/rollback HTTP/1.1" 200 -
2025-05-20 15:38:07,916 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:38:07] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 15:38:07,925 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:38:07] "GET /api/scripts/22/versions HTTP/1.1" 200 -
2025-05-20 15:38:09,375 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:38:09] "GET /api/scripts/22/versions/21/content HTTP/1.1" 200 -
2025-05-20 15:38:15,201 - config - INFO - 设置脚本当前版本成功: 脚本ID 22, 版本ID 22
2025-05-20 15:38:15,205 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:38:15] "PUT /api/scripts/22/versions/22/rollback HTTP/1.1" 200 -
2025-05-20 15:38:15,454 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:38:15] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 15:38:15,531 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:38:15] "GET /api/scripts/22/versions HTTP/1.1" 200 -
2025-05-20 15:38:18,123 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:38:18] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:38:42,570 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:38:42] "GET /api/scripts/18 HTTP/1.1" 200 -
2025-05-20 15:38:42,882 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:38:42] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:38:58,012 - config - INFO - 添加执行历史记录成功: 脚本ID 18, 链ID None
2025-05-20 15:38:58,014 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:38:58] "POST /api/execution/script/18 HTTP/1.1" 200 -
2025-05-20 15:38:58,024 - config - INFO - 更新执行进度成功: ID 69
2025-05-20 15:38:58,254 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_文件生成器.py
2025-05-20 15:38:58,254 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-20 15:38:58,254 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir -r /params/requirements.txt && pip install --no-cache-dir psutil && python /app/20250516001959_文件生成器.py /params/tmpsjfm18bu.json
2025-05-20 15:38:58,283 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:38:58] "GET /api/execution/history/69 HTTP/1.1" 200 -
2025-05-20 15:39:02,421 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:39:02] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 15:39:04,024 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:39:04] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:39:04,347 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:39:04] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:39:04,348 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:39:04] "GET /api/execution/history?script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:39:04,350 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:39:04] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:39:04,678 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:39:04] "GET /api/execution/history?chain_id=6&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:39:04,871 - config - INFO - Docker执行完成，返回码: 0
2025-05-20 15:39:04,871 - config - INFO - Docker执行成功，输出长度: 4027
2025-05-20 15:39:04,895 - config - INFO - 更新执行历史记录成功: ID 69
2025-05-20 15:39:11,015 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:39:11] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 15:39:23,742 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:39:23] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 15:39:25,770 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:39:25] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:39:25,771 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:39:25] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:39:26,086 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:39:26] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 15:39:26,086 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:39:26] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:39:26,130 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:39:26] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:49:15,305 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\templates\\scripts\\python_with_params_json.py', reloading
2025-05-20 15:49:15,351 - werkzeug - INFO -  * Restarting with stat
2025-05-20 15:49:16,425 - config - INFO - 数据库初始化成功
2025-05-20 15:49:16,434 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 15:49:16,480 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 15:49:16,484 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 15:50:15,298 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\templates\\scripts\\python_with_params_file.py', reloading
2025-05-20 15:50:15,347 - werkzeug - INFO -  * Restarting with stat
2025-05-20 15:50:16,175 - config - INFO - 数据库初始化成功
2025-05-20 15:50:16,182 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 15:50:16,210 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 15:50:16,212 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 15:50:33,386 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\templates\\scripts\\python_with_params_none.py', reloading
2025-05-20 15:50:33,443 - werkzeug - INFO -  * Restarting with stat
2025-05-20 15:50:34,270 - config - INFO - 数据库初始化成功
2025-05-20 15:50:34,279 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 15:50:34,305 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 15:50:34,307 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 15:50:49,338 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\templates\\scripts\\python_without_params_json.py', reloading
2025-05-20 15:50:49,384 - werkzeug - INFO -  * Restarting with stat
2025-05-20 15:50:50,380 - config - INFO - 数据库初始化成功
2025-05-20 15:50:50,388 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 15:50:50,416 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 15:50:50,419 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 15:51:12,896 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\templates\\scripts\\python_without_params_file.py', reloading
2025-05-20 15:51:12,943 - werkzeug - INFO -  * Restarting with stat
2025-05-20 15:51:13,792 - config - INFO - 数据库初始化成功
2025-05-20 15:51:13,798 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 15:51:13,825 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 15:51:13,827 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 15:51:30,866 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\templates\\scripts\\python_without_params_none.py', reloading
2025-05-20 15:51:30,914 - werkzeug - INFO -  * Restarting with stat
2025-05-20 15:51:31,981 - config - INFO - 数据库初始化成功
2025-05-20 15:51:31,988 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 15:51:32,017 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 15:51:32,020 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 15:52:13,727 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\utils\\script_template_helper.py', reloading
2025-05-20 15:52:13,787 - werkzeug - INFO -  * Restarting with stat
2025-05-20 15:52:14,642 - config - INFO - 数据库初始化成功
2025-05-20 15:52:14,649 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 15:52:14,675 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 15:52:14,678 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 15:52:32,888 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\routes\\scripts\\template.py', reloading
2025-05-20 15:52:32,936 - werkzeug - INFO -  * Restarting with stat
2025-05-20 15:52:33,684 - config - INFO - 数据库初始化成功
2025-05-20 15:52:33,691 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 15:52:33,718 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 15:52:33,721 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 15:52:54,163 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\routes\\scripts\\__init__.py', reloading
2025-05-20 15:52:54,213 - werkzeug - INFO -  * Restarting with stat
2025-05-20 15:52:54,979 - config - INFO - 数据库初始化成功
2025-05-20 15:52:54,989 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 15:52:55,012 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 15:52:55,015 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 15:53:49,449 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\script\\script_base.py', reloading
2025-05-20 15:53:49,501 - werkzeug - INFO -  * Restarting with stat
2025-05-20 15:53:50,311 - config - INFO - 数据库初始化成功
2025-05-20 15:53:50,319 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 15:53:50,352 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 15:53:50,357 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 15:54:12,925 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\routes\\scripts\\upload.py', reloading
2025-05-20 15:54:12,967 - werkzeug - INFO -  * Restarting with stat
2025-05-20 15:54:14,019 - config - INFO - 数据库初始化成功
2025-05-20 15:54:14,026 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 15:54:14,056 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 15:54:14,058 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 15:54:45,058 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\utils\\script_runner.py', reloading
2025-05-20 15:54:45,100 - werkzeug - INFO -  * Restarting with stat
2025-05-20 15:54:46,023 - config - INFO - 数据库初始化成功
2025-05-20 15:54:46,039 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 15:54:46,068 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 15:54:46,071 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 15:58:00,292 - backend.config - INFO - 成功向scripts表添加output_mode字段
2025-05-20 15:59:22,068 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:59:22] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 15:59:22,068 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:59:22] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 15:59:22,074 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:59:22] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:59:22,076 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:59:22] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 15:59:22,589 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:59:22] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 15:59:28,274 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:59:28] "GET /api/scripts/template?language=python&has_params=true&output_mode=file HTTP/1.1" 200 -
2025-05-20 15:59:29,896 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:59:29] "GET /api/scripts/template?language=python&has_params=true&output_mode=none HTTP/1.1" 200 -
2025-05-20 15:59:31,377 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:59:31] "GET /api/scripts/template?language=python&has_params=true&output_mode=json HTTP/1.1" 200 -
2025-05-20 15:59:37,075 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:59:37] "GET /api/scripts/template?language=python&has_params=false&output_mode=json HTTP/1.1" 200 -
2025-05-20 15:59:39,059 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:59:39] "GET /api/scripts/template?language=python&has_params=false&output_mode=none HTTP/1.1" 200 -
2025-05-20 15:59:51,919 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:59:51] "GET /api/scripts/template?language=python&has_params=false&output_mode=none HTTP/1.1" 200 -
2025-05-20 15:59:54,085 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:59:54] "GET /api/scripts/template?language=python&has_params=false&output_mode=json HTTP/1.1" 200 -
2025-05-20 15:59:56,893 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 15:59:56] "GET /api/scripts/template?language=python&has_params=true&output_mode=json HTTP/1.1" 200 -
2025-05-20 16:00:09,519 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:00:09] "GET /api/scripts/template?language=python&has_params=true&output_mode=file HTTP/1.1" 200 -
2025-05-20 16:00:30,473 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:00:30] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 16:32:16,527 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:32:16] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 16:32:16,770 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:32:16] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 16:32:20,302 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:32:20] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 16:32:22,727 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:32:22] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 16:32:23,042 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:32:23] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 16:32:23,043 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:32:23] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 16:32:23,046 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:32:23] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 16:32:24,485 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:32:24] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 16:34:54,112 - config - INFO - 数据库初始化成功
2025-05-20 16:34:59,593 - config - ERROR - 添加脚本版本失败: database is locked
2025-05-20 16:34:59,597 - config - INFO - 添加脚本成功: 数据生成器
2025-05-20 16:35:05,096 - config - ERROR - 添加脚本版本失败: database is locked
2025-05-20 16:35:05,100 - config - INFO - 添加脚本成功: 数据处理器
2025-05-20 16:35:10,593 - config - ERROR - 添加脚本版本失败: database is locked
2025-05-20 16:35:10,598 - config - INFO - 添加脚本成功: 结果汇总器
2025-05-20 16:35:10,606 - config - INFO - 添加脚本参数成功: data_type 属于脚本ID 23
2025-05-20 16:35:10,611 - config - INFO - 添加脚本参数成功: count 属于脚本ID 23
2025-05-20 16:35:10,616 - config - INFO - 添加脚本参数成功: error_rate 属于脚本ID 23
2025-05-20 16:35:10,622 - config - INFO - 添加脚本参数成功: output_file 属于脚本ID 23
2025-05-20 16:35:10,628 - config - INFO - 添加脚本参数成功: __prev_output 属于脚本ID 24
2025-05-20 16:35:10,633 - config - INFO - 添加脚本参数成功: anomaly_detection 属于脚本ID 24
2025-05-20 16:35:10,639 - config - INFO - 添加脚本参数成功: analysis_level 属于脚本ID 24
2025-05-20 16:35:10,646 - config - INFO - 添加脚本参数成功: output_file 属于脚本ID 24
2025-05-20 16:35:10,653 - config - INFO - 添加脚本参数成功: __prev_output 属于脚本ID 25
2025-05-20 16:35:10,659 - config - INFO - 添加脚本参数成功: report_format 属于脚本ID 25
2025-05-20 16:35:10,665 - config - INFO - 添加脚本参数成功: include_visualization 属于脚本ID 25
2025-05-20 16:35:10,671 - config - INFO - 添加脚本参数成功: threshold 属于脚本ID 25
2025-05-20 16:35:10,676 - config - INFO - 添加脚本参数成功: output_file 属于脚本ID 25
2025-05-20 16:35:10,684 - config - INFO - 添加脚本链成功: 脚本链测试 - 三步流程
2025-05-20 16:35:10,689 - config - INFO - 添加脚本链节点成功: 链ID 9, 脚本ID 23, 序号 1
2025-05-20 16:35:10,694 - config - INFO - 添加脚本链节点成功: 链ID 9, 脚本ID 24, 序号 2
2025-05-20 16:35:10,698 - config - INFO - 添加脚本链节点成功: 链ID 9, 脚本ID 25, 序号 3
2025-05-20 16:35:19,383 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:35:19] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 16:35:19,384 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:35:19] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 16:35:22,018 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:35:22] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 16:35:22,032 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:35:22] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 16:35:22,348 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:35:22] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 16:35:22,348 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:35:22] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 16:35:31,993 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:35:31] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 16:35:35,297 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:35:35] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 16:35:35,308 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:35:35] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 16:35:37,069 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:35:37] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 16:35:39,533 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:35:39] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 16:35:39,844 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:35:39] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 16:35:41,112 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:35:41] "GET /api/scripts/23/versions HTTP/1.1" 200 -
2025-05-20 16:35:43,648 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:35:43] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 16:35:45,763 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:35:45] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 16:35:45,768 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:35:45] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 16:36:10,655 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:36:10] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 16:36:39,169 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:36:39] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 16:36:39,480 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:36:39] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 16:36:40,188 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:36:40] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 16:36:40,509 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:36:40] "GET /api/scripts/17/versions/16/content HTTP/1.1" 200 -
2025-05-20 16:36:43,029 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:36:43] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 16:36:43,337 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:36:43] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 16:36:46,410 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:36:46] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 16:36:48,069 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:36:48] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 16:36:48,072 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:36:48] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 16:36:49,361 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:36:49] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 16:36:51,643 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:36:51] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 16:36:51,947 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:36:51] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 16:36:54,517 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:36:54] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 16:37:55,787 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:37:55] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 16:37:55,787 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:37:55] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 16:37:58,303 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:37:58] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 16:37:58,316 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:37:58] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 16:37:58,624 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:37:58] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 16:37:58,624 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:37:58] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 16:38:00,972 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:38:00] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 16:38:01,205 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:38:01] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 16:38:01,280 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:38:01] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 16:38:01,292 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:38:01] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 16:55:42,712 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:55:42] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 16:55:42,713 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:55:42] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 16:55:43,767 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:55:43] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 16:55:43,777 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:55:43] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 16:55:44,089 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:55:44] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 16:55:44,089 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:55:44] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 16:55:46,112 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:55:46] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 16:55:46,113 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:55:46] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 16:55:46,566 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:55:46] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 16:55:46,578 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:55:46] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 16:55:46,897 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:55:46] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 16:55:46,902 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:55:46] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 16:55:53,141 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 9
2025-05-20 16:55:53,150 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:55:53] "POST /api/execution/chain/9 HTTP/1.1" 200 -
2025-05-20 16:55:53,155 - config - INFO - 更新执行进度成功: ID 70
2025-05-20 16:55:53,161 - config - INFO - 更新执行进度成功: ID 70
2025-05-20 16:55:53,182 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 16:55:53,182 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 16:55:53,188 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 70
2025-05-20 16:55:53,188 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 16:55:53,189 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 16:55:53,195 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 70
2025-05-20 16:55:53,195 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 16:55:53,195 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 16:55:53,202 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 70
2025-05-20 16:55:53,202 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 16:55:53,202 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 16:55:53,208 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 70
2025-05-20 16:55:53,209 - config - INFO - 更新执行历史记录成功: ID 70
2025-05-20 16:56:31,753 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:56:31] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 16:56:34,554 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:56:34] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 16:56:34,556 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:56:34] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 16:56:36,255 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:56:36] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 16:56:36,268 - config - ERROR - 读取脚本文件失败: [Errno 2] No such file or directory: 'scripts/chain_test_1_generate.py'
2025-05-20 16:56:36,269 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:56:36] "[35m[1mGET /api/scripts/23/versions/23/content HTTP/1.1[0m" 500 -
2025-05-20 16:56:38,683 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:56:38] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 16:56:38,686 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:56:38] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 16:56:39,641 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:56:39] "GET /api/scripts/23/versions HTTP/1.1" 200 -
2025-05-20 16:56:41,151 - config - ERROR - 读取脚本文件失败: [Errno 2] No such file or directory: 'scripts/chain_test_1_generate.py'
2025-05-20 16:56:41,151 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:56:41] "[35m[1mGET /api/scripts/23/versions/23/content HTTP/1.1[0m" 500 -
2025-05-20 16:57:11,475 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:57:11] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 16:57:12,748 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:57:12] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 16:57:12,750 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:57:12] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 16:57:13,536 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:57:13] "GET /api/scripts/25/versions HTTP/1.1" 200 -
2025-05-20 16:57:14,674 - config - ERROR - 读取脚本文件失败: [Errno 2] No such file or directory: 'scripts/chain_test_3_report.py'
2025-05-20 16:57:14,674 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:57:14] "[35m[1mGET /api/scripts/25/versions/25/content HTTP/1.1[0m" 500 -
2025-05-20 16:57:16,319 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:57:16] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 16:57:16,335 - config - ERROR - 读取脚本文件失败: [Errno 2] No such file or directory: 'scripts/chain_test_3_report.py'
2025-05-20 16:57:16,336 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:57:16] "[35m[1mGET /api/scripts/25/versions/25/content HTTP/1.1[0m" 500 -
2025-05-20 16:57:18,024 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:57:18] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 16:57:18,336 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:57:18] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 16:57:20,986 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:57:20] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 16:58:58,313 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:58:58] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 16:58:59,136 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 16:58:59] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 17:01:00,643 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\script\\script_version.py', reloading
2025-05-20 17:01:00,733 - werkzeug - INFO -  * Restarting with stat
2025-05-20 17:01:01,587 - config - INFO - 数据库初始化成功
2025-05-20 17:01:01,598 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 17:01:01,622 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 17:01:01,625 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 17:01:38,570 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\script\\script_version.py', reloading
2025-05-20 17:01:38,704 - werkzeug - INFO -  * Restarting with stat
2025-05-20 17:01:39,517 - config - INFO - 数据库初始化成功
2025-05-20 17:01:39,527 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 17:01:39,554 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 17:01:39,557 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 17:02:01,758 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\script\\script_version.py', reloading
2025-05-20 17:02:01,876 - werkzeug - INFO -  * Restarting with stat
2025-05-20 17:02:02,719 - config - INFO - 数据库初始化成功
2025-05-20 17:02:02,729 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 17:02:02,754 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 17:02:02,757 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 17:02:17,860 - config - INFO - 数据库初始化成功
2025-05-20 17:02:17,870 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 17:02:19,188 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-20 17:02:19,188 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-20 17:02:19,189 - werkzeug - INFO -  * Restarting with stat
2025-05-20 17:02:20,007 - config - INFO - 数据库初始化成功
2025-05-20 17:02:20,019 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 17:02:20,051 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 17:02:20,054 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 17:04:46,555 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:04:46] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:04:48,974 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:04:48] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:04:48,981 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:04:48] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 17:04:50,351 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:04:50] "GET /api/scripts/23/versions HTTP/1.1" 200 -
2025-05-20 17:04:51,361 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\AppData\Local\Temp\script_version_23.py
2025-05-20 17:04:51,362 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:04:51] "GET /api/scripts/23/versions/23/content HTTP/1.1" 200 -
2025-05-20 17:04:56,476 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:04:56] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:04:58,544 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:04:58] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:04:58,545 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:04:58] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:04:58,855 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:04:58] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 17:04:58,856 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:04:58] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:05:08,453 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:05:08] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:05:13,260 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:05:13] "GET /api/scripts/template?language=shell&has_params=true&output_mode=json HTTP/1.1" 200 -
2025-05-20 17:05:16,240 - config - WARNING - 模板 powershell_with_params_json.ps1 不存在，使用备选模板 python_with_params_json.py
2025-05-20 17:05:16,241 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:05:16] "GET /api/scripts/template?language=powershell&has_params=true&output_mode=json HTTP/1.1" 200 -
2025-05-20 17:05:18,147 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:05:18] "GET /api/scripts/template?language=python&has_params=true&output_mode=json HTTP/1.1" 200 -
2025-05-20 17:05:19,565 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:05:19] "GET /api/scripts/template?language=python&has_params=false&output_mode=json HTTP/1.1" 200 -
2025-05-20 17:05:20,408 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:05:20] "GET /api/scripts/template?language=python&has_params=true&output_mode=json HTTP/1.1" 200 -
2025-05-20 17:05:22,472 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:05:22] "GET /api/scripts/template?language=python&has_params=true&output_mode=file HTTP/1.1" 200 -
2025-05-20 17:05:47,461 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:05:47] "GET /api/scripts/template?language=python&has_params=true&output_mode=json HTTP/1.1" 200 -
2025-05-20 17:06:09,617 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:06:09] "GET /api/scripts/template?language=python&has_params=true&output_mode=none HTTP/1.1" 200 -
2025-05-20 17:06:21,730 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:06:21] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:06:31,837 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 17:06:31,838 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:06:31] "POST /api/execution/script/17 HTTP/1.1" 200 -
2025-05-20 17:06:31,849 - config - INFO - 更新执行进度成功: ID 71
2025-05-20 17:06:32,073 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_系统信息获取.py
2025-05-20 17:06:32,073 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-20 17:06:32,073 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir -r /params/requirements.txt && pip install --no-cache-dir psutil && python /app/20250516001959_系统信息获取.py /params/tmpcu34an8m.json
2025-05-20 17:06:34,340 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:06:34] "GET /api/execution/history/71 HTTP/1.1" 200 -
2025-05-20 17:06:36,764 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:06:36] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 17:06:41,388 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:06:41] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 17:06:44,387 - config - INFO - Docker执行完成，返回码: 0
2025-05-20 17:06:44,388 - config - INFO - Docker执行成功，输出长度: 4377
2025-05-20 17:06:44,409 - config - INFO - 更新执行历史记录成功: ID 71
2025-05-20 17:06:57,413 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:06:57] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 17:07:02,203 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:07:02] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 17:07:03,951 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:07:03] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 17:07:04,269 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:07:04] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:07:04,270 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:07:04] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:07:04,569 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:07:04] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 17:07:05,971 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:07:05] "GET /api/alert/config/4 HTTP/1.1" 200 -
2025-05-20 17:07:06,279 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:07:06] "GET /api/alert/history?limit=20&offset=0&config_id=4 HTTP/1.1" 200 -
2025-05-20 17:07:08,464 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:07:08] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 17:07:09,613 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:07:09] "GET /api/alert/config/4 HTTP/1.1" 200 -
2025-05-20 17:07:09,929 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:07:09] "GET /api/alert/history?limit=20&offset=0&config_id=4 HTTP/1.1" 200 -
2025-05-20 17:07:16,163 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:07:16] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 17:07:17,408 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:07:17] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 17:07:17,409 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:07:17] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:07:17,714 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:07:17] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:07:53,247 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:07:53] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:07:56,242 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:07:56] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 17:07:56,244 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:07:56] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:07:57,375 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:07:57] "GET /api/scripts/17/versions HTTP/1.1" 200 -
2025-05-20 17:07:59,923 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:07:59] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:08:01,200 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:01] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:08:01,202 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:01] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 17:08:02,034 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:02] "GET /api/scripts/22/versions HTTP/1.1" 200 -
2025-05-20 17:08:03,655 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250520153744_script_content.py
2025-05-20 17:08:03,656 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:03] "GET /api/scripts/22/versions/22/content HTTP/1.1" 200 -
2025-05-20 17:08:05,928 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:05] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 17:08:05,943 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250520153744_script_content.py
2025-05-20 17:08:05,943 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:05] "GET /api/scripts/22/versions/22/content HTTP/1.1" 200 -
2025-05-20 17:08:07,493 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:07] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 17:08:07,797 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:07] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:08:08,812 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:08] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 17:08:09,135 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250520153744_script_content.py
2025-05-20 17:08:09,136 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:09] "GET /api/scripts/22/versions/22/content HTTP/1.1" 200 -
2025-05-20 17:08:24,216 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:24] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 17:08:24,488 - config - INFO - 添加脚本版本成功: 脚本ID 22, 版本 1.0.2
2025-05-20 17:08:24,490 - config - INFO - 更新脚本参数成功: 脚本ID 22
2025-05-20 17:08:24,493 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:24] "POST /api/scripts/22/content HTTP/1.1" 200 -
2025-05-20 17:08:24,540 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:24] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:08:27,287 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:27] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:08:27,294 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:27] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 17:08:28,179 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:28] "GET /api/scripts/22/versions HTTP/1.1" 200 -
2025-05-20 17:08:30,151 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250520170824_script_content.py
2025-05-20 17:08:30,152 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:30] "GET /api/scripts/22/versions/26/content HTTP/1.1" 200 -
2025-05-20 17:08:35,742 - config - INFO - 设置脚本当前版本成功: 脚本ID 22, 版本ID 21
2025-05-20 17:08:35,746 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:35] "PUT /api/scripts/22/versions/21/rollback HTTP/1.1" 200 -
2025-05-20 17:08:36,067 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:36] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 17:08:36,068 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:36] "GET /api/scripts/22/versions HTTP/1.1" 200 -
2025-05-20 17:08:37,564 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250520005108_create_db.py
2025-05-20 17:08:37,565 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:37] "GET /api/scripts/22/versions/21/content HTTP/1.1" 200 -
2025-05-20 17:08:49,177 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:49] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:08:50,586 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:50] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-05-13&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:08:55,998 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:55] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:08:58,329 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:58] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 17:08:59,920 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:08:59] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 17:09:00,223 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:00] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:09:00,224 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:00] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:09:00,267 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:00] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:09:00,576 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:00] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:09:02,193 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:02] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:09:09,843 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:09] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:09:09,844 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:09] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:09:11,977 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:11] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 17:09:11,989 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:11] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 17:09:12,297 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:12] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 17:09:12,304 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:12] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 17:09:14,616 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:14] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:09:14,617 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:14] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:09:15,519 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:15] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 17:09:15,532 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:15] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 17:09:15,840 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:15] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 17:09:15,849 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:15] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 17:09:18,383 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 9
2025-05-20 17:09:18,392 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:18] "POST /api/execution/chain/9 HTTP/1.1" 200 -
2025-05-20 17:09:18,399 - config - INFO - 更新执行进度成功: ID 72
2025-05-20 17:09:18,406 - config - INFO - 更新执行进度成功: ID 72
2025-05-20 17:09:18,631 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\AppData\Local\Temp\script_version_23.py
2025-05-20 17:09:18,632 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-20 17:09:18,632 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\AppData\Local\Temp:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir -r /params/requirements.txt && pip install --no-cache-dir psutil && python /app/script_version_23.py /params/tmpuo8gxvkq.json
2025-05-20 17:09:20,737 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:20] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:09:24,541 - config - INFO - Docker执行完成，返回码: 0
2025-05-20 17:09:24,541 - config - INFO - Docker执行成功，输出长度: 9602
2025-05-20 17:09:24,550 - config - INFO - 更新执行进度成功: ID 72
2025-05-20 17:09:24,787 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\AppData\Local\Temp\script_version_24.py
2025-05-20 17:09:24,787 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-20 17:09:24,787 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\AppData\Local\Temp:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir -r /params/requirements.txt && pip install --no-cache-dir psutil && python /app/script_version_24.py /params/tmpw8ccp_xq.json
2025-05-20 17:09:28,037 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:28] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 17:09:28,348 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:28] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:09:29,639 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:29] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 17:09:29,960 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250520005108_create_db.py
2025-05-20 17:09:29,961 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:29] "GET /api/scripts/22/versions/21/content HTTP/1.1" 200 -
2025-05-20 17:09:32,464 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:32] "GET /api/scripts/22 HTTP/1.1" 200 -
2025-05-20 17:09:32,778 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:32] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:09:35,317 - config - INFO - Docker执行完成，返回码: 1
2025-05-20 17:09:35,317 - config - ERROR - Docker执行失败，错误信息: WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip

2025-05-20 17:09:35,334 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 17:09:35,334 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 17:09:35,342 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 72
2025-05-20 17:09:35,343 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 17:09:35,343 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 17:09:35,351 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 72
2025-05-20 17:09:35,352 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 17:09:35,352 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 17:09:35,360 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 72
2025-05-20 17:09:35,360 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 17:09:35,360 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 17:09:35,368 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 72
2025-05-20 17:09:35,369 - config - INFO - 更新执行历史记录成功: ID 72
2025-05-20 17:09:39,233 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:39] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:09:45,394 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:45] "GET /api/scripts/18 HTTP/1.1" 200 -
2025-05-20 17:09:45,703 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:09:45] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:10:03,301 - config - INFO - 添加执行历史记录成功: 脚本ID 18, 链ID None
2025-05-20 17:10:03,302 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:10:03] "POST /api/execution/script/18 HTTP/1.1" 200 -
2025-05-20 17:10:03,309 - config - INFO - 更新执行进度成功: ID 73
2025-05-20 17:10:03,526 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_文件生成器.py
2025-05-20 17:10:03,526 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-20 17:10:03,526 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir -r /params/requirements.txt && pip install --no-cache-dir psutil && python /app/20250516001959_文件生成器.py /params/tmp2vokz53v.json
2025-05-20 17:10:03,539 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:10:03] "GET /api/execution/history/73 HTTP/1.1" 200 -
2025-05-20 17:10:09,353 - config - INFO - Docker执行完成，返回码: 0
2025-05-20 17:10:09,354 - config - INFO - Docker执行成功，输出长度: 4025
2025-05-20 17:10:09,365 - config - INFO - 更新执行历史记录成功: ID 73
2025-05-20 17:10:12,002 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:10:12] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 17:10:14,642 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:10:14] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 17:10:16,760 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:10:16] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 17:10:28,797 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:10:28] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 17:10:31,125 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:10:31] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:10:31,128 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:10:31] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:10:31,435 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:10:31] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:10:31,436 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:10:31] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:10:34,832 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:10:34] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 17:10:34,833 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:10:34] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:10:34,834 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:10:34] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:10:35,324 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:10:35] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:10:35,325 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:10:35] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:10:36,766 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:10:36] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 17:10:38,573 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:10:38] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 17:12:55,238 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\utils\\docker_executor.py', reloading
2025-05-20 17:12:55,336 - werkzeug - INFO -  * Restarting with stat
2025-05-20 17:12:55,470 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\utils\\docker_executor.py', reloading
2025-05-20 17:12:55,539 - werkzeug - INFO -  * Restarting with stat
2025-05-20 17:12:56,171 - config - INFO - 数据库初始化成功
2025-05-20 17:12:56,181 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 17:12:56,221 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 17:12:56,225 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 17:12:56,341 - config - INFO - 数据库初始化成功
2025-05-20 17:12:56,352 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 17:12:56,380 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 17:12:56,382 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 17:13:08,673 - config - INFO - 数据库初始化成功
2025-05-20 17:13:09,279 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:13:09] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 17:13:09,280 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:13:09] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:13:09,281 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:13:09] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:13:11,032 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:13:11] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:13:11,034 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:13:11] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:13:16,360 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:13:16] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 17:13:16,374 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:13:16] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 17:13:16,687 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:13:16] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 17:13:16,688 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:13:16] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 17:13:19,441 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 9
2025-05-20 17:13:19,449 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:13:19] "POST /api/execution/chain/9 HTTP/1.1" 200 -
2025-05-20 17:13:19,455 - config - INFO - 更新执行进度成功: ID 74
2025-05-20 17:13:19,460 - config - INFO - 更新执行进度成功: ID 74
2025-05-20 17:13:19,686 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\AppData\Local\Temp\script_version_23.py
2025-05-20 17:13:19,686 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-20 17:13:19,686 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\AppData\Local\Temp:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c python -m venv /tmp/venv && source /tmp/venv/bin/activate && pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir -r /params/requirements.txt && pip install --no-cache-dir psutil && python /app/script_version_23.py /params/tmpg_3bj40k.json
2025-05-20 17:13:20,865 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:13:20] "GET /api/execution/history/74 HTTP/1.1" 200 -
2025-05-20 17:13:23,671 - config - INFO - Docker执行完成，返回码: 127
2025-05-20 17:13:23,671 - config - ERROR - Docker执行失败，错误信息: sh: 1: source: not found

2025-05-20 17:13:23,692 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 17:13:23,692 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 17:13:23,697 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 74
2025-05-20 17:13:23,698 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 17:13:23,698 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 17:13:23,704 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 74
2025-05-20 17:13:23,704 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 17:13:23,704 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 17:13:23,711 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 74
2025-05-20 17:13:23,711 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 17:13:23,711 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 17:13:23,717 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 74
2025-05-20 17:13:23,717 - config - INFO - 更新执行历史记录成功: ID 74
2025-05-20 17:13:27,031 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:13:27] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 17:14:08,573 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:14:08] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:14:08,887 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:14:08] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:14:09,157 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:14:09] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 17:14:09,469 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:14:09] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:14:09,470 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:14:09] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:15:06,844 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:15:06] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 17:15:06,845 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:15:06] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:15:06,846 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:15:06] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:15:34,607 - config - INFO - 更新定时任务成功: ID 1
2025-05-20 17:15:34,609 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:15:34] "PUT /api/schedule/1 HTTP/1.1" 200 -
2025-05-20 17:15:34,928 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:15:34] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 17:15:43,843 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:15:43] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 17:15:45,698 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:15:45] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 17:15:45,699 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:15:45] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:15:46,007 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:15:46] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:15:49,903 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:15:49] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:15:50,218 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:15:50] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:15:54,187 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:15:54] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 17:15:54,509 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:15:54] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 17:15:54,509 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:15:54] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 17:15:54,511 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:15:54] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 17:15:56,695 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 9
2025-05-20 17:15:56,704 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:15:56] "POST /api/execution/chain/9 HTTP/1.1" 200 -
2025-05-20 17:15:56,710 - config - INFO - 更新执行进度成功: ID 75
2025-05-20 17:15:56,717 - config - INFO - 更新执行进度成功: ID 75
2025-05-20 17:15:56,940 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\AppData\Local\Temp\script_version_23.py
2025-05-20 17:15:56,940 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-20 17:15:56,940 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\AppData\Local\Temp:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c python -m venv /tmp/venv && source /tmp/venv/bin/activate && pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir -r /params/requirements.txt && pip install --no-cache-dir psutil && python /app/script_version_23.py /params/tmp0rhl218c.json
2025-05-20 17:15:59,793 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:15:59] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:16:01,130 - config - INFO - Docker执行完成，返回码: 127
2025-05-20 17:16:01,131 - config - ERROR - Docker执行失败，错误信息: sh: 1: source: not found

2025-05-20 17:16:01,141 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 17:16:01,141 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 17:16:01,147 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 75
2025-05-20 17:16:01,148 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 17:16:01,148 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 17:16:01,155 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 75
2025-05-20 17:16:01,155 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 17:16:01,155 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 17:16:01,161 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 75
2025-05-20 17:16:01,162 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 17:16:01,162 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 17:16:01,168 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 75
2025-05-20 17:16:01,168 - config - INFO - 更新执行历史记录成功: ID 75
2025-05-20 17:16:01,515 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:16:01] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:16:01,520 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:16:01] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:16:03,489 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:16:03] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:16:10,354 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:16:10] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:16:10,355 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:16:10] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:16:15,211 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:16:15] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 17:16:15,225 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:16:15] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 17:16:15,532 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:16:15] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 17:16:15,533 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:16:15] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 17:16:18,346 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:16:18] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:16:18,347 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:16:18] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:16:18,922 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:16:18] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 17:17:19,474 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\utils\\docker_executor.py', reloading
2025-05-20 17:17:19,474 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\utils\\docker_executor.py', reloading
2025-05-20 17:17:19,528 - werkzeug - INFO -  * Restarting with stat
2025-05-20 17:17:19,528 - werkzeug - INFO -  * Restarting with stat
2025-05-20 17:17:20,424 - config - INFO - 数据库初始化成功
2025-05-20 17:17:20,425 - config - INFO - 数据库初始化成功
2025-05-20 17:17:20,438 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 17:17:20,439 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 17:17:20,466 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 17:17:20,470 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 17:17:20,471 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 17:17:20,474 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 17:17:54,398 - config - INFO - 数据库初始化成功
2025-05-20 17:18:12,732 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:18:12] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:18:12,733 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:18:12] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:18:13,418 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:18:13] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 17:18:13,422 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:18:13] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:18:13,727 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:18:13] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:18:14,640 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:18:14] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 17:18:15,172 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:18:15] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 17:18:15,245 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:18:15] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:18:15,486 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:18:15] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:18:19,849 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:18:19] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 17:18:21,724 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:18:21] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 17:18:22,051 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:18:22] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:18:22,052 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:18:22] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:18:43,442 - config - INFO - 更新定时任务成功: ID 1
2025-05-20 17:18:43,445 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:18:43] "PUT /api/schedule/1 HTTP/1.1" 200 -
2025-05-20 17:18:43,700 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:18:43] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 17:18:46,594 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:18:46] "GET /api/scripts/12 HTTP/1.1" 200 -
2025-05-20 17:18:46,906 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:18:46] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:19:04,654 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:19:04] "GET /api/execution/statistics?period=day&script_id=7&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:19:05,931 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:19:05] "GET /api/execution/statistics?period=day&script_id=7&start_date=2025-05-13&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:19:07,996 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:19:07] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:19:13,275 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:19:13] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 17:19:14,661 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:19:14] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 17:19:14,977 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:19:14] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:19:14,977 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:19:14] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:19:17,029 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:19:17] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:19:17,343 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:19:17] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:19:18,631 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:19:18] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 17:19:18,947 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:19:18] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 17:19:18,955 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:19:18] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 17:19:18,970 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:19:18] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 17:19:34,049 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:19:34] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:19:34,352 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:19:34] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:19:35,672 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:19:35] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 17:19:35,994 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:19:35] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 17:19:35,995 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:19:35] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 17:19:35,995 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:19:35] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 17:23:21,444 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:23:21] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 17:23:21,706 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:23:21] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 17:23:21,769 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:23:21] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 17:23:21,778 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:23:21] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 17:24:38,589 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:24:38] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:24:41,903 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:24:41] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:24:41,904 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:24:41] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 17:26:01,047 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:26:01] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:26:01,572 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:26:01] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:26:01,573 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:26:01] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:26:03,076 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:26:03] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 17:26:03,405 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:26:03] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 17:26:03,407 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:26:03] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 17:26:03,412 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:26:03] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 17:26:09,291 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:26:09] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 17:26:09,612 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:26:09] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 17:26:09,630 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:26:09] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 17:26:09,645 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:26:09] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 17:27:01,224 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:27:01] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:27:01,225 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:27:01] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:29:02,897 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:29:02] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 17:29:02,906 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:29:02] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 17:29:03,220 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:29:03] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 17:29:03,221 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:29:03] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 17:29:05,729 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:29:05] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:29:10,014 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:29:10] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:29:10,018 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:29:10] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 17:33:10,095 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:33:10] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 17:33:10,108 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:33:10] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:46:14,434 - config - INFO - 数据库初始化成功
2025-05-20 17:46:14,445 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 17:46:14,492 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-20 17:46:14,492 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-20 17:46:14,493 - werkzeug - INFO -  * Restarting with stat
2025-05-20 17:46:15,191 - config - INFO - 数据库初始化成功
2025-05-20 17:46:15,200 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 17:46:15,223 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 17:46:15,225 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 17:46:29,704 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:46:29] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:46:29,704 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:46:29] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:46:29,831 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:46:29] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:46:29,832 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:46:29] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 17:46:48,364 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:46:48] "GET /api/execution/statistics?period=day&start_date=2025-05-13&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:46:50,425 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:46:50] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:46:51,725 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:46:51] "GET /api/execution/statistics?period=day&start_date=2025-02-19&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:46:53,465 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:46:53] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:46:54,655 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:46:54] "GET /api/execution/statistics?period=day&start_date=2025-05-13&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:47:26,147 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:47:26] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:50:38,075 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:50:38] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 17:50:38,316 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:50:38] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:51:05,466 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:51:05] "GET /api/execution/statistics?period=day&script_id=24&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:51:09,754 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:51:09] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:51:28,877 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:51:28] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-05-13&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:51:49,908 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:51:49] "GET /api/scripts/17/versions HTTP/1.1" 200 -
2025-05-20 17:51:51,575 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_系统信息获取.py
2025-05-20 17:51:51,576 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:51:51] "GET /api/scripts/17/versions/16/content HTTP/1.1" 200 -
2025-05-20 17:52:03,374 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:52:03] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 17:52:03,620 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_系统信息获取.py
2025-05-20 17:52:03,621 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:52:03] "GET /api/scripts/17/versions/16/content HTTP/1.1" 200 -
2025-05-20 17:53:43,404 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:53:43] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 17:53:43,683 - config - INFO - 添加脚本版本成功: 脚本ID 17, 版本 1.0.1
2025-05-20 17:53:43,690 - config - INFO - 更新脚本参数成功: 脚本ID 17
2025-05-20 17:53:43,693 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:53:43] "POST /api/scripts/17/content HTTP/1.1" 200 -
2025-05-20 17:53:43,729 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:53:43] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:53:48,017 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:53:48] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 17:53:48,021 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:53:48] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:53:50,641 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:53:50] "GET /api/scripts/17/versions HTTP/1.1" 200 -
2025-05-20 17:53:55,021 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250520175343_script_content.py
2025-05-20 17:53:55,022 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:53:55] "GET /api/scripts/17/versions/27/content HTTP/1.1" 200 -
2025-05-20 17:54:11,703 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250520175343_script_content.py
2025-05-20 17:54:11,705 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_系统信息获取.py
2025-05-20 17:54:11,707 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:54:11] "GET /api/scripts/17/versions/compare/html?version_id1=27&version_id2=16 HTTP/1.1" 200 -
2025-05-20 17:54:35,532 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:54:35] "GET /api/scripts/17/versions HTTP/1.1" 200 -
2025-05-20 17:54:44,097 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:54:44] "GET /api/scripts/17/versions HTTP/1.1" 200 -
2025-05-20 17:54:48,047 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:54:48] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 17:54:48,373 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250520175343_script_content.py
2025-05-20 17:54:48,373 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:54:48] "GET /api/scripts/17/versions/27/content HTTP/1.1" 200 -
2025-05-20 17:56:03,585 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:56:03] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 17:56:03,860 - config - INFO - 添加脚本版本成功: 脚本ID 17, 版本 1.0.2
2025-05-20 17:56:03,868 - config - INFO - 更新脚本参数成功: 脚本ID 17
2025-05-20 17:56:03,871 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:56:03] "POST /api/scripts/17/content HTTP/1.1" 200 -
2025-05-20 17:56:03,909 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:56:03] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:56:08,961 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:56:08] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:56:08,962 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:56:08] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 17:56:10,482 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:56:10] "GET /api/scripts/17/versions HTTP/1.1" 200 -
2025-05-20 17:56:36,694 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250520175343_script_content.py
2025-05-20 17:56:36,695 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250520175603_script_content.py
2025-05-20 17:56:36,697 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:56:36] "GET /api/scripts/17/versions/compare/html?version_id1=27&version_id2=28 HTTP/1.1" 200 -
2025-05-20 17:56:41,804 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250520175343_script_content.py
2025-05-20 17:56:41,806 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_系统信息获取.py
2025-05-20 17:56:41,807 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:56:41] "GET /api/scripts/17/versions/compare/html?version_id1=27&version_id2=16 HTTP/1.1" 200 -
2025-05-20 17:56:46,896 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_系统信息获取.py
2025-05-20 17:56:46,898 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250520175603_script_content.py
2025-05-20 17:56:46,899 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:56:46] "GET /api/scripts/17/versions/compare/html?version_id1=16&version_id2=28 HTTP/1.1" 200 -
2025-05-20 17:57:17,358 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:57:17] "GET /api/scripts/17/versions HTTP/1.1" 200 -
2025-05-20 17:57:21,478 - config - INFO - 设置脚本当前版本成功: 脚本ID 17, 版本ID 16
2025-05-20 17:57:21,481 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:57:21] "PUT /api/scripts/17/versions/16/rollback HTTP/1.1" 200 -
2025-05-20 17:57:21,802 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:57:21] "GET /api/scripts/17/versions HTTP/1.1" 200 -
2025-05-20 17:57:21,809 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:57:21] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 17:57:25,014 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:57:25] "GET /api/scripts/17/versions HTTP/1.1" 200 -
2025-05-20 17:57:40,104 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 17:57:40,105 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:57:40] "POST /api/execution/script/17 HTTP/1.1" 200 -
2025-05-20 17:57:40,115 - config - INFO - 更新执行进度成功: ID 76
2025-05-20 17:57:40,333 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_系统信息获取.py
2025-05-20 17:57:40,333 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-20 17:57:40,333 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250516001959_系统信息获取.py /params/tmpvm_zvtcf.json
2025-05-20 17:57:40,346 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:57:40] "GET /api/execution/history/76 HTTP/1.1" 200 -
2025-05-20 17:57:48,186 - config - INFO - Docker执行完成，返回码: 0
2025-05-20 17:57:48,186 - config - INFO - Docker执行成功，输出长度: 3923
2025-05-20 17:57:48,206 - config - INFO - 更新执行历史记录成功: ID 76
2025-05-20 17:57:54,701 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:57:54] "GET /api/execution/history/76 HTTP/1.1" 200 -
2025-05-20 17:59:09,045 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:59:09] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 17:59:23,279 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:59:23] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 17:59:35,334 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:59:35] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 17:59:36,503 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:59:36] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:59:36,507 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:59:36] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:59:36,809 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:59:36] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 17:59:36,817 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:59:36] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 17:59:36,842 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:59:36] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 17:59:37,130 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 17:59:37] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 18:00:35,049 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:00:35] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 18:00:41,503 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:00:41] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:01:10,417 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:01:10] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 18:01:10,728 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:01:10] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 18:01:13,199 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:01:13] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:01:14,266 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:01:14] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 18:01:14,284 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\AppData\Local\Temp\script_version_25.py
2025-05-20 18:01:14,285 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:01:14] "GET /api/scripts/25/versions/25/content HTTP/1.1" 200 -
2025-05-20 18:01:16,259 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:01:16] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:01:21,376 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:01:21] "GET /api/scripts/template?language=shell&has_params=true&output_mode=json HTTP/1.1" 200 -
2025-05-20 18:01:36,699 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:01:36] "GET /api/scripts/template?language=python&has_params=true&output_mode=json HTTP/1.1" 200 -
2025-05-20 18:02:13,222 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:02:13] "GET /api/scripts/template?language=python&has_params=true&output_mode=json HTTP/1.1" 200 -
2025-05-20 18:02:18,051 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:02:18] "GET /api/scripts/template?language=python&has_params=true&output_mode=file HTTP/1.1" 200 -
2025-05-20 18:02:39,976 - config - WARNING - 模板 shell_with_params_file.sh 不存在，使用备选模板 python_with_params_file.py
2025-05-20 18:02:39,977 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:02:39] "GET /api/scripts/template?language=shell&has_params=true&output_mode=file HTTP/1.1" 200 -
2025-05-20 18:02:49,302 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:02:49] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:02:53,779 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:02:53] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 18:02:53,780 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:02:53] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:03:00,697 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:03:00] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 18:03:00,936 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:03:00] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:03:01,000 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:03:01] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 18:03:02,779 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:03:02] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 18:03:21,205 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:03:21] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 18:03:21,206 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:03:21] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:03:46,508 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:03:46] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 18:03:46,831 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:03:46] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 18:03:46,832 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:03:46] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 18:03:46,833 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:03:46] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 18:04:26,743 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:04:26] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 18:04:26,987 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:04:26] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:04:51,192 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:04:51] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 18:04:51,517 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:04:51] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 18:04:51,518 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:04:51] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 18:04:51,519 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:04:51] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 18:04:52,754 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:04:52] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 18:04:53,057 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:04:53] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:04:54,333 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:04:54] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 18:04:54,657 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:04:54] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 18:04:54,658 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:04:54] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 18:04:54,662 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:04:54] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 18:04:58,087 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:04:58] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 18:04:58,405 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:04:58] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:05:01,223 - config - INFO - 更新脚本链成功: ID 9
2025-05-20 18:05:01,232 - config - INFO - 删除脚本链节点成功: ID 17
2025-05-20 18:05:01,238 - config - INFO - 删除脚本链节点成功: ID 18
2025-05-20 18:05:01,244 - config - INFO - 删除脚本链节点成功: ID 19
2025-05-20 18:05:01,254 - config - INFO - 添加脚本链节点成功: 链ID 9, 脚本ID 23, 序号 1
2025-05-20 18:05:01,265 - config - INFO - 添加脚本链节点成功: 链ID 9, 脚本ID 25, 序号 2
2025-05-20 18:05:01,273 - config - INFO - 添加脚本链节点成功: 链ID 9, 脚本ID 24, 序号 3
2025-05-20 18:05:01,276 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:01] "PUT /api/chains/9 HTTP/1.1" 200 -
2025-05-20 18:05:01,609 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:01] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 18:05:01,616 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:01] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:05:03,344 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:03] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 18:05:03,357 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:03] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 18:05:03,665 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:03] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 18:05:03,666 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:03] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 18:05:11,295 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:11] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 18:05:11,296 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:11] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:05:18,559 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:18] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 18:05:18,884 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:18] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 18:05:18,885 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:18] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 18:05:18,886 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:18] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 18:05:23,117 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:23] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 18:05:23,417 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:23] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:05:27,456 - config - INFO - 更新脚本链成功: ID 9
2025-05-20 18:05:27,463 - config - INFO - 删除脚本链节点成功: ID 20
2025-05-20 18:05:27,469 - config - INFO - 删除脚本链节点成功: ID 21
2025-05-20 18:05:27,475 - config - INFO - 删除脚本链节点成功: ID 22
2025-05-20 18:05:27,485 - config - INFO - 添加脚本链节点成功: 链ID 9, 脚本ID 23, 序号 1
2025-05-20 18:05:27,495 - config - INFO - 添加脚本链节点成功: 链ID 9, 脚本ID 24, 序号 2
2025-05-20 18:05:27,504 - config - INFO - 添加脚本链节点成功: 链ID 9, 脚本ID 25, 序号 3
2025-05-20 18:05:27,506 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:27] "PUT /api/chains/9 HTTP/1.1" 200 -
2025-05-20 18:05:27,833 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:27] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:05:27,833 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:27] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 18:05:29,318 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:29] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 18:05:29,333 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:29] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 18:05:29,641 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:29] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 18:05:29,649 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:29] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 18:05:31,646 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:31] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 18:05:31,647 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:31] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:05:36,275 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:36] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 18:05:36,287 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:36] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 18:05:36,592 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:36] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 18:05:36,593 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:36] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 18:05:43,465 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:43] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 18:05:43,478 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:43] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 18:05:43,728 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:43] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 18:05:43,791 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:43] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 18:05:54,289 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 9
2025-05-20 18:05:54,297 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:54] "POST /api/execution/chain/9 HTTP/1.1" 200 -
2025-05-20 18:05:54,303 - config - INFO - 更新执行进度成功: ID 77
2025-05-20 18:05:54,310 - config - INFO - 更新执行进度成功: ID 77
2025-05-20 18:05:54,540 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\AppData\Local\Temp\script_version_23.py
2025-05-20 18:05:54,541 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-20 18:05:54,541 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\AppData\Local\Temp:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/script_version_23.py /params/tmpl356vatw.json
2025-05-20 18:05:54,623 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:54] "GET /api/execution/history/77 HTTP/1.1" 200 -
2025-05-20 18:05:57,540 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:05:57] "GET /api/execution/history/77 HTTP/1.1" 200 -
2025-05-20 18:06:00,008 - config - INFO - Docker执行完成，返回码: 0
2025-05-20 18:06:00,009 - config - INFO - Docker执行成功，输出长度: 9689
2025-05-20 18:06:00,018 - config - INFO - 更新执行进度成功: ID 77
2025-05-20 18:06:00,223 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\AppData\Local\Temp\script_version_24.py
2025-05-20 18:06:00,223 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-20 18:06:00,223 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\AppData\Local\Temp:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/script_version_24.py /params/tmpjck3cn4z.json
2025-05-20 18:06:00,369 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:06:00] "GET /api/execution/history/77 HTTP/1.1" 200 -
2025-05-20 18:06:01,231 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:06:01] "GET /api/execution/history/77 HTTP/1.1" 200 -
2025-05-20 18:06:02,055 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:06:02] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 18:06:04,432 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:06:04] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 18:06:05,673 - config - INFO - Docker执行完成，返回码: 1
2025-05-20 18:06:05,673 - config - ERROR - Docker执行失败，错误信息:   WARNING: The script dotenv is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script flask is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip

2025-05-20 18:06:05,687 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 18:06:05,687 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 18:06:05,695 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 77
2025-05-20 18:06:05,695 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 18:06:05,695 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 18:06:05,702 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 77
2025-05-20 18:06:05,703 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 18:06:05,703 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 18:06:05,709 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 77
2025-05-20 18:06:05,710 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 18:06:05,710 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 18:06:05,717 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 77
2025-05-20 18:06:05,717 - config - INFO - 更新执行历史记录成功: ID 77
2025-05-20 18:06:12,956 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:06:12] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 18:06:26,102 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:06:26] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 18:06:27,293 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:06:27] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 18:06:27,294 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:06:27] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:06:29,892 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:06:29] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 18:06:29,894 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:06:29] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:06:30,196 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:06:30] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 18:06:36,551 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:06:36] "GET /api/schedule?is_active=1 HTTP/1.1" 200 -
2025-05-20 18:06:42,692 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:06:42] "GET /api/schedule?is_active=0 HTTP/1.1" 200 -
2025-05-20 18:06:44,183 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:06:44] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 18:06:47,570 - config - INFO - 更新定时任务成功: ID 5
2025-05-20 18:06:47,571 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:06:47] "PUT /api/schedule/5/active HTTP/1.1" 200 -
2025-05-20 18:06:47,894 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:06:47] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 18:06:48,814 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:06:48] "GET /api/schedule?is_active=0 HTTP/1.1" 200 -
2025-05-20 18:06:50,479 - config - INFO - 更新定时任务成功: ID 5
2025-05-20 18:06:50,479 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:06:50] "PUT /api/schedule/5/active HTTP/1.1" 200 -
2025-05-20 18:06:50,740 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:06:50] "GET /api/schedule?is_active=0 HTTP/1.1" 200 -
2025-05-20 18:06:51,821 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:06:51] "GET /api/schedule?is_active=1 HTTP/1.1" 200 -
2025-05-20 18:06:53,125 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:06:53] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 18:07:26,116 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:07:26] "GET /api/schedule?is_active=1 HTTP/1.1" 200 -
2025-05-20 18:07:26,807 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:07:26] "GET /api/schedule?is_active=0 HTTP/1.1" 200 -
2025-05-20 18:07:27,194 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:07:27] "GET /api/schedule?is_active=1 HTTP/1.1" 200 -
2025-05-20 18:07:32,465 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:07:32] "GET /api/scripts/13 HTTP/1.1" 200 -
2025-05-20 18:07:32,714 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:07:32] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 18:07:34,510 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:07:34] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 18:07:34,511 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:07:34] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:07:34,823 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:07:34] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 18:07:35,501 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:07:35] "GET /api/scripts/13 HTTP/1.1" 200 -
2025-05-20 18:07:35,815 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:07:35] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 18:07:37,460 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:07:37] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 18:07:37,771 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:07:37] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:07:37,772 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:07:37] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 18:07:39,157 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:07:39] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 18:07:43,665 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:07:43] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 18:08:29,954 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:08:29] "GET /api/alert/config?is_active=1 HTTP/1.1" 200 -
2025-05-20 18:08:30,866 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:08:30] "GET /api/alert/config?is_active=0 HTTP/1.1" 200 -
2025-05-20 18:08:32,334 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:08:32] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 18:09:07,266 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:09:07] "GET /api/alert/config?is_active=1 HTTP/1.1" 200 -
2025-05-20 18:09:07,999 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:09:07] "GET /api/alert/config?is_active=0 HTTP/1.1" 200 -
2025-05-20 18:09:09,017 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:09:09] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 18:09:10,097 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:09:10] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 18:10:39,130 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:39] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:10:42,982 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:42] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 18:10:42,983 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:42] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:10:46,151 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:46] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 18:10:46,156 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:46] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:10:46,470 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:46] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 18:10:48,524 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:48] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 18:10:49,283 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:49] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:10:50,250 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:50] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 18:10:52,836 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:52] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 18:10:53,554 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:53] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 18:10:53,932 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:53] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 18:10:54,143 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:54] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:10:54,151 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:54] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 18:10:54,154 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:54] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:10:54,183 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:54] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 18:10:54,704 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:54] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 18:10:54,705 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:54] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:10:54,706 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:54] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 18:10:55,005 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:55] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 18:10:55,081 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:55] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:10:55,499 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:55] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 18:10:55,677 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:55] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:10:55,813 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:55] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 18:10:55,818 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:55] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:10:56,093 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:56] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 18:10:56,120 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:56] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 18:10:56,647 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:56] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 18:10:58,839 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:10:58] "GET /api/alert/config?is_active=1 HTTP/1.1" 200 -
2025-05-20 18:11:00,061 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:11:00] "GET /api/alert/config?is_active=0 HTTP/1.1" 200 -
2025-05-20 18:11:00,796 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:11:00] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:11:01,116 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:11:01] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 18:11:01,117 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:11:01] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 18:11:01,117 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:11:01] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 18:11:01,493 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:11:01] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 18:11:02,359 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:11:02] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:11:02,674 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:11:02] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 18:11:02,676 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:11:02] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 18:11:02,677 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:11:02] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 18:11:02,727 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:11:02] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:11:03,072 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:11:03] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 18:11:03,337 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:11:03] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:11:03,510 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:11:03] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 18:11:03,513 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:11:03] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 18:11:03,815 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:11:03] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 18:11:03,875 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:11:03] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 18:11:04,301 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 18:11:04] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 21:20:25,036 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:20:25] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 21:25:07,628 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:25:07] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 21:25:13,863 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:25:13] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:25:16,632 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:25:16] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:25:42,298 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:25:42] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 21:25:42,299 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:25:42] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:25:45,948 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:25:45] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 21:25:46,178 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:25:46] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:25:56,332 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:25:56] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 21:25:56,334 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:25:56] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:25:56,335 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:25:56] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 21:26:01,616 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:26:01] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 21:26:02,396 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:26:02] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 21:26:02,949 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:26:02] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 21:26:11,128 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:26:11] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 21:26:31,932 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:26:31] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 21:26:31,935 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:26:31] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 21:26:31,935 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:26:31] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:26:32,325 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:26:32] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 21:26:32,326 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:26:32] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:26:32,670 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:26:32] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:26:32,953 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:26:32] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 21:26:32,987 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:26:32] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:26:32,988 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:26:32] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 21:26:56,844 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:26:56] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 21:26:57,159 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:26:57] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:26:57,188 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:26:57] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:27:00,356 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 21:27:00,357 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:00] "POST /api/execution/script/17 HTTP/1.1" 200 -
2025-05-20 21:27:00,365 - config - INFO - 更新执行进度成功: ID 78
2025-05-20 21:27:00,591 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_系统信息获取.py
2025-05-20 21:27:00,591 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-20 21:27:00,591 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250516001959_系统信息获取.py /params/tmpx2gjyuzn.json
2025-05-20 21:27:02,202 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:02] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:27:02,510 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:02] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:27:02,511 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:02] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 21:27:02,514 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:02] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 21:27:04,192 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:04] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:27:06,837 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 21:27:06,838 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:06] "POST /api/execution/script/17 HTTP/1.1" 200 -
2025-05-20 21:27:06,847 - config - INFO - 更新执行进度成功: ID 79
2025-05-20 21:27:07,055 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_系统信息获取.py
2025-05-20 21:27:07,055 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-20 21:27:07,055 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250516001959_系统信息获取.py /params/tmpnicihmu8.json
2025-05-20 21:27:07,687 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:07] "GET /api/execution/history/79 HTTP/1.1" 200 -
2025-05-20 21:27:09,122 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:09] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 21:27:11,037 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:11] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:27:11,039 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:11] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 21:27:11,339 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:11] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 21:27:11,348 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:11] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:27:11,891 - config - INFO - Docker执行完成，返回码: 0
2025-05-20 21:27:11,891 - config - INFO - Docker执行成功，输出长度: 4380
2025-05-20 21:27:11,902 - config - INFO - 更新执行历史记录成功: ID 78
2025-05-20 21:27:13,122 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:13] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:27:13,349 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:13] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 21:27:13,383 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:13] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:27:13,384 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:13] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 21:27:13,636 - config - INFO - Docker执行完成，返回码: 0
2025-05-20 21:27:13,637 - config - INFO - Docker执行成功，输出长度: 4380
2025-05-20 21:27:13,648 - config - INFO - 更新执行历史记录成功: ID 79
2025-05-20 21:27:13,924 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:13] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 21:27:13,927 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:13] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:27:13,929 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:13] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 21:27:14,184 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:14] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:27:14,348 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:14] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:27:14,349 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:14] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 21:27:14,620 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:14] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:27:14,622 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:14] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 21:27:16,718 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:16] "GET /api/execution/statistics?period=day&start_date=2025-05-13&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:27:18,880 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:18] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:27:38,573 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:38] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 21:27:38,949 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:38] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 21:27:38,954 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:38] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:27:38,955 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:38] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 21:27:39,419 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:39] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 21:27:39,935 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:39] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 21:27:40,038 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:40] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:27:40,244 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:40] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 21:27:40,427 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:40] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 21:27:40,428 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:40] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:27:40,766 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:40] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 21:27:41,081 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:41] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 21:27:41,082 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:41] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:27:41,087 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:41] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 21:27:42,223 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:42] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:27:42,225 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:42] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:27:42,536 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:42] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:27:42,538 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:27:42] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:32:36,042 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:32:36] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:33:29,174 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\execution.py', reloading
2025-05-20 21:33:29,245 - werkzeug - INFO -  * Restarting with stat
2025-05-20 21:33:30,302 - config - INFO - 数据库初始化成功
2025-05-20 21:33:30,314 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 21:33:30,349 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 21:33:30,352 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 21:37:26,347 - config - INFO - 数据库初始化成功
2025-05-20 21:37:26,356 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 21:37:27,667 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-20 21:37:27,667 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-20 21:37:27,667 - werkzeug - INFO -  * Restarting with stat
2025-05-20 21:37:28,411 - config - INFO - 数据库初始化成功
2025-05-20 21:37:28,420 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 21:37:28,443 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 21:37:28,446 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 21:37:47,021 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:37:47] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 21:37:48,990 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 21:37:48,991 - config - INFO - 执行历史记录总数: 229
2025-05-20 21:37:48,991 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 21:37:48,991 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 21:37:48,992 - config - INFO - 查询返回 30 条统计数据
2025-05-20 21:37:48,993 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 21:37:48,994 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:37:48] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:37:48,996 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:37:48] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:37:48,999 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:37:48] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 21:37:49,005 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:37:49] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:37:49,024 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:37:49] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:37:49,332 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:37:49] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:37:50,508 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 21:37:50,511 - config - INFO - 执行历史记录总数: 229
2025-05-20 21:37:50,511 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 21:37:50,511 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 21:37:50,514 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:37:50] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:37:50,514 - config - INFO - 查询返回 30 条统计数据
2025-05-20 21:37:50,514 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 21:37:50,515 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:37:50] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:37:50,516 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:37:50] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:37:50,530 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:37:50] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:38:01,057 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:38:01] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 21:38:02,596 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 21:38:02,598 - config - INFO - 执行历史记录总数: 229
2025-05-20 21:38:02,599 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 21:38:02,599 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 21:38:02,599 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:38:02] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:38:02,600 - config - INFO - 查询返回 30 条统计数据
2025-05-20 21:38:02,600 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 21:38:02,601 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:38:02] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:38:02,601 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:38:02] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 21:38:02,610 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:38:02] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:38:02,631 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:38:02] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:38:02,944 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:38:02] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:45:42,761 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 21:45:42,764 - config - INFO - 执行历史记录总数: 229
2025-05-20 21:45:42,764 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 21:45:42,764 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 21:45:42,766 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:45:42] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:45:42,767 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:45:42] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:45:42,768 - config - INFO - 查询返回 30 条统计数据
2025-05-20 21:45:42,768 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 21:45:42,769 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:45:42] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:45:42,771 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:45:42] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:45:46,786 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:45:46] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 21:45:48,245 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 21:45:48,248 - config - INFO - 执行历史记录总数: 229
2025-05-20 21:45:48,248 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 21:45:48,248 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 21:45:48,249 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:45:48] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:45:48,250 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:45:48] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 21:45:48,250 - config - INFO - 查询返回 30 条统计数据
2025-05-20 21:45:48,250 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 21:45:48,251 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:45:48] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:45:48,262 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:45:48] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:45:48,276 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:45:48] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:45:48,590 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:45:48] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:45:53,097 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 21:45:53,098 - config - INFO - 执行历史记录总数: 229
2025-05-20 21:45:53,099 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 21:45:53,099 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 21:45:53,099 - config - INFO - 查询返回 30 条统计数据
2025-05-20 21:45:53,099 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 21:45:53,100 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:45:53] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:45:54,861 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 21:45:54,863 - config - INFO - 执行历史记录总数: 229
2025-05-20 21:45:54,863 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 21:45:54,863 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 21:45:54,863 - config - INFO - 查询返回 30 条统计数据
2025-05-20 21:45:54,864 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 21:45:54,864 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:45:54] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:45:56,770 - config - INFO - 获取执行统计数据: period=hour, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 21:45:56,771 - config - INFO - 执行历史记录总数: 229
2025-05-20 21:45:56,772 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d %H', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d %H', start_time) ORDER BY time_period ASC
2025-05-20 21:45:56,772 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 21:45:56,773 - config - INFO - 查询返回 170 条统计数据
2025-05-20 21:45:56,773 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20 04', 'total_count': 1, 'success_count': 1, 'failed_count': 0, 'avg_execution_time': 75.71421077000234}
2025-05-20 21:45:56,774 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:45:56] "GET /api/execution/statistics?period=hour&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:45:57,681 - config - INFO - 获取执行统计数据: period=month, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 21:45:57,683 - config - INFO - 执行历史记录总数: 229
2025-05-20 21:45:57,683 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m', start_time) ORDER BY time_period ASC
2025-05-20 21:45:57,683 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 21:45:57,684 - config - INFO - 查询返回 2 条统计数据
2025-05-20 21:45:57,684 - config - INFO - 第一条数据示例: {'time_period': '2025-04', 'total_count': 71, 'success_count': 47, 'failed_count': 18, 'avg_execution_time': 183.90809237125015}
2025-05-20 21:45:57,684 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:45:57] "GET /api/execution/statistics?period=month&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:45:59,386 - config - INFO - 获取执行统计数据: period=week, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 21:45:59,389 - config - INFO - 执行历史记录总数: 229
2025-05-20 21:45:59,389 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%W', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%W', start_time) ORDER BY time_period ASC
2025-05-20 21:45:59,389 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 21:45:59,390 - config - INFO - 查询返回 6 条统计数据
2025-05-20 21:45:59,390 - config - INFO - 第一条数据示例: {'time_period': '2025-15', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 21:45:59,390 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:45:59] "GET /api/execution/statistics?period=week&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:46:14,907 - config - INFO - 获取执行统计数据: period=week, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 21:46:14,909 - config - INFO - 执行历史记录总数: 229
2025-05-20 21:46:14,909 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%W', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%W', start_time) ORDER BY time_period ASC
2025-05-20 21:46:14,909 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 21:46:14,910 - config - INFO - 查询返回 6 条统计数据
2025-05-20 21:46:14,910 - config - INFO - 第一条数据示例: {'time_period': '2025-15', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 21:46:14,911 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:46:14] "GET /api/execution/statistics?period=week&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:46:16,444 - config - INFO - 获取执行统计数据: period=week, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 21:46:16,445 - config - INFO - 执行历史记录总数: 229
2025-05-20 21:46:16,446 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%W', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%W', start_time) ORDER BY time_period ASC
2025-05-20 21:46:16,446 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 21:46:16,446 - config - INFO - 查询返回 6 条统计数据
2025-05-20 21:46:16,446 - config - INFO - 第一条数据示例: {'time_period': '2025-15', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 21:46:16,447 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:46:16] "GET /api/execution/statistics?period=week&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:46:17,885 - config - INFO - 获取执行统计数据: period=month, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 21:46:17,887 - config - INFO - 执行历史记录总数: 229
2025-05-20 21:46:17,887 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m', start_time) ORDER BY time_period ASC
2025-05-20 21:46:17,887 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 21:46:17,887 - config - INFO - 查询返回 2 条统计数据
2025-05-20 21:46:17,887 - config - INFO - 第一条数据示例: {'time_period': '2025-04', 'total_count': 71, 'success_count': 47, 'failed_count': 18, 'avg_execution_time': 183.90809237125015}
2025-05-20 21:46:17,888 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:46:17] "GET /api/execution/statistics?period=month&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:46:19,373 - config - INFO - 获取执行统计数据: period=hour, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 21:46:19,374 - config - INFO - 执行历史记录总数: 229
2025-05-20 21:46:19,374 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d %H', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d %H', start_time) ORDER BY time_period ASC
2025-05-20 21:46:19,375 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 21:46:19,376 - config - INFO - 查询返回 170 条统计数据
2025-05-20 21:46:19,376 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20 04', 'total_count': 1, 'success_count': 1, 'failed_count': 0, 'avg_execution_time': 75.71421077000234}
2025-05-20 21:46:19,377 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:46:19] "GET /api/execution/statistics?period=hour&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:46:20,158 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 21:46:20,160 - config - INFO - 执行历史记录总数: 229
2025-05-20 21:46:20,160 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 21:46:20,160 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 21:46:20,161 - config - INFO - 查询返回 30 条统计数据
2025-05-20 21:46:20,161 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 21:46:20,161 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:46:20] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:46:23,883 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-01, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 21:46:23,885 - config - INFO - 执行历史记录总数: 229
2025-05-20 21:46:23,885 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 21:46:23,885 - config - INFO - 查询参数: ['2025-04-01', '2025-05-20']
2025-05-20 21:46:23,886 - config - INFO - 查询返回 35 条统计数据
2025-05-20 21:46:23,886 - config - INFO - 第一条数据示例: {'time_period': '2025-04-15', 'total_count': 2, 'success_count': 1, 'failed_count': 1, 'avg_execution_time': 20.244910297019025}
2025-05-20 21:46:23,887 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:46:23] "GET /api/execution/statistics?period=day&start_date=2025-04-01&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:48:33,141 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 21:48:33,142 - config - INFO - 执行历史记录总数: 229
2025-05-20 21:48:33,142 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 21:48:33,142 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 21:48:33,143 - config - INFO - 查询返回 30 条统计数据
2025-05-20 21:48:33,143 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 21:48:33,143 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:48:33] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:49:50,438 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 21:49:50,440 - config - INFO - 执行历史记录总数: 229
2025-05-20 21:49:50,440 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 21:49:50,440 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 21:49:50,441 - config - INFO - 查询返回 30 条统计数据
2025-05-20 21:49:50,441 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 21:49:50,441 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:49:50] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:51:19,728 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:51:19] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 21:51:21,402 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 21:51:21,405 - config - INFO - 执行历史记录总数: 229
2025-05-20 21:51:21,405 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 21:51:21,405 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 21:51:21,406 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:51:21] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 21:51:21,406 - config - INFO - 查询返回 30 条统计数据
2025-05-20 21:51:21,406 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 21:51:21,407 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:51:21] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:51:21,413 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:51:21] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:51:21,423 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:51:21] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:51:21,433 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:51:21] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:51:21,757 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:51:21] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:57:29,931 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:57:29] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 21:57:30,931 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 21:57:30,933 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:57:30] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:57:30,934 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:57:30] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 21:57:30,940 - config - INFO - 执行历史记录总数: 229
2025-05-20 21:57:30,941 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 21:57:30,941 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 21:57:30,941 - config - INFO - 查询返回 30 条统计数据
2025-05-20 21:57:30,942 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:57:30] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 21:57:30,942 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 21:57:30,943 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:57:30] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:57:30,962 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:57:30] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:57:31,272 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:57:31] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 21:59:44,330 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 21:59:44,331 - config - INFO - 执行历史记录总数: 229
2025-05-20 21:59:44,331 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 21:59:44,331 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 21:59:44,331 - config - INFO - 查询返回 30 条统计数据
2025-05-20 21:59:44,331 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 21:59:44,332 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 21:59:44] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:00:11,510 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:00:11] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:00:23,934 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:00:23] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:01:16,375 - config - INFO - 数据库初始化成功
2025-05-20 22:01:16,384 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 22:01:17,705 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-20 22:01:17,705 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-20 22:01:17,706 - werkzeug - INFO -  * Restarting with stat
2025-05-20 22:01:18,460 - config - INFO - 数据库初始化成功
2025-05-20 22:01:18,469 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 22:01:18,493 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 22:01:18,496 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 22:01:39,871 - config - INFO - 数据库初始化成功
2025-05-20 22:01:39,880 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 22:01:41,240 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-20 22:01:41,240 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-20 22:01:41,241 - werkzeug - INFO -  * Restarting with stat
2025-05-20 22:01:42,013 - config - INFO - 数据库初始化成功
2025-05-20 22:01:42,022 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 22:01:42,047 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 22:01:42,050 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 22:01:52,787 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:01:52] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 22:01:53,012 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:01:53] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:01:53,095 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:01:53] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:01:53,098 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:01:53] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:01:53,988 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:01:53,991 - config - INFO - 执行历史记录总数: 229
2025-05-20 22:01:53,991 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:01:53,991 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:01:53,993 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:01:53,993 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:01:53,993 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:01:53] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:01:53,994 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:01:53] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:01:53,996 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:01:53] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:01:54,292 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:01:54] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:01:56,223 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:01:56,225 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:01:56] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:01:56,225 - config - INFO - 执行历史记录总数: 229
2025-05-20 22:01:56,226 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:01:56,226 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:01:56,227 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:01:56] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:01:56,229 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:01:56,230 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:01:56,231 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:01:56] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:01:56,232 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:01:56] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:01:57,753 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:01:57,755 - config - INFO - 执行历史记录总数: 229
2025-05-20 22:01:57,755 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:01:57,755 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:01:57,756 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:01:57,756 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:01:57,756 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:01:57] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:01:58,074 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:01:58] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:01:58,076 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:01:58] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:01:58,077 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:01:58] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:01:59,386 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:01:59] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:02:01,226 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:02:01,230 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:01] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:02:01,230 - config - INFO - 执行历史记录总数: 229
2025-05-20 22:02:01,230 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:02:01,230 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:02:01,231 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:01] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:02:01,232 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:02:01,232 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:02:01,233 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:01] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:02:01,241 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:01] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:02:01,259 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:01] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:02:01,569 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:01] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:02:03,311 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:02:03,313 - config - INFO - 执行历史记录总数: 229
2025-05-20 22:02:03,314 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:02:03,314 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:02:03,314 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:02:03,315 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:02:03,315 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:03] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:02:03,317 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:03] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:02:03,318 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:03] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:02:03,322 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:03] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:02:05,390 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:02:05,391 - config - INFO - 执行历史记录总数: 229
2025-05-20 22:02:05,391 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:02:05,392 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:02:05,392 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:02:05,392 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:02:05,393 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:05] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:02:05,713 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:05] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:02:05,715 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:05] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:02:05,718 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:05] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:02:07,806 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:07] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:02:08,912 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:02:08,914 - config - INFO - 执行历史记录总数: 229
2025-05-20 22:02:08,914 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:02:08,914 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:02:08,915 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:08] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:02:08,916 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:08] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:02:08,917 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:02:08,917 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:02:08,918 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:08] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:02:08,928 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:08] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:02:08,950 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:08] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:02:09,255 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:09] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:02:51,180 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:02:51,182 - config - INFO - 执行历史记录总数: 229
2025-05-20 22:02:51,182 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:02:51,182 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:02:51,183 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:51] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:02:51,183 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:02:51,183 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:02:51,184 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:51] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:02:51,499 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:51] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:02:51,501 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:02:51] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:03:40,115 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:03:40,117 - config - INFO - 执行历史记录总数: 229
2025-05-20 22:03:40,118 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:03:40,118 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:03:40,120 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:03:40] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:03:40,121 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:03:40,121 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:03:40,122 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:03:40] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:03:40,122 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:03:40] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:03:40,126 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:03:40] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:04:19,657 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:04:19,659 - config - INFO - 执行历史记录总数: 229
2025-05-20 22:04:19,659 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:04:19,659 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:04:19,660 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:04:19,661 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:04:19,661 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:04:19] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:04:19,969 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:04:19] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:04:19,971 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:04:19] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:04:19,972 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:04:19] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:04:28,959 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:04:28,963 - config - INFO - 执行历史记录总数: 229
2025-05-20 22:04:28,963 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:04:28,963 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:04:28,965 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:04:28] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:04:28,966 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:04:28,966 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:04:28,967 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:04:28] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:04:28,968 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:04:28] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:04:28,980 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:04:28] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:04:44,038 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:04:44] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:04:55,302 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:04:55] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:05:01,310 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:05:01] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:05:03,794 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:05:03] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:05:12,095 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:05:12] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:05:16,235 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:05:16] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:05:31,813 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:05:31] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:06:02,621 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:06:02] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:06:03,642 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:06:03,644 - config - INFO - 执行历史记录总数: 229
2025-05-20 22:06:03,645 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:06:03,645 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:06:03,646 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:06:03] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:06:03,646 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:06:03,646 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:06:03,647 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:06:03] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:06:03,651 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:06:03] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:06:03,661 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:06:03] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:06:03,736 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:06:03] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:06:04,048 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:06:04] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:06:23,941 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:06:23] "GET /api/execution/history?script_id=24&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:06:25,652 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:06:25] "GET /api/execution/history?script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:06:27,608 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:06:27] "GET /api/execution/history?script_id=17&start_date=2025-05-13&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:06:29,778 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:06:29] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:06:32,460 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:06:32] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 22:06:32,462 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=25, chain_id=None
2025-05-20 22:06:32,465 - config - INFO - 执行历史记录总数: 229
2025-05-20 22:06:32,465 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:06:32,465 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 25]
2025-05-20 22:06:32,465 - config - INFO - 查询返回 0 条统计数据
2025-05-20 22:06:32,466 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:06:32] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:07:04,067 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:07:04] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:07:17,779 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:07:17,780 - config - INFO - 执行历史记录总数: 229
2025-05-20 22:07:17,780 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:07:17,780 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:07:17,781 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:07:17,781 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:07:17,781 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:07:17] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:07:18,096 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:07:18] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:07:18,098 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:07:18] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:07:18,101 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:07:18] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:12:17,466 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:12:17,468 - config - INFO - 执行历史记录总数: 229
2025-05-20 22:12:17,468 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:12:17,468 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:12:17,468 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:12:17,468 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:12:19,509 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:12:19,510 - config - INFO - 执行历史记录总数: 229
2025-05-20 22:12:19,510 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:12:19,510 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:12:19,510 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:12:19,510 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:12:19,510 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:12:19] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:12:21,567 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:12:21,568 - config - INFO - 执行历史记录总数: 229
2025-05-20 22:12:21,568 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:12:21,569 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:12:21,569 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:12:21,569 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:12:21,569 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:12:21] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:12:54,726 - config - INFO - 数据库初始化成功
2025-05-20 22:12:54,736 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 22:12:56,034 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-20 22:12:56,034 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-20 22:12:56,035 - werkzeug - INFO -  * Restarting with stat
2025-05-20 22:12:56,774 - config - INFO - 数据库初始化成功
2025-05-20 22:12:56,784 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 22:12:56,808 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 22:12:56,811 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 22:15:32,189 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:32] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 22:15:32,409 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:32] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:15:33,019 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:33] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 22:15:33,026 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:33] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:15:33,027 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:33] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:15:33,364 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:33] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:15:33,833 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:33] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 22:15:35,069 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:35] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:15:37,978 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:15:37,980 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:15:37,980 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:15:37,980 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:15:37,981 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:15:37,982 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:15:37,983 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:37] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:15:38,289 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:38] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:15:38,293 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:38] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:15:38,294 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:38] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:15:42,898 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:42] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 22:15:47,266 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:47] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:15:50,389 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:15:50,391 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:15:50,391 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:15:50,391 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:15:50,392 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:15:50,392 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:15:50,393 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:50] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:15:50,709 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:50] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:15:50,715 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:50] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:15:50,717 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:50] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:15:57,710 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:15:57,714 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:15:57,714 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:15:57,714 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:15:57,717 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:57] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:15:57,720 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:57] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:15:57,721 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:57] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:15:57,731 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:15:57,731 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:15:57,732 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:57] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:15:58,564 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:15:58,566 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:15:58,566 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:15:58,566 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:15:58,567 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:15:58,568 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:15:58,569 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:58] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:15:58,883 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:58] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:15:58,889 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:58] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:15:58,890 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:15:58] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:01,385 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:01] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 22:16:04,161 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:04] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:16:05,631 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:16:05,633 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:16:05,633 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:16:05,633 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:16:05,634 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:16:05,634 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:16:05,634 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:05] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:05,950 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:05] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:16:05,951 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:05] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:05,955 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:05] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:08,660 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:08] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 22:16:11,068 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:11] "GET /api/alert/config/4 HTTP/1.1" 200 -
2025-05-20 22:16:11,070 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:11] "GET /api/alert/history?limit=20&offset=0&config_id=4 HTTP/1.1" 200 -
2025-05-20 22:16:15,043 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:15] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 22:16:29,288 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:29] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:16:34,938 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:16:34,940 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:16:34,940 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:16:34,940 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:16:34,941 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:16:34,941 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:16:34,942 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:34] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:34,943 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:34] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:35,244 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:35] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:16:35,247 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:35] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:36,614 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:16:36,617 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:16:36,617 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:16:36,618 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:16:36,619 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:36] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:16:36,620 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:16:36,620 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:16:36,621 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:36] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:36,622 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:36] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:36,627 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:36] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:37,340 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:16:37,342 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:16:37,342 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:16:37,342 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:16:37,343 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:16:37,343 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:16:37,344 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:37] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:37,661 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:37] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:16:37,665 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:37] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:37,666 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:37] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:40,252 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:16:40,256 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:16:40,256 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:16:40,256 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:16:40,258 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:40] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:16:40,260 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:16:40,260 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:16:40,262 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:40] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:40,264 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:40] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:40,266 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:40] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:46,050 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:16:46,052 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:16:46,052 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:16:46,052 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:16:46,053 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:16:46,053 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:16:46,053 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:46] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:46,371 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:46] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:46,372 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:46] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:16:46,374 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:46] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:47,621 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:16:47,624 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:16:47,624 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:16:47,624 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:16:47,625 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:47] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:16:47,626 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:16:47,627 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:16:47,628 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:47] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:47,630 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:47] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:47,636 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:47] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:48,700 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:16:48,702 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:16:48,702 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:16:48,702 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:16:48,703 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:16:48,703 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:16:48,704 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:48] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:49,023 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:49] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:49,025 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:49] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:16:49,026 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:49] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:50,324 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:16:50,326 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:16:50,327 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:16:50,327 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:16:50,328 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:16:50,329 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:16:50,330 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:50] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:50,331 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:50] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:50,333 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:50] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:16:50,335 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:16:50] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:04,504 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:17:04,505 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:17:04,505 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:17:04,505 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:17:04,506 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:17:04,506 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:17:04,507 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:04] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:17:04,826 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:04] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:04,828 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:04] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:17:04,830 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:04] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:17:21,412 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:21] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 22:17:21,413 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:21] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:17:21,416 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:21] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:23,068 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:23] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:17:23,621 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:23] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 22:17:23,924 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:23] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:23,925 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:23] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:17:23,968 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:23] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:17:24,389 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:24] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 22:17:25,006 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:25] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:17:25,385 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:25] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 22:17:25,691 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:25] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:25,693 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:25] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:17:25,754 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:25] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:17:26,064 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:26] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:26,075 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:26] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:26,572 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:26] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:26,572 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:26] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:17:26,876 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:17:26,877 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:17:26,877 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:17:26,877 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:17:26,879 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:26] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:17:26,880 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:17:26,880 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:17:26,881 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:26] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:17:26,951 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:26] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:27,594 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:27] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:27,594 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:27] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:17:27,899 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:17:27,900 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:17:27,900 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:17:27,900 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:17:27,902 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:27] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:17:27,902 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:17:27,902 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:17:27,903 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:27] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:17:28,061 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:28] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:28,856 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:28] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:28,857 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:28] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:17:29,157 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:17:29,158 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:17:29,158 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:17:29,159 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:17:29,160 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:17:29,160 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:17:29,162 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:29] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:17:29,162 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:29] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:17:29,401 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:29] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:32,143 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:32] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:17:32,144 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:32] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:35,177 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:35] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:35,657 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:35] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:17:35,966 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:35] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:36,559 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:36] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:37,003 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:37] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:17:37,143 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:37] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:37,370 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:37] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:37,760 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:37] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:17:38,076 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:38] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:38,176 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:38] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:38,911 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:38] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:17:38,912 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:38] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:42,583 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:42] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 22:17:42,901 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:42] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:42,901 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:42] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:17:43,942 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:43] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 22:17:45,749 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:45] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:17:49,700 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:49] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:17:50,014 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:50] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:50,155 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:50] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 22:17:50,472 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:50] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:50,473 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:50] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:17:50,499 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:50] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:17:50,804 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:50] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:50,839 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:50] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:51,183 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:51] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:51,184 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:51] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:17:51,757 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:51] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 22:17:51,758 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:51] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:52,060 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:52] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:17:52,394 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:52] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:52,395 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:52] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:17:52,745 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:52] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:53,057 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:53] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:17:53,070 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:53] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:53,728 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:53] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 22:17:53,729 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:53] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:54,041 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:54] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:17:54,586 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:54] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:17:55,003 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:55] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 22:17:55,333 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:55] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 22:17:55,334 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:55] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:55,648 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:55] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:17:55,895 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:55] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:17:56,410 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:56] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:17:56,510 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:56] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:17:57,204 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:17:57] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:19:09,180 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:19:09] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:19:09,841 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:19:09] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:19:14,909 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:19:14] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 22:19:15,222 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=25, chain_id=None
2025-05-20 22:19:15,224 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:19:15,224 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:19:15,224 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 25]
2025-05-20 22:19:15,224 - config - INFO - 查询返回 0 条统计数据
2025-05-20 22:19:15,225 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:19:15] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:19:26,386 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 22:19:26,387 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:19:26,388 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:19:26,388 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 22:19:26,388 - config - INFO - 查询返回 2 条统计数据
2025-05-20 22:19:26,388 - config - INFO - 第一条数据示例: {'time_period': '2025-04-26', 'total_count': 2, 'success_count': 2, 'failed_count': 0, 'avg_execution_time': 25.400778176972512}
2025-05-20 22:19:26,389 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:19:26] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:19:28,758 - config - INFO - 获取执行统计数据: period=day, start_date=2025-05-13, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 22:19:28,759 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:19:28,760 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:19:28,760 - config - INFO - 查询参数: ['2025-05-13', '2025-05-20', 17]
2025-05-20 22:19:28,760 - config - INFO - 查询返回 1 条统计数据
2025-05-20 22:19:28,760 - config - INFO - 第一条数据示例: {'time_period': '2025-05-16', 'total_count': 2, 'success_count': 0, 'failed_count': 0, 'avg_execution_time': None}
2025-05-20 22:19:28,761 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:19:28] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-05-13&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:19:30,999 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:19:30] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 22:19:31,022 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:19:31] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:19:31,051 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=25, chain_id=None
2025-05-20 22:19:31,053 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:19:31,053 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:19:31,053 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 25]
2025-05-20 22:19:31,054 - config - INFO - 查询返回 0 条统计数据
2025-05-20 22:19:31,054 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:19:31] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:24:48,869 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:24:48,870 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:24:48,871 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:24:48,871 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:24:48,871 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:24:48,871 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:24:50,914 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:24:50,915 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:24:50,915 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:24:50,916 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:24:50,916 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:24:50,916 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:24:50,916 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:24:50] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:24:52,940 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:24:52,941 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:24:52,942 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:24:52,942 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:24:52,942 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:24:52,942 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:24:52,942 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:24:52] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:25:21,938 - config - INFO - 获取执行统计数据: period=day, start_date=None, end_date=None, script_id=None, chain_id=None
2025-05-20 22:25:21,939 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:25:21,939 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:25:21,939 - config - INFO - 查询参数: []
2025-05-20 22:25:21,939 - config - INFO - 查询返回 36 条统计数据
2025-05-20 22:25:21,939 - config - INFO - 第一条数据示例: {'time_period': '2025-04-15', 'total_count': 2, 'success_count': 1, 'failed_count': 1, 'avg_execution_time': 20.244910297019025}
2025-05-20 22:25:21,940 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:25:21] "GET /api/execution/statistics HTTP/1.1" 200 -
2025-05-20 22:25:36,378 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:25:36] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:29:27,963 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=25, chain_id=None
2025-05-20 22:29:27,964 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:29:27,964 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:29:27,964 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 25]
2025-05-20 22:29:27,964 - config - INFO - 查询返回 0 条统计数据
2025-05-20 22:29:27,965 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:29:27] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:29:31,409 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:29:31] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 22:29:31,428 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:29:31] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:29:31,463 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=25, chain_id=None
2025-05-20 22:29:31,464 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:29:31,464 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:29:31,464 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 25]
2025-05-20 22:29:31,464 - config - INFO - 查询返回 0 条统计数据
2025-05-20 22:29:31,464 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:29:31] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:30:42,896 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:30:42] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 22:30:42,928 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 22:30:42,929 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:30:42,929 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:30:42,929 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 22:30:42,929 - config - INFO - 查询返回 2 条统计数据
2025-05-20 22:30:42,929 - config - INFO - 第一条数据示例: {'time_period': '2025-04-26', 'total_count': 2, 'success_count': 2, 'failed_count': 0, 'avg_execution_time': 25.400778176972512}
2025-05-20 22:30:42,929 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:30:42] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:31:27,539 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:31:27] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:31:46,352 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:31:46] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 22:31:46,363 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 22:31:46,365 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:31:46,365 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:31:46,365 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 22:31:46,365 - config - INFO - 查询返回 2 条统计数据
2025-05-20 22:31:46,365 - config - INFO - 第一条数据示例: {'time_period': '2025-04-26', 'total_count': 2, 'success_count': 2, 'failed_count': 0, 'avg_execution_time': 25.400778176972512}
2025-05-20 22:31:46,365 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:31:46] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:31:48,963 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:31:48] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 22:31:49,051 - config - INFO - 获取执行统计数据: period=day, start_date=2025-02-19, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 22:31:49,053 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:31:49,053 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:31:49,053 - config - INFO - 查询参数: ['2025-02-19', '2025-05-20', 17]
2025-05-20 22:31:49,054 - config - INFO - 查询返回 3 条统计数据
2025-05-20 22:31:49,054 - config - INFO - 第一条数据示例: {'time_period': '2025-04-18', 'total_count': 1, 'success_count': 0, 'failed_count': 1, 'avg_execution_time': 26.656487567013123}
2025-05-20 22:31:49,055 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:31:49] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-02-19&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:31:49,249 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=25, chain_id=None
2025-05-20 22:31:49,251 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:31:49,251 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:31:49,251 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 25]
2025-05-20 22:31:49,251 - config - INFO - 查询返回 0 条统计数据
2025-05-20 22:31:49,252 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:31:49] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:32:44,659 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:32:44] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 22:32:44,682 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 22:32:44,684 - config - INFO - 执行历史记录总数: 319
2025-05-20 22:32:44,684 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:32:44,684 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 22:32:44,685 - config - INFO - 查询返回 2 条统计数据
2025-05-20 22:32:44,685 - config - INFO - 第一条数据示例: {'time_period': '2025-04-26', 'total_count': 2, 'success_count': 2, 'failed_count': 0, 'avg_execution_time': 25.400778176972512}
2025-05-20 22:32:44,686 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:32:44] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:33:58,038 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:33:58] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 22:33:58,073 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 22:33:58,075 - config - INFO - 执行历史记录总数: 409
2025-05-20 22:33:58,075 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:33:58,076 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 22:33:58,076 - config - INFO - 查询返回 2 条统计数据
2025-05-20 22:33:58,076 - config - INFO - 第一条数据示例: {'time_period': '2025-04-26', 'total_count': 2, 'success_count': 2, 'failed_count': 0, 'avg_execution_time': 25.400778176972512}
2025-05-20 22:33:58,077 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:33:58] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:34:04,681 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:34:04] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:36:57,206 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:36:57] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 22:37:02,089 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:37:02] "GET /api/alert/config/4 HTTP/1.1" 200 -
2025-05-20 22:37:02,093 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:37:02] "GET /api/alert/history?limit=20&offset=0&config_id=4 HTTP/1.1" 200 -
2025-05-20 22:37:04,355 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:37:04] "GET /api/alert/config/4 HTTP/1.1" 200 -
2025-05-20 22:37:04,356 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:37:04] "GET /api/alert/history?limit=20&offset=0&config_id=4 HTTP/1.1" 200 -
2025-05-20 22:37:12,025 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:37:12] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 22:37:16,487 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:37:16] "GET /api/alert/config/5 HTTP/1.1" 200 -
2025-05-20 22:37:16,492 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:37:16] "GET /api/alert/history?limit=20&offset=0&config_id=5 HTTP/1.1" 200 -
2025-05-20 22:37:17,672 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:37:17] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 22:37:50,376 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:37:50] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:37:52,169 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=25, chain_id=None
2025-05-20 22:37:52,172 - config - INFO - 执行历史记录总数: 409
2025-05-20 22:37:52,172 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:37:52,172 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 25]
2025-05-20 22:37:52,172 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:37:52] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 22:37:52,173 - config - INFO - 查询返回 0 条统计数据
2025-05-20 22:37:52,173 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:37:52] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:37:54,742 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:37:54] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:37:56,610 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 22:37:56,612 - config - INFO - 执行历史记录总数: 409
2025-05-20 22:37:56,612 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:37:56,612 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 22:37:56,613 - config - INFO - 查询返回 2 条统计数据
2025-05-20 22:37:56,613 - config - INFO - 第一条数据示例: {'time_period': '2025-04-26', 'total_count': 2, 'success_count': 2, 'failed_count': 0, 'avg_execution_time': 25.400778176972512}
2025-05-20 22:37:56,613 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:37:56] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:37:56,614 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:37:56] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 22:37:58,946 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=22, chain_id=None
2025-05-20 22:37:58,947 - config - INFO - 执行历史记录总数: 409
2025-05-20 22:37:58,947 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:37:58,947 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 22]
2025-05-20 22:37:58,948 - config - INFO - 查询返回 0 条统计数据
2025-05-20 22:37:58,948 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:37:58] "GET /api/execution/statistics?period=day&script_id=22&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:38:00,210 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 22:38:00,211 - config - INFO - 执行历史记录总数: 409
2025-05-20 22:38:00,211 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:38:00,211 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 22:38:00,212 - config - INFO - 查询返回 2 条统计数据
2025-05-20 22:38:00,212 - config - INFO - 第一条数据示例: {'time_period': '2025-04-26', 'total_count': 2, 'success_count': 2, 'failed_count': 0, 'avg_execution_time': 25.400778176972512}
2025-05-20 22:38:00,213 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:38:00] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:38:03,387 - config - INFO - 获取执行统计数据: period=day, start_date=2025-02-19, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 22:38:03,388 - config - INFO - 执行历史记录总数: 409
2025-05-20 22:38:03,388 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:38:03,388 - config - INFO - 查询参数: ['2025-02-19', '2025-05-20', 17]
2025-05-20 22:38:03,388 - config - INFO - 查询返回 3 条统计数据
2025-05-20 22:38:03,388 - config - INFO - 第一条数据示例: {'time_period': '2025-04-18', 'total_count': 1, 'success_count': 0, 'failed_count': 1, 'avg_execution_time': 26.656487567013123}
2025-05-20 22:38:03,389 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:38:03] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-02-19&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:38:04,710 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 22:38:04,712 - config - INFO - 执行历史记录总数: 409
2025-05-20 22:38:04,712 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:38:04,712 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 22:38:04,712 - config - INFO - 查询返回 2 条统计数据
2025-05-20 22:38:04,712 - config - INFO - 第一条数据示例: {'time_period': '2025-04-26', 'total_count': 2, 'success_count': 2, 'failed_count': 0, 'avg_execution_time': 25.400778176972512}
2025-05-20 22:38:04,714 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:38:04] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:39:11,178 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 22:39:11,180 - config - INFO - 执行历史记录总数: 409
2025-05-20 22:39:11,180 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:39:11,181 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 22:39:11,181 - config - INFO - 查询返回 2 条统计数据
2025-05-20 22:39:11,182 - config - INFO - 第一条数据示例: {'time_period': '2025-04-26', 'total_count': 2, 'success_count': 2, 'failed_count': 0, 'avg_execution_time': 25.400778176972512}
2025-05-20 22:39:11,182 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:39:11] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:40:04,396 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:40:04] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:40:31,297 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:40:31] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 22:40:31,316 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=25, chain_id=None
2025-05-20 22:40:31,318 - config - INFO - 执行历史记录总数: 409
2025-05-20 22:40:31,318 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:40:31,318 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 25]
2025-05-20 22:40:31,318 - config - INFO - 查询返回 0 条统计数据
2025-05-20 22:40:31,319 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:40:31] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:42:21,749 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,755 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,764 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,773 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,781 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,788 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,796 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,804 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,812 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,820 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,829 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,839 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,847 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,855 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,862 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,870 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,878 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,886 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,893 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,901 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,910 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,919 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,926 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,934 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,941 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,950 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,959 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,965 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,974 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,982 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,989 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:21,999 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,011 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,021 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,033 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,046 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,053 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,065 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,076 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,090 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,099 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,103 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,111 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,118 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,127 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,137 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,146 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,153 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,162 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,171 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,179 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,187 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,192 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,200 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,208 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,218 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,226 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,234 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,245 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,255 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,264 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,275 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,286 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,296 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,307 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,319 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,330 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,338 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,346 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,355 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,362 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,368 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,375 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,382 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,391 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,399 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,406 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,416 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,423 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,430 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,436 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,446 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,453 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,460 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,467 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,475 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,482 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,493 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,502 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:22,510 - config - INFO - 添加执行历史记录成功: 脚本ID 25, 链ID None
2025-05-20 22:42:26,084 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:42:26] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:42:28,097 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:42:28,099 - config - INFO - 执行历史记录总数: 499
2025-05-20 22:42:28,099 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:42:28,099 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:42:28,100 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:42:28,101 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:42:28,101 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:42:28] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:42:28,102 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:42:28] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:42:28,407 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:42:28] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:42:28,408 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:42:28] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:42:28,737 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:42:28] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:42:41,565 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:42:41] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:42:59,978 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:42:59,980 - config - INFO - 执行历史记录总数: 499
2025-05-20 22:42:59,980 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:42:59,980 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:42:59,981 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:42:59,981 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:42:59,982 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:42:59] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:43:02,239 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:43:02,242 - config - INFO - 执行历史记录总数: 499
2025-05-20 22:43:02,242 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:43:02,242 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:43:02,243 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:43:02,243 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:43:02,243 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:43:02] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:43:04,059 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:43:04,062 - config - INFO - 执行历史记录总数: 499
2025-05-20 22:43:04,063 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:43:04,063 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:43:04,065 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:43:04,065 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:43:04,066 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:43:04] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:43:04,504 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:43:04] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 22:43:04,536 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=25, chain_id=None
2025-05-20 22:43:04,537 - config - INFO - 执行历史记录总数: 499
2025-05-20 22:43:04,538 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:43:04,538 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 25]
2025-05-20 22:43:04,538 - config - INFO - 查询返回 0 条统计数据
2025-05-20 22:43:04,539 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:43:04] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:43:05,913 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:43:05,915 - config - INFO - 执行历史记录总数: 499
2025-05-20 22:43:05,915 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:43:05,915 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:43:05,916 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:43:05,916 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:43:05,917 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:43:05] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:43:20,361 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:43:20] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:44:12,540 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:12] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:44:12,760 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:12] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:44:12,855 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:44:12,856 - config - INFO - 执行历史记录总数: 499
2025-05-20 22:44:12,856 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:44:12,856 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:44:12,858 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:12] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:44:12,858 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:44:12,858 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:44:12,859 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:12] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:44:17,363 - config - INFO - 获取执行统计数据: period=day, start_date=2025-05-13, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:44:17,365 - config - INFO - 执行历史记录总数: 499
2025-05-20 22:44:17,365 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                AVG(execution_time) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:44:17,365 - config - INFO - 查询参数: ['2025-05-13', '2025-05-20']
2025-05-20 22:44:17,366 - config - INFO - 查询返回 7 条统计数据
2025-05-20 22:44:17,366 - config - INFO - 第一条数据示例: {'time_period': '2025-05-13', 'total_count': 12, 'success_count': 9, 'failed_count': 3, 'avg_execution_time': 270.9579547344325}
2025-05-20 22:44:17,367 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:17] "GET /api/execution/statistics?period=day&start_date=2025-05-13&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:44:19,766 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:19] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 22:44:20,076 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:20] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:44:20,077 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:20] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:44:20,112 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:20] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:44:20,541 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:20] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 22:44:21,174 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:21] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:44:21,515 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:21] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:44:21,821 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:21] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:44:22,457 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\execution.py', reloading
2025-05-20 22:44:22,479 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\execution.py', reloading
2025-05-20 22:44:22,624 - werkzeug - INFO -  * Restarting with stat
2025-05-20 22:44:22,635 - werkzeug - INFO -  * Restarting with stat
2025-05-20 22:44:23,429 - config - INFO - 数据库初始化成功
2025-05-20 22:44:23,432 - config - INFO - 数据库初始化成功
2025-05-20 22:44:23,440 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 22:44:23,442 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 22:44:23,467 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 22:44:23,468 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 22:44:23,469 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 22:44:23,470 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 22:44:23,535 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:23] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 22:44:23,717 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:23] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:44:23,718 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:23] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:44:23,723 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:23] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:44:26,116 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:44:26,117 - config - INFO - 符合条件的执行历史记录总数: 499
2025-05-20 22:44:26,117 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 22:44:26,117 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:44:26,117 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:44:26,118 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:44:26,118 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:44:26,118 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:26] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:44:26,119 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:26] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:44:26,428 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:26] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:44:26,429 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:26] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:44:35,083 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:44:35,084 - config - INFO - 符合条件的执行历史记录总数: 499
2025-05-20 22:44:35,084 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 22:44:35,085 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:44:35,085 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:44:35,085 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:44:35,085 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:44:36,329 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:36] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:44:36,330 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:36] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:44:36,371 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:36] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:44:37,100 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:44:37,102 - config - INFO - 符合条件的执行历史记录总数: 499
2025-05-20 22:44:37,102 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 22:44:37,102 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:44:37,102 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:44:37,103 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:44:37,103 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:44:37,104 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:37] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:44:38,150 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=25, chain_id=None
2025-05-20 22:44:38,153 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:38] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 22:44:38,163 - config - INFO - 符合条件的执行历史记录总数: 90
2025-05-20 22:44:38,163 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 22:44:38,164 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:44:38,164 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 25]
2025-05-20 22:44:38,164 - config - INFO - 查询返回 0 条统计数据
2025-05-20 22:44:38,164 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-20 22:44:38,164 - config - INFO - 备用查询参数: [25, '2025-04-20', '2025-05-20']
2025-05-20 22:44:38,165 - config - INFO - 备用查询返回 1 条统计数据
2025-05-20 22:44:38,165 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-20 22:44:38,166 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:38] "GET /api/execution/statistics?period=day&script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:44:39,130 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:44:39,132 - config - INFO - 符合条件的执行历史记录总数: 499
2025-05-20 22:44:39,132 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 22:44:39,132 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:44:39,132 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:44:39,134 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:44:39,134 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:44:39,135 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:39] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:44:40,889 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:40] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:44:41,363 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:41] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 22:44:41,518 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:41] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:44:41,675 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:41] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:44:41,823 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:41] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:44:46,474 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:46] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:44:46,781 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:44:46,784 - config - INFO - 符合条件的执行历史记录总数: 499
2025-05-20 22:44:46,784 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 22:44:46,785 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:46] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:44:46,785 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:44:46,785 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:44:46,787 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:46] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:44:46,789 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:44:46,789 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:44:46,790 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:46] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:44:59,151 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:44:59] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:45:01,190 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:45:01] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 22:45:01,194 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 22:45:01,195 - config - INFO - 符合条件的执行历史记录总数: 17
2025-05-20 22:45:01,196 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 22:45:01,196 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:45:01,196 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 22:45:01,196 - config - INFO - 查询返回 2 条统计数据
2025-05-20 22:45:01,196 - config - INFO - 第一条数据示例: {'time_period': '2025-04-26', 'total_count': 2, 'success_count': 2, 'failed_count': 0, 'avg_execution_time': 25.400778176972512}
2025-05-20 22:45:01,197 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:45:01] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:45:10,403 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:45:10] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 22:45:10,408 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 22:45:10,409 - config - INFO - 符合条件的执行历史记录总数: 17
2025-05-20 22:45:10,409 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 22:45:10,409 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:45:10,409 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 22:45:10,410 - config - INFO - 查询返回 2 条统计数据
2025-05-20 22:45:10,410 - config - INFO - 第一条数据示例: {'time_period': '2025-04-26', 'total_count': 2, 'success_count': 2, 'failed_count': 0, 'avg_execution_time': 25.400778176972512}
2025-05-20 22:45:10,411 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:45:10] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:45:14,348 - config - INFO - 获取执行统计数据: period=day, start_date=2025-05-13, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 22:45:14,349 - config - INFO - 符合条件的执行历史记录总数: 17
2025-05-20 22:45:14,350 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 22:45:14,350 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:45:14,350 - config - INFO - 查询参数: ['2025-05-13', '2025-05-20', 17]
2025-05-20 22:45:14,350 - config - INFO - 查询返回 1 条统计数据
2025-05-20 22:45:14,350 - config - INFO - 第一条数据示例: {'time_period': '2025-05-16', 'total_count': 2, 'success_count': 0, 'failed_count': 0, 'avg_execution_time': None}
2025-05-20 22:45:14,350 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:45:14] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-05-13&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:45:23,358 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:45:23] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 22:45:23,379 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 22:45:23,380 - config - INFO - 符合条件的执行历史记录总数: 17
2025-05-20 22:45:23,381 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 22:45:23,381 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:45:23,381 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 22:45:23,381 - config - INFO - 查询返回 2 条统计数据
2025-05-20 22:45:23,381 - config - INFO - 第一条数据示例: {'time_period': '2025-04-26', 'total_count': 2, 'success_count': 2, 'failed_count': 0, 'avg_execution_time': 25.400778176972512}
2025-05-20 22:45:23,382 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:45:23] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:48:10,149 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,157 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,166 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,173 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,181 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,188 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,195 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,202 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,210 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,217 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,226 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,232 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,240 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,248 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,251 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,259 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,267 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,276 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,282 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,290 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,297 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,304 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,311 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,319 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,326 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,333 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,336 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,344 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,351 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,358 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,366 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,375 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,381 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,389 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,397 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,404 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,410 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,417 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,424 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,432 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,441 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,448 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,452 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,459 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,466 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,473 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,480 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,488 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,495 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,502 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,510 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,518 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,525 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,532 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,540 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,546 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,554 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,563 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,571 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,579 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,586 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,595 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,602 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,611 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,618 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,625 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,634 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,641 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,649 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,657 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,664 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,672 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,679 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,686 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,693 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,701 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,708 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,716 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,720 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,727 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,734 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,738 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,745 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,753 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,759 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,768 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,775 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,783 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,787 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:10,791 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,238 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,243 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,250 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,258 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,265 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,271 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,274 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,280 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,284 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,290 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,297 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,303 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,310 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,316 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,324 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,327 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,334 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,341 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,347 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,353 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,358 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,365 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,370 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,376 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,382 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,389 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,395 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,402 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,409 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,417 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,424 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,430 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,436 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,443 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,449 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,455 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,461 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,467 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,474 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,480 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,486 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,494 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,500 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,507 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,513 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,520 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,525 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,531 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,536 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,542 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,547 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,553 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,559 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,565 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,571 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,578 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,585 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,588 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,595 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,601 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,607 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,613 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,617 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,623 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,629 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,635 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,641 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,643 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,650 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,657 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,662 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,668 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,674 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,680 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,686 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,692 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,698 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,704 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,710 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,716 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,722 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,729 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,734 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,740 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,747 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,753 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,759 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,764 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,770 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:28,776 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 22:48:46,618 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:48:46] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:49:32,194 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:49:32,195 - config - INFO - 符合条件的执行历史记录总数: 679
2025-05-20 22:49:32,195 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 22:49:32,195 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:49:32,195 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:49:32,196 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:49:32,196 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:49:34,254 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:49:34,255 - config - INFO - 符合条件的执行历史记录总数: 679
2025-05-20 22:49:34,255 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 22:49:34,255 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:49:34,255 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:49:34,256 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:49:34,256 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:49:34,256 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:49:34] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:49:36,270 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:49:36,271 - config - INFO - 符合条件的执行历史记录总数: 679
2025-05-20 22:49:36,271 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 22:49:36,271 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:49:36,271 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:49:36,271 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:49:36,271 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:49:36,272 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:49:36] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:49:51,461 - config - INFO - 获取执行统计数据: period=day, start_date=None, end_date=None, script_id=17, chain_id=None
2025-05-20 22:49:51,463 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 22:49:51,463 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 22:49:51,463 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:49:51,464 - config - INFO - 查询参数: [17]
2025-05-20 22:49:51,465 - config - INFO - 查询返回 4 条统计数据
2025-05-20 22:49:51,465 - config - INFO - 第一条数据示例: {'time_period': '2025-04-18', 'total_count': 1, 'success_count': 0, 'failed_count': 1, 'avg_execution_time': 26.656487567013123}
2025-05-20 22:52:02,570 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:52:02] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 22:52:02,593 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 22:52:02,594 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 22:52:02,595 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 22:52:02,595 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:52:02,595 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 22:52:02,596 - config - INFO - 查询返回 29 条统计数据
2025-05-20 22:52:02,596 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 22:52:02,597 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:52:02] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:52:21,305 - config - INFO - 获取执行统计数据: period=day, start_date=2025-05-13, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 22:52:21,307 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 22:52:21,307 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 22:52:21,308 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:52:21,308 - config - INFO - 查询参数: ['2025-05-13', '2025-05-20', 17]
2025-05-20 22:52:21,308 - config - INFO - 查询返回 7 条统计数据
2025-05-20 22:52:21,308 - config - INFO - 第一条数据示例: {'time_period': '2025-05-13', 'total_count': 5, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 284.25}
2025-05-20 22:52:21,309 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:52:21] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-05-13&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:52:22,991 - config - INFO - 获取执行统计数据: period=day, start_date=2025-02-19, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 22:52:22,993 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 22:52:22,993 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 22:52:22,993 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:52:22,993 - config - INFO - 查询参数: ['2025-02-19', '2025-05-20', 17]
2025-05-20 22:52:22,994 - config - INFO - 查询返回 29 条统计数据
2025-05-20 22:52:22,994 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 22:52:22,995 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:52:22] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-02-19&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:52:25,407 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 22:52:25,410 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 22:52:25,410 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 22:52:25,411 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:52:25,411 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 22:52:25,413 - config - INFO - 查询返回 29 条统计数据
2025-05-20 22:52:25,413 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 22:52:25,414 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:52:25] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:53:11,758 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:53:11] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:55:03,656 - config - INFO - 数据库初始化成功
2025-05-20 22:55:03,666 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 22:55:04,985 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-20 22:55:04,985 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-20 22:55:04,986 - werkzeug - INFO -  * Restarting with stat
2025-05-20 22:55:05,698 - config - INFO - 数据库初始化成功
2025-05-20 22:55:05,707 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 22:55:05,730 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 22:55:05,733 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 22:55:32,425 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:55:32] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:55:32,425 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:55:32] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:55:32,485 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:55:32] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:55:32,552 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:55:32,553 - config - INFO - 符合条件的执行历史记录总数: 679
2025-05-20 22:55:32,553 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 22:55:32,553 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:55:32,553 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:55:32,554 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:55:32,554 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:55:32,554 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:55:32] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:55:39,157 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:55:39] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:55:42,546 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:55:42] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 22:55:42,555 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 22:55:42,557 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 22:55:42,557 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 22:55:42,557 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:55:42,557 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 22:55:42,558 - config - INFO - 查询返回 29 条统计数据
2025-05-20 22:55:42,558 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 22:55:42,559 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:55:42] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:56:00,056 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:56:00] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:56:00,056 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:56:00] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 22:56:00,070 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:56:00] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 22:56:00,290 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 22:56:00,292 - config - INFO - 符合条件的执行历史记录总数: 679
2025-05-20 22:56:00,292 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 22:56:00,292 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:56:00,292 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 22:56:00,293 - config - INFO - 查询返回 30 条统计数据
2025-05-20 22:56:00,294 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 22:56:00,294 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:56:00] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:56:03,689 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:56:03] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 22:56:09,222 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:56:09] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 22:56:44,333 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 22:56:44,334 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 22:56:44,334 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 22:56:44,334 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:56:44,334 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 22:56:44,335 - config - INFO - 查询返回 29 条统计数据
2025-05-20 22:56:44,335 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 22:56:44,335 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:56:44] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:57:31,382 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:57:31] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 22:57:32,372 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 22:57:32,373 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 22:57:32,373 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 22:57:32,373 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:57:32,373 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 22:57:32,373 - config - INFO - 查询返回 29 条统计数据
2025-05-20 22:57:32,374 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 22:57:32,374 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:57:32] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 22:58:21,895 - config - INFO - 获取执行统计数据: period=day, start_date=2025-05-13, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 22:58:21,897 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 22:58:21,898 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 22:58:21,898 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 22:58:21,898 - config - INFO - 查询参数: ['2025-05-13', '2025-05-20', 17]
2025-05-20 22:58:21,898 - config - INFO - 查询返回 7 条统计数据
2025-05-20 22:58:21,898 - config - INFO - 第一条数据示例: {'time_period': '2025-05-13', 'total_count': 5, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 284.25}
2025-05-20 22:58:21,899 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 22:58:21] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-05-13&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:01:52,840 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:01:52,842 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:01:52,842 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:01:52,842 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:01:52,842 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:01:52,843 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:01:52,843 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:01:52,844 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:01:52,845 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:01:52] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:01:52,846 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:01:52,846 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:01:52,846 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:01:52,846 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:01:52,847 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:01:52,849 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:01:52,849 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:01:52] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:01:56,446 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:01:56] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 23:01:56,461 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:01:56,463 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:01:56,463 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:01:56,463 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:01:56,463 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:01:56,464 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:01:56,464 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:01:56,465 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:01:56] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:02:14,925 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:02:14] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 23:02:15,506 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:02:15,508 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:02:15,508 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:02:15,508 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:02:15,508 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:02:15,508 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:02:15,508 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:02:15,509 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:02:15] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:02:59,780 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:02:59] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 23:03:01,543 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 23:03:01,545 - config - INFO - 符合条件的执行历史记录总数: 679
2025-05-20 23:03:01,546 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:03:01,546 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:03:01,546 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 23:03:01,547 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:03:01] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:03:01,547 - config - INFO - 查询返回 30 条统计数据
2025-05-20 23:03:01,547 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 23:03:01,548 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:03:01] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:03:01,853 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:03:01] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 23:03:01,862 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:03:01] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:03:01,947 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:03:01] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:03:02,185 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:03:02] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:03:05,521 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:03:05] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:03:05,984 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:03:05] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 23:03:07,815 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:03:07,816 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:03:07] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 23:03:07,818 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:03:07,818 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:03:07,818 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:03:07,818 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:03:07,819 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:03:07,820 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:03:07,820 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:03:07] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:03:17,272 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:03:17] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 23:03:17,282 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:03:17,284 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:03:17,285 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:03:17,285 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:03:17,285 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:03:17,286 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:03:17,286 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:03:17,287 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:03:17] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:03:35,689 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 23:03:35,692 - config - INFO - 符合条件的执行历史记录总数: 679
2025-05-20 23:03:35,692 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:03:35,692 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:03:35,693 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 23:03:35,693 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:03:35] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:03:35,694 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:03:35] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 23:03:35,695 - config - INFO - 查询返回 30 条统计数据
2025-05-20 23:03:35,696 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 23:03:35,697 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:03:35] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:03:35,933 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:03:35] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:03:36,006 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:03:36] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:03:36,012 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:03:36] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:06:12,001 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:06:12] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:06:12,002 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:06:12] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 23:06:12,004 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:06:12] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 23:06:12,028 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 23:06:12,029 - config - INFO - 符合条件的执行历史记录总数: 679
2025-05-20 23:06:12,029 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:06:12,029 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:06:12,029 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 23:06:12,030 - config - INFO - 查询返回 30 条统计数据
2025-05-20 23:06:12,030 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 23:06:12,031 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:06:12] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:06:19,467 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:06:19] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:06:26,942 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:06:26] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 23:06:28,962 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:06:28,963 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:06:28,963 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:06:28,963 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:06:28,963 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:06:28,964 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:06:28,964 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:06:28,964 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:06:28] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:08:16,092 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:08:16,093 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:08:16,093 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:08:16,093 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:08:16,093 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:08:16,093 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:08:16,094 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:08:16,094 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:08:16] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:08:16,097 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:08:16,098 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:08:16,098 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:08:16,098 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:08:16,098 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:08:16,098 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:08:16,099 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:08:16,099 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:08:16] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:08:38,151 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:08:38] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 23:08:38,304 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:08:38,306 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:08:38,306 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:08:38,306 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:08:38,306 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:08:38,307 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:08:38,307 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:08:38,307 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:08:38] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:08:39,487 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:08:39] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:08:42,488 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:08:42,490 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:08:42] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 23:08:42,491 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:08:42,491 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:08:42,491 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:08:42,491 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:08:42,492 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:08:42,493 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:08:42,495 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:08:42] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:09:55,476 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:09:55,478 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:09:55,478 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:09:55,478 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:09:55,478 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:09:55,478 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:09:55,478 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:09:55,479 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:09:55] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:09:55,766 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:09:55,768 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:09:55,768 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:09:55,768 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:09:55,768 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:09:55,769 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:09:55,769 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:09:55,769 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:09:55] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:10:16,395 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:10:16,396 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:10:16,397 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:10:16,397 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:10:16,397 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:10:16,397 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:10:16,397 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:10:16,398 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:10:16] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:10:16,677 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:10:16,678 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:10:16,678 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:10:16,678 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:10:16,678 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:10:16,679 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:10:16,679 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:10:16,680 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:10:16] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:10:35,260 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:10:35,261 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:10:35,261 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:10:35,261 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:10:35,261 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:10:35,262 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:10:35,262 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:10:35,262 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:10:35] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:10:35,545 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:10:35,546 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:10:35,546 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:10:35,546 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:10:35,546 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:10:35,547 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:10:35,547 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:10:35,548 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:10:35] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:10:39,595 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:10:39] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 23:10:39,732 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:10:39,733 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:10:39,733 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:10:39,733 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:10:39,733 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:10:39,734 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:10:39,734 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:10:39,734 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:10:39] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:11:19,160 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:11:19,161 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:11:19,162 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:11:19,162 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:11:19,162 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:11:19,162 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:11:19,162 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:11:19,162 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:11:19] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:11:19,206 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:11:19,208 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:11:19,208 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:11:19,208 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:11:19,208 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:11:19,209 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:11:19,209 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:11:19,209 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:11:19] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:11:19,419 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:11:19,420 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:11:19,420 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:11:19,420 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:11:19,420 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:11:19,421 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:11:19,421 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:11:19,422 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:11:19] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:11:19,665 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:11:19,666 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:11:19,666 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:11:19,666 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:11:19,666 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:11:19,666 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:11:19,666 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:11:19,667 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:11:19] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:11:59,542 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:11:59] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 23:11:59,557 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:11:59,558 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:11:59,558 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:11:59,558 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:11:59,558 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:11:59,559 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:11:59,559 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:11:59,559 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:11:59] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:12:34,563 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:12:34,564 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:12:34,566 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:12:34,566 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:12:34,566 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:12:34,567 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:12:34,567 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:12:34,567 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:12:34,567 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:12:34,567 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:12:34,568 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:12:34,569 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:12:34,569 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:12:34] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:12:34,570 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:12:34,570 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:12:34,571 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:12:34] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:13:08,574 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:13:08,575 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:13:08,575 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:13:08,575 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:13:08,575 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:13:08,576 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:13:08,576 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:13:08,576 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:13:08] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:13:08,605 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:13:08,606 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:13:08,606 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:13:08,606 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:13:08,606 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:13:08,606 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:13:08,607 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:13:08,607 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:13:08] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:13:59,141 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:13:59] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 23:13:59,164 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:13:59,166 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:13:59,166 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:13:59,166 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:13:59,166 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:13:59,167 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:13:59,167 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:13:59,167 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:13:59] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:14:18,618 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:14:18,620 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:14:18,620 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:14:18,620 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:14:18,620 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:14:18,622 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:14:18,622 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:14:18,623 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:14:18] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:14:18,644 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:14:18,646 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:14:18,646 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:14:18,646 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:14:18,646 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:14:18,647 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:14:18,647 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:14:18,648 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:14:18] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:14:21,631 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:14:21] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 23:14:21,670 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:14:21,671 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:14:21,671 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:14:21,671 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:14:21,671 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:14:21,672 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:14:21,672 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:14:21,673 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:14:21] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:14:47,878 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:14:47,879 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:14:47,879 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:14:47,879 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:14:47,879 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:14:47,880 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:14:47,880 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:14:47,880 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:14:47] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:14:48,122 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:14:48,123 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:14:48,123 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:14:48,123 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:14:48,123 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:14:48,124 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:14:48,124 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:14:48,124 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:14:48] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:14:51,108 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:14:51] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 23:14:51,118 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:14:51,119 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:14:51,119 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:14:51,119 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:14:51,119 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:14:51,120 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:14:51,120 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:14:51,120 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:14:51] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:16:45,471 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:16:45] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 23:16:45,685 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:16:45] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:16:45,780 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:16:45] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 23:16:45,978 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:16:45] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 23:16:46,523 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:16:46] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 23:16:46,534 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:16:46] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:16:48,641 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:16:48] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 23:16:48,966 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:16:48] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 23:16:48,969 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:16:48] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 23:16:48,971 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:16:48] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 23:16:51,201 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 9
2025-05-20 23:16:51,213 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:16:51] "POST /api/execution/chain/9 HTTP/1.1" 200 -
2025-05-20 23:16:51,219 - config - INFO - 更新执行进度成功: ID 680
2025-05-20 23:16:51,225 - config - INFO - 更新执行进度成功: ID 680
2025-05-20 23:16:51,472 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\AppData\Local\Temp\script_version_23.py
2025-05-20 23:16:51,472 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-20 23:16:51,472 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\AppData\Local\Temp:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/script_version_23.py /params/tmp5tbwh_z0.json
2025-05-20 23:16:53,365 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:16:53] "GET /api/execution/history/680 HTTP/1.1" 200 -
2025-05-20 23:16:53,740 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:16:53] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 23:16:53,850 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:16:53,852 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:16:53,853 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:16:53,853 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:16:53,853 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:16:53,854 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:16:53,854 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:16:53,855 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:16:53] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:16:53,909 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:16:53] "GET /api/execution/history/680 HTTP/1.1" 200 -
2025-05-20 23:17:02,673 - config - INFO - Docker执行完成，返回码: 0
2025-05-20 23:17:02,673 - config - INFO - Docker执行成功，输出长度: 9601
2025-05-20 23:17:02,683 - config - INFO - 更新执行进度成功: ID 680
2025-05-20 23:17:02,917 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\AppData\Local\Temp\script_version_24.py
2025-05-20 23:17:02,917 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-20 23:17:02,917 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\AppData\Local\Temp:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/script_version_24.py /params/tmp1bimmn6g.json
2025-05-20 23:17:08,565 - config - INFO - Docker执行完成，返回码: 1
2025-05-20 23:17:08,566 - config - ERROR - Docker执行失败，错误信息:   WARNING: The script dotenv is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script flask is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip

2025-05-20 23:17:08,588 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 23:17:08,589 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 23:17:08,594 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 680
2025-05-20 23:17:08,595 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 23:17:08,595 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 23:17:08,601 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 680
2025-05-20 23:17:08,601 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 23:17:08,601 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 23:17:08,607 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 680
2025-05-20 23:17:08,608 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 23:17:08,608 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 23:17:08,614 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 680
2025-05-20 23:17:08,614 - config - INFO - 更新执行历史记录成功: ID 680
2025-05-20 23:18:35,517 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:18:35] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:18:36,377 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:18:36] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 23:18:36,385 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:18:36] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:18:36,971 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:18:36] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:18:39,082 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:18:39] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 23:18:39,394 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:18:39,396 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:18:39,396 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:18:39,397 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:18:39,397 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:18:39,398 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:18:39,398 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:18:39,398 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:18:39] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:18:43,490 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:18:43] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 23:18:43,492 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:18:43] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:18:43,801 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:18:43] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 23:18:43,889 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:18:43] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 23:18:43,890 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:18:43] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:18:45,821 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:18:45] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 23:18:46,405 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 23:18:46,407 - config - INFO - 符合条件的执行历史记录总数: 680
2025-05-20 23:18:46,407 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:18:46,407 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:18:46,407 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 23:18:46,408 - config - INFO - 查询返回 30 条统计数据
2025-05-20 23:18:46,408 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 23:18:46,409 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:18:46] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:18:46,724 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:18:46] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:18:46,726 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:18:46] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:18:46,727 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:18:46] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:19:35,880 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:19:35] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:19:37,376 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:19:37] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 23:19:37,390 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:19:37,392 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:19:37,392 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:19:37,392 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:19:37,392 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:19:37,393 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:19:37,393 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:19:37,393 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:19:37] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:19:40,026 - config - INFO - 获取执行统计数据: period=day, start_date=2025-05-13, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:19:40,028 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:19:40,028 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:19:40,028 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:19:40,029 - config - INFO - 查询参数: ['2025-05-13', '2025-05-20', 17]
2025-05-20 23:19:40,029 - config - INFO - 查询返回 7 条统计数据
2025-05-20 23:19:40,029 - config - INFO - 第一条数据示例: {'time_period': '2025-05-13', 'total_count': 5, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 284.25}
2025-05-20 23:19:40,030 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:19:40] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-05-13&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:19:41,763 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:19:41,765 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:19:41,765 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:19:41,766 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:19:41,766 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:19:41,767 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:19:41,767 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:19:41,768 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:19:41] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:20:44,134 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:20:44] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 23:20:44,199 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:20:44,201 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:20:44,201 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:20:44,201 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:20:44,201 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:20:44,201 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:20:44,201 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:20:44,202 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:20:44] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:20:44,542 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:20:44] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 23:20:44,663 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:20:44,664 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:20:44,664 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:20:44,664 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:20:44,664 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:20:44,664 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:20:44,664 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:20:44,665 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:20:44] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:21:55,873 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:21:55] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 23:21:57,434 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 23:21:57,436 - config - INFO - 符合条件的执行历史记录总数: 680
2025-05-20 23:21:57,436 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:21:57,436 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:21:57,436 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 23:21:57,437 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:21:57] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:21:57,437 - config - INFO - 查询返回 30 条统计数据
2025-05-20 23:21:57,437 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 23:21:57,438 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:21:57] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:21:57,466 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:21:57] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:21:57,782 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:21:57] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 23:21:57,830 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:21:57] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:21:58,127 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:21:58] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:22:03,015 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:03] "GET /api/execution/history?script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:22:04,863 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:04] "GET /api/execution/history?script_id=17&start_date=2025-05-13&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:22:08,657 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:08] "GET /api/execution/history?chain_id=6&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:22:09,789 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:09] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:22:12,005 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:12] "GET /api/execution/history?script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:22:13,007 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:13] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 23:22:17,051 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 23:22:17,053 - config - INFO - 符合条件的执行历史记录总数: 680
2025-05-20 23:22:17,053 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:22:17,053 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:22:17,053 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 23:22:17,055 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:17] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:22:17,055 - config - INFO - 查询返回 30 条统计数据
2025-05-20 23:22:17,056 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 23:22:17,056 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:17] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:22:17,102 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:17] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:22:17,103 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:17] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 23:22:17,167 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:17] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:22:17,484 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:17] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:22:34,597 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:34] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 23:22:34,833 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:34] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:22:36,712 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:36] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 23:22:36,728 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:36] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 23:22:37,042 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:37] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 23:22:37,049 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:37] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 23:22:40,086 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:40] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:22:43,290 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:43] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 23:22:43,307 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:22:43,309 - config - INFO - 符合条件的执行历史记录总数: 197
2025-05-20 23:22:43,309 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:22:43,309 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:22:43,309 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:22:43,310 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:22:43,311 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:22:43,312 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:43] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:22:46,640 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:46] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 23:22:48,675 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 23:22:48,677 - config - INFO - 符合条件的执行历史记录总数: 680
2025-05-20 23:22:48,677 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:22:48,677 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:22:48,677 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 23:22:48,678 - config - INFO - 查询返回 30 条统计数据
2025-05-20 23:22:48,678 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 23:22:48,679 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:48] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:22:48,990 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:48] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:22:49,010 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:49] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:22:49,011 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:49] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:22:55,474 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:55] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 23:22:55,711 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:55] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:22:55,791 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:55] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 23:22:56,007 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:56] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 23:22:56,010 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:56] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:22:57,059 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:57] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 23:22:59,941 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=None, chain_id=None
2025-05-20 23:22:59,943 - config - INFO - 符合条件的执行历史记录总数: 680
2025-05-20 23:22:59,944 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:22:59,944 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:22:59,944 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:59] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:22:59,944 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20']
2025-05-20 23:22:59,946 - config - INFO - 查询返回 30 条统计数据
2025-05-20 23:22:59,946 - config - INFO - 第一条数据示例: {'time_period': '2025-04-20', 'total_count': 4, 'success_count': 3, 'failed_count': 1, 'avg_execution_time': 48.512899238982}
2025-05-20 23:22:59,947 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:22:59] "GET /api/execution/statistics?period=day&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:23:00,278 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:23:00] "GET /api/execution/history?script_id=25&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:23:00,279 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:23:00] "GET /api/execution/history?chain_id=9&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:23:57,801 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:23:57] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 23:23:58,108 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:23:58] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:23:58,110 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:23:58] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 23:23:58,512 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:23:58] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 23:23:58,923 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:23:58] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 23:23:59,135 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:23:59] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:24:00,484 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:24:00] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 23:26:22,673 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:26:22] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 23:26:22,674 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:26:22] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 23:26:22,682 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:26:22] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:26:23,021 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:26:23] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:26:23,022 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:26:23] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 23:26:25,564 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:26:25] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:26:29,527 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-20 23:26:29,528 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:26:29] "POST /api/execution/script/17 HTTP/1.1" 200 -
2025-05-20 23:26:29,538 - config - INFO - 更新执行进度成功: ID 681
2025-05-20 23:26:29,775 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_系统信息获取.py
2025-05-20 23:26:29,775 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-20 23:26:29,775 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250516001959_系统信息获取.py /params/tmpxzdzi584.json
2025-05-20 23:26:32,478 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:26:32] "GET /api/scripts/17 HTTP/1.1" 200 -
2025-05-20 23:26:32,485 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=17, chain_id=None
2025-05-20 23:26:32,487 - config - INFO - 符合条件的执行历史记录总数: 198
2025-05-20 23:26:32,488 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:26:32,488 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:26:32,488 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 17]
2025-05-20 23:26:32,489 - config - INFO - 查询返回 29 条统计数据
2025-05-20 23:26:32,489 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 3, 'success_count': 3, 'failed_count': 0, 'avg_execution_time': 159.66666666666666}
2025-05-20 23:26:32,490 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:26:32] "GET /api/execution/statistics?period=day&script_id=17&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:26:37,428 - config - INFO - Docker执行完成，返回码: 0
2025-05-20 23:26:37,429 - config - INFO - Docker执行成功，输出长度: 4380
2025-05-20 23:26:37,442 - config - INFO - 更新执行历史记录成功: ID 681
2025-05-20 23:26:39,817 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:26:39] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:26:40,771 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:26:40] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 23:26:41,088 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:26:41] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:26:41,089 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:26:41] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 23:26:41,152 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:26:41] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 23:26:41,460 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:26:41] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:26:42,669 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:26:42] "GET /api/chains/9 HTTP/1.1" 200 -
2025-05-20 23:26:42,979 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:26:42] "GET /api/scripts/23 HTTP/1.1" 200 -
2025-05-20 23:26:42,991 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:26:42] "GET /api/scripts/24 HTTP/1.1" 200 -
2025-05-20 23:26:43,002 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:26:43] "GET /api/scripts/25 HTTP/1.1" 200 -
2025-05-20 23:29:16,789 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:29:16] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:48:00,837 - config - INFO - 数据库初始化成功
2025-05-20 23:48:00,847 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 23:48:02,172 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-20 23:48:02,172 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-20 23:48:02,173 - werkzeug - INFO -  * Restarting with stat
2025-05-20 23:48:02,976 - config - INFO - 数据库初始化成功
2025-05-20 23:48:02,985 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-20 23:48:03,012 - werkzeug - WARNING -  * Debugger is active!
2025-05-20 23:48:03,014 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-20 23:48:09,346 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:48:09] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:48:23,591 - config - INFO - 添加执行历史记录成功: 脚本ID 30, 链ID None
2025-05-20 23:48:23,592 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:48:23] "POST /api/execution/script/30 HTTP/1.1" 200 -
2025-05-20 23:48:23,599 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 23:48:23,599 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 23:48:23,605 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 682
2025-05-20 23:48:23,606 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 23:48:23,606 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 23:48:23,612 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 682
2025-05-20 23:48:23,612 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 23:48:23,612 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 23:48:23,618 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 682
2025-05-20 23:48:23,619 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-20 23:48:23,619 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-20 23:48:23,625 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 682
2025-05-20 23:48:23,625 - config - INFO - 更新执行历史记录成功: ID 682
2025-05-20 23:48:26,406 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:48:26] "GET /api/scripts/30 HTTP/1.1" 200 -
2025-05-20 23:48:26,430 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=30, chain_id=None
2025-05-20 23:48:26,431 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-20 23:48:26,431 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:48:26,431 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:48:26,431 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 30]
2025-05-20 23:48:26,431 - config - INFO - 查询返回 0 条统计数据
2025-05-20 23:48:26,431 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-20 23:48:26,431 - config - INFO - 备用查询参数: [30, '2025-04-20', '2025-05-20']
2025-05-20 23:48:26,431 - config - INFO - 备用查询返回 1 条统计数据
2025-05-20 23:48:26,432 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-20 23:48:26,432 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:48:26] "GET /api/execution/statistics?period=day&script_id=30&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:48:29,836 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:48:29] "GET /api/scripts/30/versions HTTP/1.1" 200 -
2025-05-20 23:48:33,531 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:48:33] "GET /api/scripts/30 HTTP/1.1" 200 -
2025-05-20 23:48:35,563 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:48:35] "GET /api/scripts/30 HTTP/1.1" 200 -
2025-05-20 23:48:35,572 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=30, chain_id=None
2025-05-20 23:48:35,573 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-20 23:48:35,573 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:48:35,574 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:48:35,574 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 30]
2025-05-20 23:48:35,574 - config - INFO - 查询返回 0 条统计数据
2025-05-20 23:48:35,574 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-20 23:48:35,574 - config - INFO - 备用查询参数: [30, '2025-04-20', '2025-05-20']
2025-05-20 23:48:35,574 - config - INFO - 备用查询返回 1 条统计数据
2025-05-20 23:48:35,574 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-20 23:48:35,575 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:48:35] "GET /api/execution/statistics?period=day&script_id=30&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:48:36,980 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:48:36] "GET /api/scripts/30 HTTP/1.1" 200 -
2025-05-20 23:48:38,634 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:48:38] "GET /api/scripts/30 HTTP/1.1" 200 -
2025-05-20 23:48:38,949 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=30, chain_id=None
2025-05-20 23:48:38,950 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-20 23:48:38,951 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:48:38,951 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:48:38,951 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 30]
2025-05-20 23:48:38,951 - config - INFO - 查询返回 0 条统计数据
2025-05-20 23:48:38,951 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-20 23:48:38,951 - config - INFO - 备用查询参数: [30, '2025-04-20', '2025-05-20']
2025-05-20 23:48:38,951 - config - INFO - 备用查询返回 1 条统计数据
2025-05-20 23:48:38,951 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-20 23:48:38,951 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:48:38] "GET /api/execution/statistics?period=day&script_id=30&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:49:07,502 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:49:07] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:49:07,988 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:49:07] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 23:49:09,330 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:49:09] "GET /api/execution/history?script_id=31&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:49:13,039 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:49:13] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:52:25,812 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:52:25] "GET /api/scripts/31 HTTP/1.1" 200 -
2025-05-20 23:52:25,840 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=31, chain_id=None
2025-05-20 23:52:25,841 - config - INFO - 符合条件的执行历史记录总数: 0
2025-05-20 23:52:25,841 - config - WARNING - 没有符合条件的执行历史记录
2025-05-20 23:52:25,842 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:52:25] "GET /api/execution/statistics?period=day&script_id=31&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:52:27,623 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:52:27] "GET /api/scripts/31 HTTP/1.1" 200 -
2025-05-20 23:52:29,804 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:52:29] "GET /api/scripts/31 HTTP/1.1" 200 -
2025-05-20 23:52:30,126 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=31, chain_id=None
2025-05-20 23:52:30,128 - config - INFO - 符合条件的执行历史记录总数: 0
2025-05-20 23:52:30,129 - config - WARNING - 没有符合条件的执行历史记录
2025-05-20 23:52:30,129 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:52:30] "GET /api/execution/statistics?period=day&script_id=31&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:52:31,505 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:52:31] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:52:34,191 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:52:34] "GET /api/scripts/30 HTTP/1.1" 200 -
2025-05-20 23:52:34,503 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=30, chain_id=None
2025-05-20 23:52:34,505 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-20 23:52:34,505 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:52:34,505 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:52:34,505 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 30]
2025-05-20 23:52:34,505 - config - INFO - 查询返回 0 条统计数据
2025-05-20 23:52:34,506 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-20 23:52:34,506 - config - INFO - 备用查询参数: [30, '2025-04-20', '2025-05-20']
2025-05-20 23:52:34,506 - config - INFO - 备用查询返回 1 条统计数据
2025-05-20 23:52:34,506 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-20 23:52:34,507 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:52:34] "GET /api/execution/statistics?period=day&script_id=30&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:52:37,636 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:52:37] "GET /api/scripts/30/versions HTTP/1.1" 200 -
2025-05-20 23:56:26,764 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:56:26] "GET /api/scripts/30 HTTP/1.1" 200 -
2025-05-20 23:56:28,471 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:56:28] "GET /api/scripts/30 HTTP/1.1" 200 -
2025-05-20 23:56:28,481 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-20, end_date=2025-05-20, script_id=30, chain_id=None
2025-05-20 23:56:28,483 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-20 23:56:28,483 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-20 23:56:28,483 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-20 23:56:28,483 - config - INFO - 查询参数: ['2025-04-20', '2025-05-20', 30]
2025-05-20 23:56:28,484 - config - INFO - 查询返回 0 条统计数据
2025-05-20 23:56:28,484 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-20 23:56:28,484 - config - INFO - 备用查询参数: [30, '2025-04-20', '2025-05-20']
2025-05-20 23:56:28,484 - config - INFO - 备用查询返回 1 条统计数据
2025-05-20 23:56:28,485 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-20 23:56:28,486 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:56:28] "GET /api/execution/statistics?period=day&script_id=30&start_date=2025-04-20&end_date=2025-05-20 HTTP/1.1" 200 -
2025-05-20 23:56:29,727 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:56:29] "GET /api/scripts/30/versions HTTP/1.1" 200 -
2025-05-20 23:56:47,088 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:56:47] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:57:02,243 - config - INFO - 删除脚本成功: ID 41
2025-05-20 23:57:02,243 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:02] "DELETE /api/scripts/41 HTTP/1.1" 200 -
2025-05-20 23:57:02,577 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:02] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:57:03,744 - config - INFO - 删除脚本成功: ID 42
2025-05-20 23:57:03,744 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:03] "DELETE /api/scripts/42 HTTP/1.1" 200 -
2025-05-20 23:57:04,067 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:04] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:57:05,467 - config - INFO - 删除脚本成功: ID 43
2025-05-20 23:57:05,467 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:05] "DELETE /api/scripts/43 HTTP/1.1" 200 -
2025-05-20 23:57:05,790 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:05] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:57:07,012 - config - INFO - 删除脚本成功: ID 44
2025-05-20 23:57:07,012 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:07] "DELETE /api/scripts/44 HTTP/1.1" 200 -
2025-05-20 23:57:07,331 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:07] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:57:08,533 - config - INFO - 删除脚本成功: ID 45
2025-05-20 23:57:08,533 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:08] "DELETE /api/scripts/45 HTTP/1.1" 200 -
2025-05-20 23:57:08,860 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:08] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:57:10,526 - config - INFO - 删除脚本成功: ID 36
2025-05-20 23:57:10,527 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:10] "DELETE /api/scripts/36 HTTP/1.1" 200 -
2025-05-20 23:57:10,849 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:10] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:57:13,120 - config - INFO - 删除脚本成功: ID 37
2025-05-20 23:57:13,120 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:13] "DELETE /api/scripts/37 HTTP/1.1" 200 -
2025-05-20 23:57:13,434 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:13] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:57:15,000 - config - INFO - 删除脚本成功: ID 38
2025-05-20 23:57:15,001 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:15] "DELETE /api/scripts/38 HTTP/1.1" 200 -
2025-05-20 23:57:15,316 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:15] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:57:16,738 - config - INFO - 删除脚本成功: ID 39
2025-05-20 23:57:16,739 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:16] "DELETE /api/scripts/39 HTTP/1.1" 200 -
2025-05-20 23:57:17,065 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:17] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:57:18,551 - config - INFO - 删除脚本成功: ID 40
2025-05-20 23:57:18,552 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:18] "DELETE /api/scripts/40 HTTP/1.1" 200 -
2025-05-20 23:57:18,870 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:18] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:57:20,994 - config - INFO - 删除脚本成功: ID 31
2025-05-20 23:57:20,994 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:20] "DELETE /api/scripts/31 HTTP/1.1" 200 -
2025-05-20 23:57:21,320 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:21] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:57:22,756 - config - INFO - 删除脚本成功: ID 32
2025-05-20 23:57:22,757 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:22] "DELETE /api/scripts/32 HTTP/1.1" 200 -
2025-05-20 23:57:23,087 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:23] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:57:24,652 - config - INFO - 删除脚本成功: ID 33
2025-05-20 23:57:24,653 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:24] "DELETE /api/scripts/33 HTTP/1.1" 200 -
2025-05-20 23:57:24,982 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:24] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:57:26,405 - config - INFO - 删除脚本成功: ID 34
2025-05-20 23:57:26,406 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:26] "DELETE /api/scripts/34 HTTP/1.1" 200 -
2025-05-20 23:57:26,724 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:26] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:57:28,041 - config - INFO - 删除脚本成功: ID 35
2025-05-20 23:57:28,042 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:28] "DELETE /api/scripts/35 HTTP/1.1" 200 -
2025-05-20 23:57:28,368 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:28] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:57:36,315 - config - INFO - 删除脚本成功: ID 26
2025-05-20 23:57:36,316 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:36] "DELETE /api/scripts/26 HTTP/1.1" 200 -
2025-05-20 23:57:36,637 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:36] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:57:38,212 - config - INFO - 删除脚本成功: ID 27
2025-05-20 23:57:38,213 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:38] "DELETE /api/scripts/27 HTTP/1.1" 200 -
2025-05-20 23:57:38,531 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:38] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:57:40,902 - config - INFO - 删除脚本成功: ID 28
2025-05-20 23:57:40,903 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:40] "DELETE /api/scripts/28 HTTP/1.1" 200 -
2025-05-20 23:57:41,223 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:41] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:57:42,895 - config - INFO - 删除脚本成功: ID 29
2025-05-20 23:57:42,895 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:42] "DELETE /api/scripts/29 HTTP/1.1" 200 -
2025-05-20 23:57:43,218 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:43] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:57:44,957 - config - INFO - 删除脚本成功: ID 30
2025-05-20 23:57:44,958 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:44] "DELETE /api/scripts/30 HTTP/1.1" 200 -
2025-05-20 23:57:45,277 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:57:45] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:58:52,850 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:58:52] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:58:53,072 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:58:53] "GET /api/schedule HTTP/1.1" 200 -
2025-05-20 23:58:53,166 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:58:53] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 23:58:54,049 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:58:54] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 23:58:55,133 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:58:55] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-20 23:58:55,582 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:58:55] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-20 23:58:56,028 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:58:56] "GET /api/chains HTTP/1.1" 200 -
2025-05-20 23:58:56,030 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:58:56] "GET /api/scripts HTTP/1.1" 200 -
2025-05-20 23:58:56,733 - werkzeug - INFO - 127.0.0.1 - - [20/May/2025 23:58:56] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 00:39:16,821 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\script\\script_parameter.py', reloading
2025-05-21 00:39:16,920 - werkzeug - INFO -  * Restarting with stat
2025-05-21 00:39:17,754 - config - INFO - 数据库初始化成功
2025-05-21 00:39:17,764 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 00:39:17,789 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 00:39:17,792 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 00:40:23,702 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\script\\script_parameter.py', reloading
2025-05-21 00:40:23,804 - werkzeug - INFO -  * Restarting with stat
2025-05-21 00:40:24,613 - config - INFO - 数据库初始化成功
2025-05-21 00:40:24,624 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 00:40:24,651 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 00:40:24,653 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 00:42:36,008 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\utils\\script_runner.py', reloading
2025-05-21 00:42:36,109 - werkzeug - INFO -  * Restarting with stat
2025-05-21 01:18:16,420 - config - INFO - 数据库初始化成功
2025-05-21 01:18:16,434 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 01:18:17,786 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-21 01:18:17,786 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 01:18:17,787 - werkzeug - INFO -  * Restarting with stat
2025-05-21 01:18:18,621 - config - INFO - 数据库初始化成功
2025-05-21 01:18:18,633 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 01:18:18,660 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 01:18:18,663 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 01:18:21,145 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:18:21] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 01:18:21,145 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:18:21] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 01:18:21,733 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:18:21] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 01:18:24,978 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:18:24] "GET /api/scripts/template?language=python&has_params=true&output_mode=file HTTP/1.1" 200 -
2025-05-21 01:18:26,469 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:18:26] "GET /api/scripts/template?language=python&has_params=true&output_mode=json HTTP/1.1" 200 -
2025-05-21 01:18:28,097 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:18:28] "GET /api/scripts/template?language=python&has_params=true&output_mode=none HTTP/1.1" 200 -
2025-05-21 01:18:33,512 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:18:33] "GET /api/scripts/template?language=python&has_params=true&output_mode=json HTTP/1.1" 200 -
2025-05-21 01:18:37,235 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:18:37] "GET /api/scripts/template?language=python&has_params=false&output_mode=json HTTP/1.1" 200 -
2025-05-21 01:18:47,949 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:18:47] "GET /api/scripts/template?language=python&has_params=false&output_mode=none HTTP/1.1" 200 -
2025-05-21 01:19:52,451 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:19:52] "GET /api/scripts/template?language=python&has_params=true&output_mode=none HTTP/1.1" 200 -
2025-05-21 01:21:28,198 - config - ERROR - 添加脚本版本失败: database is locked
2025-05-21 01:21:28,202 - config - INFO - 添加脚本成功: 测试 有参数 json输出
2025-05-21 01:21:28,204 - config - ERROR - 添加脚本参数失败: table script_parameters has no column named validation_rules
2025-05-21 01:21:28,205 - config - ERROR - 添加脚本参数失败: table script_parameters has no column named validation_rules
2025-05-21 01:21:28,208 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:21:28] "POST /api/scripts/with-file HTTP/1.1" 200 -
2025-05-21 01:21:28,231 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:21:28] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 01:21:35,822 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:21:35] "GET /api/scripts/46 HTTP/1.1" 200 -
2025-05-21 01:21:36,140 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=46, chain_id=None
2025-05-21 01:21:36,142 - config - INFO - 符合条件的执行历史记录总数: 0
2025-05-21 01:21:36,142 - config - WARNING - 没有符合条件的执行历史记录
2025-05-21 01:21:36,143 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:21:36] "GET /api/execution/statistics?period=day&script_id=46&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:21:38,980 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:21:38] "GET /api/scripts/46/versions HTTP/1.1" 200 -
2025-05-21 01:21:41,010 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:21:41] "GET /api/scripts/46 HTTP/1.1" 200 -
2025-05-21 01:21:43,353 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:21:43] "GET /api/scripts/46 HTTP/1.1" 200 -
2025-05-21 01:21:43,366 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=46, chain_id=None
2025-05-21 01:21:43,368 - config - INFO - 符合条件的执行历史记录总数: 0
2025-05-21 01:21:43,368 - config - WARNING - 没有符合条件的执行历史记录
2025-05-21 01:21:43,369 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:21:43] "GET /api/execution/statistics?period=day&script_id=46&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:23:21,472 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\routes\\scripts\\upload.py', reloading
2025-05-21 01:23:21,604 - werkzeug - INFO -  * Restarting with stat
2025-05-21 01:23:22,405 - config - INFO - 数据库初始化成功
2025-05-21 01:23:22,414 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 01:23:22,437 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 01:23:22,439 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 01:23:51,988 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\routes\\scripts\\upload.py', reloading
2025-05-21 01:23:52,065 - werkzeug - INFO -  * Restarting with stat
2025-05-21 01:23:53,105 - config - INFO - 数据库初始化成功
2025-05-21 01:23:53,118 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 01:23:53,154 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 01:23:53,160 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 01:23:57,001 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:23:57] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 01:23:59,056 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:23:59] "GET /api/scripts/46 HTTP/1.1" 200 -
2025-05-21 01:23:59,067 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=46, chain_id=None
2025-05-21 01:23:59,069 - config - INFO - 符合条件的执行历史记录总数: 0
2025-05-21 01:23:59,069 - config - WARNING - 没有符合条件的执行历史记录
2025-05-21 01:23:59,069 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:23:59] "GET /api/execution/statistics?period=day&script_id=46&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:24:00,424 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:24:00] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 01:24:08,358 - config - INFO - 删除脚本成功: ID 46
2025-05-21 01:24:08,360 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:24:08] "DELETE /api/scripts/46 HTTP/1.1" 200 -
2025-05-21 01:24:08,615 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:24:08] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 01:24:16,765 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:24:16] "GET /api/scripts/template?language=python&has_params=true&output_mode=file HTTP/1.1" 200 -
2025-05-21 01:24:17,998 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:24:17] "GET /api/scripts/template?language=python&has_params=true&output_mode=json HTTP/1.1" 200 -
2025-05-21 01:24:20,263 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:24:20] "GET /api/scripts/template?language=python&has_params=true&output_mode=json HTTP/1.1" 200 -
2025-05-21 01:25:14,782 - config - ERROR - 添加脚本版本失败: database is locked
2025-05-21 01:25:14,788 - config - INFO - 添加脚本成功: 测试 有参数 json输出
2025-05-21 01:25:14,789 - config - ERROR - 添加脚本参数失败: table script_parameters has no column named validation_rules
2025-05-21 01:25:14,790 - config - ERROR - 添加脚本参数失败: table script_parameters has no column named validation_rules
2025-05-21 01:25:14,793 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:25:14] "POST /api/scripts/with-file HTTP/1.1" 200 -
2025-05-21 01:25:14,823 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:25:14] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 01:25:17,360 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:25:17] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 01:25:17,370 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 01:25:17,372 - config - INFO - 符合条件的执行历史记录总数: 0
2025-05-21 01:25:17,372 - config - WARNING - 没有符合条件的执行历史记录
2025-05-21 01:25:17,373 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:25:17] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:25:20,013 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:25:20] "GET /api/scripts/47/versions HTTP/1.1" 200 -
2025-05-21 01:25:21,839 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:25:21] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 01:25:24,109 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:25:24] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 01:25:24,432 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 01:25:24,433 - config - INFO - 符合条件的执行历史记录总数: 0
2025-05-21 01:25:24,433 - config - WARNING - 没有符合条件的执行历史记录
2025-05-21 01:25:24,434 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:25:24] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:25:38,925 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:25:38] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 01:25:40,984 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:25:40] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 01:25:40,999 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 01:25:41,001 - config - INFO - 符合条件的执行历史记录总数: 0
2025-05-21 01:25:41,001 - config - WARNING - 没有符合条件的执行历史记录
2025-05-21 01:25:41,001 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:25:41] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:25:42,265 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:25:42] "GET /api/scripts/47/versions HTTP/1.1" 200 -
2025-05-21 01:26:04,887 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 01:26:04,888 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:04] "POST /api/execution/script/47 HTTP/1.1" 200 -
2025-05-21 01:26:04,895 - config - INFO - 更新执行进度成功: ID 683
2025-05-21 01:26:05,129 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 01:26:05,130 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 01:26:05,130 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmp3iv7dgl6.json
2025-05-21 01:26:05,135 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:05] "GET /api/execution/history/683 HTTP/1.1" 200 -
2025-05-21 01:26:05,244 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:05] "GET /api/execution/history?script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:26:05,937 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:05] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 01:26:08,094 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:08] "GET /api/execution/history?script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:26:12,968 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:12] "GET /api/execution/history/683 HTTP/1.1" 200 -
2025-05-21 01:26:12,995 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:12] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 01:26:13,122 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:13] "GET /api/execution/history?script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:26:13,851 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:13] "GET /api/execution/history/683 HTTP/1.1" 200 -
2025-05-21 01:26:13,893 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:13] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 01:26:13,919 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:13] "GET /api/execution/history?script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:26:16,311 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:16] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 01:26:16,681 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 01:26:16,681 - config - INFO - Docker执行成功，输出长度: 4733
2025-05-21 01:26:16,701 - config - INFO - 更新执行历史记录成功: ID 683
2025-05-21 01:26:16,744 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:16] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 01:26:16,753 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:16] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 01:26:17,886 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:17] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 01:26:18,189 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:18] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 01:26:18,189 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:18] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 01:26:18,222 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:18] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 01:26:20,499 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:20] "GET /api/execution/history?script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:26:33,348 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:33] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 01:26:46,969 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:46] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 01:26:47,293 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 01:26:47,294 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 01:26:47,294 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 01:26:47,294 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 01:26:47,294 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 47]
2025-05-21 01:26:47,294 - config - INFO - 查询返回 0 条统计数据
2025-05-21 01:26:47,294 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 01:26:47,294 - config - INFO - 备用查询参数: [47, '2025-04-21', '2025-05-21']
2025-05-21 01:26:47,295 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 01:26:47,295 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 01:26:47,295 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:47] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:26:48,232 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:48] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 01:26:51,196 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:51] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 01:26:51,512 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 01:26:51,514 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 01:26:51,514 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 01:26:51,514 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 01:26:51,514 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 47]
2025-05-21 01:26:51,515 - config - INFO - 查询返回 0 条统计数据
2025-05-21 01:26:51,515 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 01:26:51,515 - config - INFO - 备用查询参数: [47, '2025-04-21', '2025-05-21']
2025-05-21 01:26:51,515 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 01:26:51,515 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 01:26:51,516 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:51] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:26:52,706 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:26:52] "GET /api/scripts/47/versions HTTP/1.1" 200 -
2025-05-21 01:27:00,575 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:27:00] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 01:27:03,730 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:27:03] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 01:27:03,737 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 01:27:03,740 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 01:27:03,740 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 01:27:03,740 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 01:27:03,740 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 47]
2025-05-21 01:27:03,740 - config - INFO - 查询返回 0 条统计数据
2025-05-21 01:27:03,740 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 01:27:03,740 - config - INFO - 备用查询参数: [47, '2025-04-21', '2025-05-21']
2025-05-21 01:27:03,741 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 01:27:03,741 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 01:27:03,742 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:27:03] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:27:07,462 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:27:07] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 01:28:21,007 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:28:21] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 01:28:21,013 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 01:28:21,014 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 01:28:21,014 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 01:28:21,014 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 01:28:21,014 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 47]
2025-05-21 01:28:21,015 - config - INFO - 查询返回 0 条统计数据
2025-05-21 01:28:21,015 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 01:28:21,015 - config - INFO - 备用查询参数: [47, '2025-04-21', '2025-05-21']
2025-05-21 01:28:21,015 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 01:28:21,015 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 01:28:21,015 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:28:21] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:28:23,409 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:28:23] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 01:28:25,095 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:28:25] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 01:28:25,403 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 01:28:25,405 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 01:28:25,405 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 01:28:25,406 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 01:28:25,406 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 47]
2025-05-21 01:28:25,406 - config - INFO - 查询返回 0 条统计数据
2025-05-21 01:28:25,406 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 01:28:25,406 - config - INFO - 备用查询参数: [47, '2025-04-21', '2025-05-21']
2025-05-21 01:28:25,407 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 01:28:25,407 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 01:28:25,408 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:28:25] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:28:27,355 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:28:27] "GET /api/scripts/47/versions HTTP/1.1" 200 -
2025-05-21 01:29:34,803 - config - INFO - 添加脚本版本成功: 脚本ID 47, 版本 1.0.0
2025-05-21 01:36:52,974 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:36:52] "GET /api/scripts/47/versions HTTP/1.1" 200 -
2025-05-21 01:36:54,034 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 01:36:54,034 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:36:54] "GET /api/scripts/47/versions/39/content HTTP/1.1" 200 -
2025-05-21 01:36:58,278 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:36:58] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 01:36:58,298 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 01:36:58,299 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:36:58] "GET /api/scripts/47/versions/39/content HTTP/1.1" 200 -
2025-05-21 01:37:00,088 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:37:00] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 01:37:00,404 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 01:37:00,406 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 01:37:00,407 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 01:37:00,407 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 01:37:00,407 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 47]
2025-05-21 01:37:00,408 - config - INFO - 查询返回 0 条统计数据
2025-05-21 01:37:00,408 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 01:37:00,408 - config - INFO - 备用查询参数: [47, '2025-04-21', '2025-05-21']
2025-05-21 01:37:00,408 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 01:37:00,408 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 01:37:00,409 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:37:00] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:37:01,399 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:37:01] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 01:37:01,716 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 01:37:01,717 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:37:01] "GET /api/scripts/47/versions/39/content HTTP/1.1" 200 -
2025-05-21 01:37:12,466 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:37:12] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 01:37:12,794 - config - INFO - 脚本内容未变化，不创建新版本: 脚本ID 47
2025-05-21 01:37:12,803 - config - INFO - 更新脚本参数成功: 脚本ID 47
2025-05-21 01:37:12,808 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:37:12] "POST /api/scripts/47/content HTTP/1.1" 200 -
2025-05-21 01:37:13,055 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:37:13] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 01:37:14,639 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:37:14] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 01:37:14,646 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 01:37:14,648 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 01:37:14,648 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 01:37:14,648 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 01:37:14,648 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 47]
2025-05-21 01:37:14,649 - config - INFO - 查询返回 0 条统计数据
2025-05-21 01:37:14,649 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 01:37:14,649 - config - INFO - 备用查询参数: [47, '2025-04-21', '2025-05-21']
2025-05-21 01:37:14,650 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 01:37:14,650 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 01:37:14,650 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:37:14] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:37:21,534 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:37:21] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 01:37:21,553 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 01:37:21,554 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:37:21] "GET /api/scripts/47/versions/39/content HTTP/1.1" 200 -
2025-05-21 01:37:44,496 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:37:44] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 01:37:44,822 - config - INFO - 脚本内容未变化，不创建新版本: 脚本ID 47
2025-05-21 01:37:44,831 - config - INFO - 更新脚本参数成功: 脚本ID 47
2025-05-21 01:37:44,835 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:37:44] "POST /api/scripts/47/content HTTP/1.1" 200 -
2025-05-21 01:37:45,081 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:37:45] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 01:37:46,599 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:37:46] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 01:37:46,610 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 01:37:46,612 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 01:37:46,613 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 01:37:46,613 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 01:37:46,613 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 47]
2025-05-21 01:37:46,614 - config - INFO - 查询返回 0 条统计数据
2025-05-21 01:37:46,614 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 01:37:46,614 - config - INFO - 备用查询参数: [47, '2025-04-21', '2025-05-21']
2025-05-21 01:37:46,615 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 01:37:46,616 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 01:37:46,617 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:37:46] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:37:49,544 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 01:37:49,545 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:37:49] "POST /api/execution/script/47 HTTP/1.1" 200 -
2025-05-21 01:37:49,554 - config - INFO - 更新执行进度成功: ID 684
2025-05-21 01:37:49,584 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:37:49] "GET /api/execution/history/684 HTTP/1.1" 200 -
2025-05-21 01:37:49,822 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 01:37:49,822 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 01:37:49,822 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmp_ehrvqkx.json
2025-05-21 01:37:49,898 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:37:49] "GET /api/execution/history?script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:37:56,973 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 01:37:56,973 - config - INFO - Docker执行成功，输出长度: 4733
2025-05-21 01:37:56,984 - config - INFO - 更新执行历史记录成功: ID 684
2025-05-21 01:38:02,380 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:38:02] "GET /api/execution/history/684 HTTP/1.1" 200 -
2025-05-21 01:38:02,523 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:38:02] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 01:38:02,555 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:38:02] "GET /api/execution/history?script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:38:04,696 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:38:04] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 01:38:07,151 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:38:07] "GET /api/execution/history?script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:38:41,790 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:38:41] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 01:58:47,536 - config - INFO - 数据库初始化成功
2025-05-21 01:58:47,546 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 01:58:48,862 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-21 01:58:48,863 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 01:58:48,863 - werkzeug - INFO -  * Restarting with stat
2025-05-21 01:58:49,631 - config - INFO - 数据库初始化成功
2025-05-21 01:58:49,642 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 01:58:49,667 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 01:58:49,670 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 01:59:05,796 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:59:05] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 01:59:06,025 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 01:59:06,027 - config - INFO - 符合条件的执行历史记录总数: 2
2025-05-21 01:59:06,027 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 01:59:06,027 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 01:59:06,028 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 47]
2025-05-21 01:59:06,028 - config - INFO - 查询返回 0 条统计数据
2025-05-21 01:59:06,028 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 01:59:06,028 - config - INFO - 备用查询参数: [47, '2025-04-21', '2025-05-21']
2025-05-21 01:59:06,028 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 01:59:06,029 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 01:59:06,029 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:59:06] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:59:07,245 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:59:07] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 01:59:07,264 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 01:59:07,265 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:59:07] "GET /api/scripts/47/versions/39/content HTTP/1.1" 200 -
2025-05-21 01:59:29,053 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:59:29] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 01:59:29,083 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 01:59:29,084 - config - INFO - 符合条件的执行历史记录总数: 2
2025-05-21 01:59:29,084 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 01:59:29,084 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 01:59:29,084 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 47]
2025-05-21 01:59:29,084 - config - INFO - 查询返回 0 条统计数据
2025-05-21 01:59:29,084 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 01:59:29,084 - config - INFO - 备用查询参数: [47, '2025-04-21', '2025-05-21']
2025-05-21 01:59:29,085 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 01:59:29,085 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 01:59:29,085 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:59:29] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:59:32,244 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 01:59:32,245 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:59:32] "POST /api/execution/script/47 HTTP/1.1" 200 -
2025-05-21 01:59:32,255 - config - INFO - 更新执行进度成功: ID 685
2025-05-21 01:59:32,281 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:59:32] "GET /api/execution/history/685 HTTP/1.1" 200 -
2025-05-21 01:59:32,497 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 01:59:32,498 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 01:59:32,498 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmp3_3v2z8l.json
2025-05-21 01:59:32,602 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:59:32] "GET /api/execution/history?script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:59:37,536 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:59:37] "GET /api/execution/history/685 HTTP/1.1" 200 -
2025-05-21 01:59:37,674 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:59:37] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 01:59:37,709 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:59:37] "GET /api/execution/history?script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 01:59:39,559 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 01:59:39,559 - config - INFO - Docker执行成功，输出长度: 4735
2025-05-21 01:59:39,585 - config - INFO - 更新执行历史记录成功: ID 685
2025-05-21 01:59:49,886 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:59:49] "GET /api/execution/history/685 HTTP/1.1" 200 -
2025-05-21 01:59:49,912 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:59:49] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 01:59:49,935 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 01:59:49] "GET /api/execution/history?script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:00:09,910 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:00:09] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:00:11,441 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:00:11] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 02:00:11,444 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 02:00:11,446 - config - INFO - 符合条件的执行历史记录总数: 3
2025-05-21 02:00:11,446 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 02:00:11,447 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 02:00:11,447 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 47]
2025-05-21 02:00:11,447 - config - INFO - 查询返回 0 条统计数据
2025-05-21 02:00:11,447 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 02:00:11,447 - config - INFO - 备用查询参数: [47, '2025-04-21', '2025-05-21']
2025-05-21 02:00:11,448 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 02:00:11,448 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 02:00:11,448 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:00:11] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:00:12,681 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:00:12] "GET /api/scripts/47/versions HTTP/1.1" 200 -
2025-05-21 02:00:13,881 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 02:00:13,881 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:00:13] "GET /api/scripts/47/versions/39/content HTTP/1.1" 200 -
2025-05-21 02:04:55,461 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 02:04:55,462 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:04:55] "POST /api/execution/script/47 HTTP/1.1" 200 -
2025-05-21 02:04:55,468 - config - INFO - 更新执行进度成功: ID 686
2025-05-21 02:04:55,706 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 02:04:55,706 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 02:04:55,706 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmp61ltb9ra.json
2025-05-21 02:04:55,718 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:04:55] "GET /api/execution/history/686 HTTP/1.1" 200 -
2025-05-21 02:04:55,816 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:04:55] "GET /api/execution/history?script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:05:02,488 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 02:05:02,488 - config - INFO - Docker执行成功，输出长度: 4735
2025-05-21 02:05:02,494 - config - INFO - 更新执行历史记录成功: ID 686
2025-05-21 02:08:16,110 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:08:16] "GET /api/execution/history/686 HTTP/1.1" 200 -
2025-05-21 02:08:16,136 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:08:16] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:08:16,187 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:08:16] "GET /api/execution/history?script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:10:53,207 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:10:53] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:10:55,416 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:10:55] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 02:10:55,430 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 02:10:55,432 - config - INFO - 符合条件的执行历史记录总数: 4
2025-05-21 02:10:55,432 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 02:10:55,433 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 02:10:55,433 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 47]
2025-05-21 02:10:55,433 - config - INFO - 查询返回 0 条统计数据
2025-05-21 02:10:55,433 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 02:10:55,434 - config - INFO - 备用查询参数: [47, '2025-04-21', '2025-05-21']
2025-05-21 02:10:55,434 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 02:10:55,434 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 02:10:55,435 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:10:55] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:10:57,771 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 02:10:57,772 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:10:57] "POST /api/execution/script/47 HTTP/1.1" 200 -
2025-05-21 02:10:57,781 - config - INFO - 更新执行进度成功: ID 687
2025-05-21 02:10:57,800 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:10:57] "GET /api/execution/history/687 HTTP/1.1" 200 -
2025-05-21 02:10:58,025 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 02:10:58,025 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 02:10:58,025 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmpos8wyb69.json
2025-05-21 02:10:58,124 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:10:58] "GET /api/execution/history?script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:11:04,989 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 02:11:04,989 - config - INFO - Docker执行成功，输出长度: 4735
2025-05-21 02:11:04,999 - config - INFO - 更新执行历史记录成功: ID 687
2025-05-21 02:12:10,961 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:12:10] "GET /api/execution/history/687 HTTP/1.1" 200 -
2025-05-21 02:12:10,996 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:12:10] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:12:11,042 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:12:11] "GET /api/execution/history?script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:19:43,176 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\utils\\docker_executor.py', reloading
2025-05-21 02:19:43,280 - werkzeug - INFO -  * Restarting with stat
2025-05-21 02:19:44,286 - config - INFO - 数据库初始化成功
2025-05-21 02:19:44,297 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 02:19:44,329 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 02:19:44,333 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 02:20:19,716 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\utils\\docker_executor.py', reloading
2025-05-21 02:20:19,788 - werkzeug - INFO -  * Restarting with stat
2025-05-21 02:20:20,596 - config - INFO - 数据库初始化成功
2025-05-21 02:20:20,607 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 02:20:20,638 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 02:20:20,641 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 02:20:34,897 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:20:34] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:20:36,553 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:20:36] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 02:20:36,568 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 02:20:36,569 - config - INFO - 符合条件的执行历史记录总数: 5
2025-05-21 02:20:36,569 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 02:20:36,570 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 02:20:36,570 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 47]
2025-05-21 02:20:36,570 - config - INFO - 查询返回 0 条统计数据
2025-05-21 02:20:36,570 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 02:20:36,570 - config - INFO - 备用查询参数: [47, '2025-04-21', '2025-05-21']
2025-05-21 02:20:36,571 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 02:20:36,571 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 02:20:36,571 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:20:36] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:20:39,647 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 02:20:39,648 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:20:39] "POST /api/execution/script/47 HTTP/1.1" 200 -
2025-05-21 02:20:39,658 - config - INFO - 更新执行进度成功: ID 688
2025-05-21 02:20:39,673 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:20:39] "GET /api/execution/history/688 HTTP/1.1" 200 -
2025-05-21 02:20:39,896 - config - INFO - 传递给Docker容器的参数: {"user_params": {"resource_type": "cpu", "sample_count": "2"}, "system_params": {"__execution_time": "2025-05-21 02:20:39"}, "file_params": {}}...
2025-05-21 02:20:39,899 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 02:20:39,899 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 02:20:39,899 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmpkx928cfk.json
2025-05-21 02:20:39,994 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:20:39] "GET /api/execution/history?script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:20:49,542 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 02:20:49,543 - config - INFO - Docker执行成功，输出长度: 5166
2025-05-21 02:20:49,563 - config - INFO - 更新执行历史记录成功: ID 688
2025-05-21 02:24:17,490 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:24:17] "GET /api/execution/history/688 HTTP/1.1" 200 -
2025-05-21 02:24:17,523 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:24:17] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:24:17,580 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:24:17] "GET /api/execution/history?script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:24:34,728 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:24:34] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:24:35,978 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:24:35] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 02:24:35,986 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 02:24:35,987 - config - INFO - 符合条件的执行历史记录总数: 6
2025-05-21 02:24:35,987 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 02:24:35,987 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 02:24:35,987 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 47]
2025-05-21 02:24:35,988 - config - INFO - 查询返回 0 条统计数据
2025-05-21 02:24:35,988 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 02:24:35,988 - config - INFO - 备用查询参数: [47, '2025-04-21', '2025-05-21']
2025-05-21 02:24:35,988 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 02:24:35,988 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 02:24:35,988 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:24:35] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:24:43,164 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 02:24:43,165 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:24:43] "POST /api/execution/script/47 HTTP/1.1" 200 -
2025-05-21 02:24:43,171 - config - INFO - 更新执行进度成功: ID 689
2025-05-21 02:24:43,390 - config - INFO - 传递给Docker容器的参数: {"user_params": {"resource_type": "cpu", "sample_count": "3"}, "system_params": {"__execution_time": "2025-05-21 02:24:43"}, "file_params": {}}...
2025-05-21 02:24:43,392 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 02:24:43,392 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 02:24:43,392 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmpu1uk7zwg.json
2025-05-21 02:24:43,505 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:24:43] "GET /api/execution/history/689 HTTP/1.1" 200 -
2025-05-21 02:24:43,531 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:24:43] "GET /api/execution/history?script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:24:52,773 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 02:24:52,774 - config - INFO - Docker执行成功，输出长度: 5596
2025-05-21 02:24:52,781 - config - INFO - 更新执行历史记录成功: ID 689
2025-05-21 02:25:09,837 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:25:09] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:25:11,023 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:25:11] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 02:25:11,025 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 02:25:11,027 - config - INFO - 符合条件的执行历史记录总数: 7
2025-05-21 02:25:11,027 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 02:25:11,027 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 02:25:11,027 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 47]
2025-05-21 02:25:11,028 - config - INFO - 查询返回 0 条统计数据
2025-05-21 02:25:11,028 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 02:25:11,028 - config - INFO - 备用查询参数: [47, '2025-04-21', '2025-05-21']
2025-05-21 02:25:11,028 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 02:25:11,029 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 02:25:11,029 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:25:11] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:25:54,819 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:25:54] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:25:55,498 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:25:55] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 02:25:55,500 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:25:55] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:25:55,817 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:25:55] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 02:25:57,242 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:25:57] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 02:25:59,037 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:25:59] "GET /api/execution/history?script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:26:09,093 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:26:09] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:26:09,206 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:26:09] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 02:26:09,360 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:26:09] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:26:09,881 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:26:09] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:26:10,231 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:26:10] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 02:26:10,541 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:26:10] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:28:56,472 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:28:56] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:28:57,498 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:28:57] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:28:57,502 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:28:57] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 02:28:57,811 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:28:57] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 02:28:57,816 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=None, chain_id=None
2025-05-21 02:28:57,818 - config - INFO - 符合条件的执行历史记录总数: 689
2025-05-21 02:28:57,819 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 02:28:57,819 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 02:28:57,819 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21']
2025-05-21 02:28:57,820 - config - INFO - 查询返回 30 条统计数据
2025-05-21 02:28:57,821 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 17, 'success_count': 12, 'failed_count': 2, 'avg_execution_time': 142.64786081685196}
2025-05-21 02:28:57,821 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:28:57] "GET /api/execution/statistics?period=day&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:28:58,114 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:28:58] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:29:20,386 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:29:20] "GET /api/scripts/template?language=shell&has_params=true&output_mode=json HTTP/1.1" 200 -
2025-05-21 02:30:05,528 - config - ERROR - 添加脚本版本失败: database is locked
2025-05-21 02:30:05,534 - config - INFO - 添加脚本成功: 测试用shell脚本
2025-05-21 02:30:05,537 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:30:05] "POST /api/scripts/with-file HTTP/1.1" 200 -
2025-05-21 02:30:05,562 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:30:05] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:30:07,031 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:30:07] "GET /api/scripts/48 HTTP/1.1" 200 -
2025-05-21 02:30:07,043 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=48, chain_id=None
2025-05-21 02:30:07,045 - config - INFO - 符合条件的执行历史记录总数: 0
2025-05-21 02:30:07,045 - config - WARNING - 没有符合条件的执行历史记录
2025-05-21 02:30:07,046 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:30:07] "GET /api/execution/statistics?period=day&script_id=48&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:30:10,751 - config - INFO - 添加执行历史记录成功: 脚本ID 48, 链ID None
2025-05-21 02:30:10,752 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:30:10] "POST /api/execution/script/48 HTTP/1.1" 200 -
2025-05-21 02:30:10,761 - config - INFO - 更新执行进度成功: ID 690
2025-05-21 02:30:10,780 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:30:10] "GET /api/execution/history/690 HTTP/1.1" 200 -
2025-05-21 02:30:10,998 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 02:30:10"}, "file_params": {}}...
2025-05-21 02:30:11,000 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521023000_script_template.sh
2025-05-21 02:30:11,000 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 02:30:11,000 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim bash /app/20250521023000_script_template.sh /params/tmpwi_fe1u8.json
2025-05-21 02:30:11,086 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:30:11] "GET /api/execution/history?script_id=48&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:30:12,284 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 02:30:12,285 - config - INFO - Docker执行成功，输出长度: 369
2025-05-21 02:30:12,295 - config - INFO - 更新执行历史记录成功: ID 690
2025-05-21 02:30:12,452 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:30:12] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 02:30:12,761 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:30:12] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:30:12,762 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:30:12] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 02:30:13,026 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:30:13] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 02:30:13,343 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:30:13] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:30:15,588 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:30:15] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 02:30:18,383 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:30:18] "GET /api/execution/history?script_id=48&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:30:21,517 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:30:21] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 02:30:23,038 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:30:23] "GET /api/execution/history?script_id=48&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:33:11,706 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:33:11] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:33:13,637 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:33:13] "GET /api/scripts/48 HTTP/1.1" 200 -
2025-05-21 02:33:13,651 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=48, chain_id=None
2025-05-21 02:33:13,653 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 02:33:13,653 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 02:33:13,654 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 02:33:13,654 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 48]
2025-05-21 02:33:13,654 - config - INFO - 查询返回 0 条统计数据
2025-05-21 02:33:13,655 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 02:33:13,655 - config - INFO - 备用查询参数: [48, '2025-04-21', '2025-05-21']
2025-05-21 02:33:13,655 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 02:33:13,655 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 02:33:13,656 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:33:13] "GET /api/execution/statistics?period=day&script_id=48&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:33:14,523 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:33:14] "GET /api/scripts/48 HTTP/1.1" 200 -
2025-05-21 02:33:17,713 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:33:17] "GET /api/scripts/48 HTTP/1.1" 200 -
2025-05-21 02:33:18,019 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=48, chain_id=None
2025-05-21 02:33:18,021 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 02:33:18,021 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 02:33:18,021 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 02:33:18,021 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 48]
2025-05-21 02:33:18,021 - config - INFO - 查询返回 0 条统计数据
2025-05-21 02:33:18,021 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 02:33:18,021 - config - INFO - 备用查询参数: [48, '2025-04-21', '2025-05-21']
2025-05-21 02:33:18,022 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 02:33:18,022 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 02:33:18,022 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:33:18] "GET /api/execution/statistics?period=day&script_id=48&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:33:19,090 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:33:19] "GET /api/scripts/48/versions HTTP/1.1" 200 -
2025-05-21 02:33:29,198 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:33:29] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:33:56,409 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:33:56] "GET /api/scripts/48 HTTP/1.1" 200 -
2025-05-21 02:33:56,730 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=48, chain_id=None
2025-05-21 02:33:56,731 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 02:33:56,731 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 02:33:56,731 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 02:33:56,731 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 48]
2025-05-21 02:33:56,732 - config - INFO - 查询返回 0 条统计数据
2025-05-21 02:33:56,732 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 02:33:56,732 - config - INFO - 备用查询参数: [48, '2025-04-21', '2025-05-21']
2025-05-21 02:33:56,732 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 02:33:56,732 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 02:33:56,733 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:33:56] "GET /api/execution/statistics?period=day&script_id=48&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:33:58,409 - config - INFO - 添加执行历史记录成功: 脚本ID 48, 链ID None
2025-05-21 02:33:58,411 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:33:58] "POST /api/execution/script/48 HTTP/1.1" 200 -
2025-05-21 02:33:58,417 - config - INFO - 更新执行进度成功: ID 691
2025-05-21 02:33:58,440 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:33:58] "GET /api/execution/history/691 HTTP/1.1" 200 -
2025-05-21 02:33:58,672 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 02:33:58"}, "file_params": {}}...
2025-05-21 02:33:58,674 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521023000_script_template.sh
2025-05-21 02:33:58,674 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 02:33:58,674 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim bash /app/20250521023000_script_template.sh /params/tmpjkn2mpta.json
2025-05-21 02:33:58,751 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:33:58] "GET /api/execution/history?script_id=48&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:33:59,940 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 02:33:59,940 - config - INFO - Docker执行成功，输出长度: 369
2025-05-21 02:33:59,946 - config - INFO - 更新执行历史记录成功: ID 691
2025-05-21 02:34:03,455 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:34:03] "GET /api/execution/history/691 HTTP/1.1" 200 -
2025-05-21 02:34:08,797 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:34:08] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 02:44:09,220 - config - INFO - 数据库初始化成功
2025-05-21 02:44:09,231 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 02:44:10,532 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-21 02:44:10,532 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 02:44:10,533 - werkzeug - INFO -  * Restarting with stat
2025-05-21 02:44:11,308 - config - INFO - 数据库初始化成功
2025-05-21 02:44:11,317 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 02:44:11,341 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 02:44:11,343 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 02:44:22,811 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:44:22] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 02:44:24,642 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:44:24] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:44:24,670 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:44:24] "GET /api/execution/history?script_id=48&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:44:28,435 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:44:28] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:44:29,690 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:44:29] "GET /api/scripts/48 HTTP/1.1" 200 -
2025-05-21 02:44:29,703 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=48, chain_id=None
2025-05-21 02:44:29,705 - config - INFO - 符合条件的执行历史记录总数: 2
2025-05-21 02:44:29,705 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 02:44:29,705 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 02:44:29,705 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 48]
2025-05-21 02:44:29,706 - config - INFO - 查询返回 0 条统计数据
2025-05-21 02:44:29,706 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 02:44:29,706 - config - INFO - 备用查询参数: [48, '2025-04-21', '2025-05-21']
2025-05-21 02:44:29,707 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 02:44:29,707 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 02:44:29,708 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:44:29] "GET /api/execution/statistics?period=day&script_id=48&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:44:30,787 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:44:30] "GET /api/scripts/48 HTTP/1.1" 200 -
2025-05-21 02:44:32,489 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:44:32] "GET /api/scripts/48 HTTP/1.1" 200 -
2025-05-21 02:44:32,812 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=48, chain_id=None
2025-05-21 02:44:32,814 - config - INFO - 符合条件的执行历史记录总数: 2
2025-05-21 02:44:32,814 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 02:44:32,814 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 02:44:32,814 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 48]
2025-05-21 02:44:32,814 - config - INFO - 查询返回 0 条统计数据
2025-05-21 02:44:32,814 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 02:44:32,814 - config - INFO - 备用查询参数: [48, '2025-04-21', '2025-05-21']
2025-05-21 02:44:32,815 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 02:44:32,815 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 02:44:32,815 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:44:32] "GET /api/execution/statistics?period=day&script_id=48&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:44:34,508 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:44:34] "GET /api/scripts/48/versions HTTP/1.1" 200 -
2025-05-21 02:44:36,827 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:44:36] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:44:52,926 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:44:52] "GET /api/scripts/template?language=shell&has_params=true&output_mode=json HTTP/1.1" 200 -
2025-05-21 02:45:11,718 - config - ERROR - 添加脚本版本失败: database is locked
2025-05-21 02:45:11,723 - config - INFO - 添加脚本成功: 无参数shell脚本-test
2025-05-21 02:45:11,728 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:45:11] "POST /api/scripts/with-file HTTP/1.1" 200 -
2025-05-21 02:45:11,752 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:45:11] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:45:26,084 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:45:26] "GET /api/scripts/49 HTTP/1.1" 200 -
2025-05-21 02:45:26,408 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=49, chain_id=None
2025-05-21 02:45:26,409 - config - INFO - 符合条件的执行历史记录总数: 0
2025-05-21 02:45:26,409 - config - WARNING - 没有符合条件的执行历史记录
2025-05-21 02:45:26,410 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:45:26] "GET /api/execution/statistics?period=day&script_id=49&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:45:28,135 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:45:28] "GET /api/scripts/49 HTTP/1.1" 200 -
2025-05-21 02:45:30,212 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:45:30] "GET /api/scripts/49 HTTP/1.1" 200 -
2025-05-21 02:45:30,540 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=49, chain_id=None
2025-05-21 02:45:30,542 - config - INFO - 符合条件的执行历史记录总数: 0
2025-05-21 02:45:30,542 - config - WARNING - 没有符合条件的执行历史记录
2025-05-21 02:45:30,542 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:45:30] "GET /api/execution/statistics?period=day&script_id=49&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:45:31,249 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:45:31] "GET /api/scripts/49/versions HTTP/1.1" 200 -
2025-05-21 02:52:10,043 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\routes\\scripts\\upload.py', reloading
2025-05-21 02:52:10,096 - werkzeug - INFO -  * Restarting with stat
2025-05-21 02:52:10,255 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\routes\\scripts\\upload.py', reloading
2025-05-21 02:52:10,312 - werkzeug - INFO -  * Restarting with stat
2025-05-21 02:52:10,990 - config - INFO - 数据库初始化成功
2025-05-21 02:52:11,003 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 02:52:11,030 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 02:52:11,032 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 02:52:11,173 - config - INFO - 数据库初始化成功
2025-05-21 02:52:11,185 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 02:52:11,213 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 02:52:11,215 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 02:52:39,866 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\routes\\scripts\\upload.py', reloading
2025-05-21 02:52:39,925 - werkzeug - INFO -  * Restarting with stat
2025-05-21 02:52:40,134 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\routes\\scripts\\upload.py', reloading
2025-05-21 02:52:40,194 - werkzeug - INFO -  * Restarting with stat
2025-05-21 02:52:40,836 - config - INFO - 数据库初始化成功
2025-05-21 02:52:40,846 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 02:52:40,873 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 02:52:40,876 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 02:52:41,046 - config - INFO - 数据库初始化成功
2025-05-21 02:52:41,057 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 02:52:41,083 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 02:52:41,086 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 02:53:04,390 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\routes\\scripts\\upload.py', reloading
2025-05-21 02:53:04,441 - werkzeug - INFO -  * Restarting with stat
2025-05-21 02:53:04,614 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\routes\\scripts\\upload.py', reloading
2025-05-21 02:53:04,667 - werkzeug - INFO -  * Restarting with stat
2025-05-21 02:53:05,372 - config - INFO - 数据库初始化成功
2025-05-21 02:53:05,384 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 02:53:05,413 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 02:53:05,416 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 02:53:05,551 - config - INFO - 数据库初始化成功
2025-05-21 02:53:05,563 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 02:53:05,588 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 02:53:05,591 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 02:53:26,978 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:53:26] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:53:38,235 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:53:38] "GET /api/scripts/template?language=shell&has_params=true&output_mode=json HTTP/1.1" 200 -
2025-05-21 02:53:40,622 - config - WARNING - 模板 shell_without_params_json.sh 不存在，使用备选模板 python_without_params_json.py
2025-05-21 02:53:40,623 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:53:40] "GET /api/scripts/template?language=shell&has_params=false&output_mode=json HTTP/1.1" 200 -
2025-05-21 02:53:57,406 - config - ERROR - 添加脚本版本失败: database is locked
2025-05-21 02:53:57,411 - config - INFO - 添加脚本成功: shell测试
2025-05-21 02:53:57,414 - config - ERROR - 保存脚本参数模式失败: no such table: script_parameters_schema
2025-05-21 02:53:57,417 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:53:57] "POST /api/scripts/with-file HTTP/1.1" 200 -
2025-05-21 02:53:57,758 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:53:57] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:53:59,822 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:53:59] "GET /api/scripts/50 HTTP/1.1" 200 -
2025-05-21 02:53:59,828 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=50, chain_id=None
2025-05-21 02:53:59,830 - config - INFO - 符合条件的执行历史记录总数: 0
2025-05-21 02:53:59,830 - config - WARNING - 没有符合条件的执行历史记录
2025-05-21 02:53:59,831 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:53:59] "GET /api/execution/statistics?period=day&script_id=50&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:54:02,628 - config - INFO - 添加执行历史记录成功: 脚本ID 50, 链ID None
2025-05-21 02:54:02,630 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:54:02] "POST /api/execution/script/50 HTTP/1.1" 200 -
2025-05-21 02:54:02,639 - config - INFO - 更新执行进度成功: ID 692
2025-05-21 02:54:02,662 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:54:02] "GET /api/execution/history/692 HTTP/1.1" 200 -
2025-05-21 02:54:02,892 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 02:54:02"}, "file_params": {}}...
2025-05-21 02:54:02,894 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521025351_script_template.sh
2025-05-21 02:54:02,894 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 02:54:02,894 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim bash /app/20250521025351_script_template.sh /params/tmp6eo6q9py.json
2025-05-21 02:54:02,977 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:54:02] "GET /api/execution/history?script_id=50&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:54:04,155 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 02:54:04,155 - config - INFO - Docker执行成功，输出长度: 369
2025-05-21 02:54:04,172 - config - INFO - 更新执行历史记录成功: ID 692
2025-05-21 02:54:04,392 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:54:04] "GET /api/scripts/50 HTTP/1.1" 200 -
2025-05-21 02:54:04,725 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=50, chain_id=None
2025-05-21 02:54:04,727 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 02:54:04,727 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 02:54:04,727 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 02:54:04,727 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 50]
2025-05-21 02:54:04,727 - config - INFO - 查询返回 0 条统计数据
2025-05-21 02:54:04,728 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 02:54:04,728 - config - INFO - 备用查询参数: [50, '2025-04-21', '2025-05-21']
2025-05-21 02:54:04,728 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 02:54:04,728 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 02:54:04,729 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:54:04] "GET /api/execution/statistics?period=day&script_id=50&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:54:05,653 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:54:05] "GET /api/scripts/50 HTTP/1.1" 200 -
2025-05-21 02:54:07,728 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:54:07] "GET /api/scripts/50 HTTP/1.1" 200 -
2025-05-21 02:54:08,047 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=50, chain_id=None
2025-05-21 02:54:08,049 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 02:54:08,049 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 02:54:08,049 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 02:54:08,049 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 50]
2025-05-21 02:54:08,050 - config - INFO - 查询返回 0 条统计数据
2025-05-21 02:54:08,050 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 02:54:08,050 - config - INFO - 备用查询参数: [50, '2025-04-21', '2025-05-21']
2025-05-21 02:54:08,050 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 02:54:08,050 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 02:54:08,051 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:54:08] "GET /api/execution/statistics?period=day&script_id=50&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:54:08,918 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:54:08] "GET /api/scripts/50/versions HTTP/1.1" 200 -
2025-05-21 02:54:42,786 - config - INFO - 数据库初始化成功
2025-05-21 02:54:42,796 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 02:54:44,749 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-21 02:54:44,749 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 02:54:44,750 - werkzeug - INFO -  * Restarting with stat
2025-05-21 02:54:45,523 - config - INFO - 数据库初始化成功
2025-05-21 02:54:45,533 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 02:54:45,559 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 02:54:45,561 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 02:54:55,346 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:54:55] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:54:55,347 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:54:55] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 02:54:55,349 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:54:55] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 02:54:55,480 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=None, chain_id=None
2025-05-21 02:54:55,482 - config - INFO - 符合条件的执行历史记录总数: 692
2025-05-21 02:54:55,482 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 02:54:55,482 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 02:54:55,482 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21']
2025-05-21 02:54:55,482 - config - INFO - 查询返回 30 条统计数据
2025-05-21 02:54:55,482 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 17, 'success_count': 12, 'failed_count': 2, 'avg_execution_time': 142.64786081685196}
2025-05-21 02:54:55,483 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:54:55] "GET /api/execution/statistics?period=day&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:54:57,029 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:54:57] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:54:59,028 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:54:59] "GET /api/scripts/50 HTTP/1.1" 200 -
2025-05-21 02:54:59,055 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=50, chain_id=None
2025-05-21 02:54:59,056 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 02:54:59,057 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 02:54:59,057 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 02:54:59,057 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 50]
2025-05-21 02:54:59,057 - config - INFO - 查询返回 0 条统计数据
2025-05-21 02:54:59,057 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 02:54:59,058 - config - INFO - 备用查询参数: [50, '2025-04-21', '2025-05-21']
2025-05-21 02:54:59,058 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 02:54:59,058 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 02:54:59,058 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:54:59] "GET /api/execution/statistics?period=day&script_id=50&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:55:02,390 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:55:02] "GET /api/scripts/50/versions HTTP/1.1" 200 -
2025-05-21 02:55:04,874 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:55:04] "GET /api/scripts/50 HTTP/1.1" 200 -
2025-05-21 02:55:06,505 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:55:06] "GET /api/scripts/50 HTTP/1.1" 200 -
2025-05-21 02:55:06,508 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=50, chain_id=None
2025-05-21 02:55:06,510 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 02:55:06,510 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 02:55:06,511 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 02:55:06,511 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 50]
2025-05-21 02:55:06,511 - config - INFO - 查询返回 0 条统计数据
2025-05-21 02:55:06,511 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 02:55:06,511 - config - INFO - 备用查询参数: [50, '2025-04-21', '2025-05-21']
2025-05-21 02:55:06,512 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 02:55:06,512 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 02:55:06,513 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:55:06] "GET /api/execution/statistics?period=day&script_id=50&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:56:20,176 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:56:20] "GET /api/scripts/50 HTTP/1.1" 200 -
2025-05-21 02:56:22,033 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:56:22] "GET /api/scripts/50 HTTP/1.1" 200 -
2025-05-21 02:56:22,046 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=50, chain_id=None
2025-05-21 02:56:22,048 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 02:56:22,048 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 02:56:22,048 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 02:56:22,048 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 50]
2025-05-21 02:56:22,049 - config - INFO - 查询返回 0 条统计数据
2025-05-21 02:56:22,049 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 02:56:22,049 - config - INFO - 备用查询参数: [50, '2025-04-21', '2025-05-21']
2025-05-21 02:56:22,049 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 02:56:22,049 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 02:56:22,050 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:56:22] "GET /api/execution/statistics?period=day&script_id=50&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:56:23,338 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:56:23] "GET /api/scripts/50/versions HTTP/1.1" 200 -
2025-05-21 02:56:25,200 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:56:25] "GET /api/scripts/50 HTTP/1.1" 200 -
2025-05-21 02:56:27,681 - config - ERROR - 更新脚本失败: 'sqlite3.Row' object has no attribute 'get'
2025-05-21 02:56:27,682 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:56:27] "[35m[1mPUT /api/scripts/50 HTTP/1.1[0m" 500 -
2025-05-21 02:57:16,041 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:16] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 02:57:16,286 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:16] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:57:16,365 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:16] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 02:57:16,369 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:16] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:57:16,519 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:16] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 02:57:17,524 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:17] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 02:57:17,524 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:17] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:57:22,486 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:22] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:57:22,487 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:22] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 02:57:22,793 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=None, chain_id=None
2025-05-21 02:57:22,795 - config - INFO - 符合条件的执行历史记录总数: 692
2025-05-21 02:57:22,795 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 02:57:22,795 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 02:57:22,795 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21']
2025-05-21 02:57:22,798 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:22] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 02:57:22,798 - config - INFO - 查询返回 30 条统计数据
2025-05-21 02:57:22,799 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 17, 'success_count': 12, 'failed_count': 2, 'avg_execution_time': 142.64786081685196}
2025-05-21 02:57:22,800 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:22] "GET /api/execution/statistics?period=day&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:57:29,635 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:29] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:57:30,036 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:30] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 02:57:30,037 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:30] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:57:30,601 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:30] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 02:57:30,632 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:30] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:57:30,917 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:30] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 02:57:31,520 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:31] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 02:57:31,899 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:31] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-21 02:57:32,550 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:32] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 02:57:32,834 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:32] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 02:57:33,138 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:33] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:57:33,139 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:33] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 02:57:33,158 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:33] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 02:57:33,470 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:33] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:57:33,491 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:33] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:57:33,881 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:33] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:57:33,886 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:33] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 02:57:34,189 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=None, chain_id=None
2025-05-21 02:57:34,191 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:34] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 02:57:34,204 - config - INFO - 符合条件的执行历史记录总数: 692
2025-05-21 02:57:34,204 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 02:57:34,205 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 02:57:34,205 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21']
2025-05-21 02:57:34,205 - config - INFO - 查询返回 30 条统计数据
2025-05-21 02:57:34,205 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 17, 'success_count': 12, 'failed_count': 2, 'avg_execution_time': 142.64786081685196}
2025-05-21 02:57:34,206 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:34] "GET /api/execution/statistics?period=day&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:57:50,103 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\script\\script_base.py', reloading
2025-05-21 02:57:50,190 - werkzeug - INFO -  * Restarting with stat
2025-05-21 02:57:51,069 - config - INFO - 数据库初始化成功
2025-05-21 02:57:51,084 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 02:57:51,126 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 02:57:51,129 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 02:57:58,345 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:57:58] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:58:06,388 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:58:06] "GET /api/scripts/template?language=shell&has_params=true&output_mode=json HTTP/1.1" 200 -
2025-05-21 02:58:17,503 - config - WARNING - 模板 shell_without_params_json.sh 不存在，使用备选模板 python_without_params_json.py
2025-05-21 02:58:17,504 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:58:17] "GET /api/scripts/template?language=shell&has_params=false&output_mode=json HTTP/1.1" 200 -
2025-05-21 02:58:28,720 - config - ERROR - 添加脚本版本失败: database is locked
2025-05-21 02:58:28,721 - config - WARNING - 添加脚本成功，但创建初始版本失败: 脚本ID 51
2025-05-21 02:58:28,725 - config - INFO - 添加脚本成功: 啊啊啊
2025-05-21 02:58:28,727 - config - ERROR - 保存脚本参数模式失败: no such table: script_parameters_schema
2025-05-21 02:58:28,731 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:58:28] "POST /api/scripts/with-file HTTP/1.1" 200 -
2025-05-21 02:58:29,055 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:58:29] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:58:30,742 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:58:30] "GET /api/scripts/51 HTTP/1.1" 200 -
2025-05-21 02:58:30,765 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=51, chain_id=None
2025-05-21 02:58:30,767 - config - INFO - 符合条件的执行历史记录总数: 0
2025-05-21 02:58:30,767 - config - WARNING - 没有符合条件的执行历史记录
2025-05-21 02:58:30,768 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:58:30] "GET /api/execution/statistics?period=day&script_id=51&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:58:31,562 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:58:31] "GET /api/scripts/51 HTTP/1.1" 200 -
2025-05-21 02:58:33,391 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:58:33] "GET /api/scripts/51 HTTP/1.1" 200 -
2025-05-21 02:58:33,721 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=51, chain_id=None
2025-05-21 02:58:33,723 - config - INFO - 符合条件的执行历史记录总数: 0
2025-05-21 02:58:33,723 - config - WARNING - 没有符合条件的执行历史记录
2025-05-21 02:58:33,724 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:58:33] "GET /api/execution/statistics?period=day&script_id=51&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:58:34,839 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:58:34] "GET /api/scripts/51/versions HTTP/1.1" 200 -
2025-05-21 02:58:42,377 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\script\\script_version.py', reloading
2025-05-21 02:58:42,443 - werkzeug - INFO -  * Restarting with stat
2025-05-21 02:58:43,268 - config - INFO - 数据库初始化成功
2025-05-21 02:58:43,279 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 02:58:43,305 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 02:58:43,307 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 02:59:05,788 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\script\\script_base.py', reloading
2025-05-21 02:59:05,841 - werkzeug - INFO -  * Restarting with stat
2025-05-21 02:59:06,716 - config - INFO - 数据库初始化成功
2025-05-21 02:59:06,730 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 02:59:06,764 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 02:59:06,768 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 02:59:09,285 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:59:09] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:59:15,167 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:59:15] "GET /api/scripts/template?language=shell&has_params=true&output_mode=json HTTP/1.1" 200 -
2025-05-21 02:59:17,666 - config - WARNING - 模板 shell_without_params_json.sh 不存在，使用备选模板 python_without_params_json.py
2025-05-21 02:59:17,668 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:59:17] "GET /api/scripts/template?language=shell&has_params=false&output_mode=json HTTP/1.1" 200 -
2025-05-21 02:59:20,060 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\script\\script_base.py', reloading
2025-05-21 02:59:20,174 - werkzeug - INFO -  * Restarting with stat
2025-05-21 02:59:21,022 - config - INFO - 数据库初始化成功
2025-05-21 02:59:21,033 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 02:59:21,060 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 02:59:21,062 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 02:59:35,515 - config - ERROR - 添加脚本版本失败: database is locked
2025-05-21 02:59:35,515 - config - WARNING - 添加脚本成功，但创建初始版本失败: 脚本ID 52
2025-05-21 02:59:35,520 - config - INFO - 添加脚本成功: ddd
2025-05-21 02:59:35,522 - config - ERROR - 保存脚本参数模式失败: no such table: script_parameters_schema
2025-05-21 02:59:35,525 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:59:35] "POST /api/scripts/with-file HTTP/1.1" 200 -
2025-05-21 02:59:35,546 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:59:35] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:59:37,300 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:59:37] "GET /api/scripts/52 HTTP/1.1" 200 -
2025-05-21 02:59:37,316 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=52, chain_id=None
2025-05-21 02:59:37,319 - config - INFO - 符合条件的执行历史记录总数: 0
2025-05-21 02:59:37,319 - config - WARNING - 没有符合条件的执行历史记录
2025-05-21 02:59:37,319 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:59:37] "GET /api/execution/statistics?period=day&script_id=52&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:59:39,478 - config - INFO - 添加执行历史记录成功: 脚本ID 52, 链ID None
2025-05-21 02:59:39,480 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:59:39] "POST /api/execution/script/52 HTTP/1.1" 200 -
2025-05-21 02:59:39,489 - config - INFO - 更新执行进度成功: ID 693
2025-05-21 02:59:39,524 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:59:39] "GET /api/execution/history/693 HTTP/1.1" 200 -
2025-05-21 02:59:39,724 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 02:59:39"}, "file_params": {}}...
2025-05-21 02:59:39,726 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521025930_script_template.sh
2025-05-21 02:59:39,726 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 02:59:39,726 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim bash /app/20250521025930_script_template.sh /params/tmpaefi46eh.json
2025-05-21 02:59:39,847 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:59:39] "GET /api/execution/history?script_id=52&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:59:41,027 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:59:41] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 02:59:41,130 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 02:59:41,130 - config - INFO - Docker执行成功，输出长度: 369
2025-05-21 02:59:41,153 - config - INFO - 更新执行历史记录成功: ID 693
2025-05-21 02:59:42,871 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:59:42] "GET /api/execution/history?script_id=52&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:59:43,440 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:59:43] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 02:59:43,753 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:59:43] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:59:43,777 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:59:43] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 02:59:45,933 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:59:45] "GET /api/scripts/52 HTTP/1.1" 200 -
2025-05-21 02:59:45,944 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=52, chain_id=None
2025-05-21 02:59:45,946 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 02:59:45,946 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 02:59:45,947 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 02:59:45,947 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 52]
2025-05-21 02:59:45,947 - config - INFO - 查询返回 0 条统计数据
2025-05-21 02:59:45,947 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 02:59:45,948 - config - INFO - 备用查询参数: [52, '2025-04-21', '2025-05-21']
2025-05-21 02:59:45,948 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 02:59:45,948 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 02:59:45,949 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:59:45] "GET /api/execution/statistics?period=day&script_id=52&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:59:46,696 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:59:46] "GET /api/scripts/52 HTTP/1.1" 200 -
2025-05-21 02:59:48,494 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:59:48] "GET /api/scripts/52 HTTP/1.1" 200 -
2025-05-21 02:59:48,804 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=52, chain_id=None
2025-05-21 02:59:48,806 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 02:59:48,806 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 02:59:48,806 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 02:59:48,806 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 52]
2025-05-21 02:59:48,807 - config - INFO - 查询返回 0 条统计数据
2025-05-21 02:59:48,807 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 02:59:48,807 - config - INFO - 备用查询参数: [52, '2025-04-21', '2025-05-21']
2025-05-21 02:59:48,808 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 02:59:48,808 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 02:59:48,809 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:59:48] "GET /api/execution/statistics?period=day&script_id=52&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 02:59:49,683 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 02:59:49] "GET /api/scripts/52/versions HTTP/1.1" 200 -
2025-05-21 03:00:27,725 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\routes\\scripts\\upload.py', reloading
2025-05-21 03:00:27,771 - werkzeug - INFO -  * Restarting with stat
2025-05-21 03:00:28,528 - config - INFO - 数据库初始化成功
2025-05-21 03:00:28,539 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 03:00:28,568 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 03:00:28,572 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 03:01:10,932 - config - INFO - 数据库初始化成功
2025-05-21 03:01:10,941 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 03:01:12,243 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-21 03:01:12,243 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 03:01:12,246 - werkzeug - INFO -  * Restarting with stat
2025-05-21 03:01:13,728 - config - INFO - 数据库初始化成功
2025-05-21 03:01:13,740 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 03:01:13,778 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 03:01:13,786 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 03:01:17,009 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:01:17] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 03:01:17,506 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:01:17] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 03:01:17,596 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:01:17] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 03:01:18,149 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:01:18] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 03:01:24,630 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:01:24] "GET /api/scripts/template?language=shell&has_params=true&output_mode=json HTTP/1.1" 200 -
2025-05-21 03:01:28,082 - config - WARNING - 模板 shell_without_params_json.sh 不存在，使用备选模板 python_without_params_json.py
2025-05-21 03:01:28,084 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:01:28] "GET /api/scripts/template?language=shell&has_params=false&output_mode=json HTTP/1.1" 200 -
2025-05-21 03:01:41,159 - config - ERROR - 添加脚本版本失败: database is locked
2025-05-21 03:01:41,160 - config - WARNING - 添加脚本成功，但创建初始版本失败: 脚本ID 53
2025-05-21 03:01:41,166 - config - INFO - 添加脚本成功: fff
2025-05-21 03:01:41,169 - config - ERROR - 保存脚本参数模式失败: no such table: script_parameters_schema
2025-05-21 03:01:41,174 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:01:41] "POST /api/scripts/with-file HTTP/1.1" 200 -
2025-05-21 03:01:41,507 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:01:41] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 03:03:53,801 - config - INFO - 数据库初始化成功
2025-05-21 03:03:53,810 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 03:03:55,200 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-21 03:03:55,200 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 03:03:55,202 - werkzeug - INFO -  * Restarting with stat
2025-05-21 03:03:56,682 - config - INFO - 数据库初始化成功
2025-05-21 03:03:56,693 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 03:03:56,727 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 03:03:56,731 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 03:04:04,093 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:04:04] "GET /api/scripts/template?language=shell&has_params=true&output_mode=json HTTP/1.1" 200 -
2025-05-21 03:04:17,630 - config - ERROR - 添加脚本版本失败: database is locked
2025-05-21 03:04:17,630 - config - WARNING - 添加脚本成功，但创建初始版本失败: 脚本ID 54
2025-05-21 03:04:17,635 - config - INFO - 添加脚本成功: zzz
2025-05-21 03:04:22,623 - config - ERROR - 保存脚本参数模式失败: no such table: script_parameters_schema
2025-05-21 03:04:24,495 - config - INFO - 添加脚本版本成功: 脚本ID 54, 版本 1.0.0
2025-05-21 03:04:25,495 - config - INFO - 添加脚本初始版本成功: 脚本ID 54, 版本ID 40
2025-05-21 03:04:31,006 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:04:31] "POST /api/scripts/with-file HTTP/1.1" 200 -
2025-05-21 03:04:31,349 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:04:31] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 03:04:33,948 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:04:33] "GET /api/scripts/54 HTTP/1.1" 200 -
2025-05-21 03:04:33,966 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=54, chain_id=None
2025-05-21 03:04:33,969 - config - INFO - 符合条件的执行历史记录总数: 0
2025-05-21 03:04:33,969 - config - WARNING - 没有符合条件的执行历史记录
2025-05-21 03:04:33,970 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:04:33] "GET /api/execution/statistics?period=day&script_id=54&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 03:04:34,794 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:04:34] "GET /api/scripts/54/versions HTTP/1.1" 200 -
2025-05-21 03:04:35,881 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521030412_script_template.sh
2025-05-21 03:04:35,882 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:04:35] "GET /api/scripts/54/versions/40/content HTTP/1.1" 200 -
2025-05-21 03:04:41,219 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:04:41] "GET /api/scripts/54 HTTP/1.1" 200 -
2025-05-21 03:04:41,239 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521030412_script_template.sh
2025-05-21 03:04:41,240 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:04:41] "GET /api/scripts/54/versions/40/content HTTP/1.1" 200 -
2025-05-21 03:04:42,777 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:04:42] "GET /api/scripts/54 HTTP/1.1" 200 -
2025-05-21 03:04:43,093 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=54, chain_id=None
2025-05-21 03:04:43,095 - config - INFO - 符合条件的执行历史记录总数: 0
2025-05-21 03:04:43,095 - config - WARNING - 没有符合条件的执行历史记录
2025-05-21 03:04:43,096 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:04:43] "GET /api/execution/statistics?period=day&script_id=54&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 03:04:44,075 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:04:44] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 03:04:50,623 - config - INFO - 删除脚本成功: ID 50
2025-05-21 03:04:50,624 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:04:50] "DELETE /api/scripts/50 HTTP/1.1" 200 -
2025-05-21 03:04:50,946 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:04:50] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 03:04:52,707 - config - INFO - 删除脚本成功: ID 51
2025-05-21 03:04:52,708 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:04:52] "DELETE /api/scripts/51 HTTP/1.1" 200 -
2025-05-21 03:04:53,032 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:04:53] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 03:04:54,379 - config - INFO - 删除脚本成功: ID 52
2025-05-21 03:04:54,380 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:04:54] "DELETE /api/scripts/52 HTTP/1.1" 200 -
2025-05-21 03:04:54,707 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:04:54] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 03:04:56,003 - config - INFO - 删除脚本成功: ID 53
2025-05-21 03:04:56,004 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:04:56] "DELETE /api/scripts/53 HTTP/1.1" 200 -
2025-05-21 03:04:56,346 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:04:56] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 03:04:57,552 - config - INFO - 删除脚本成功: ID 54
2025-05-21 03:04:57,553 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:04:57] "DELETE /api/scripts/54 HTTP/1.1" 200 -
2025-05-21 03:04:57,883 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:04:57] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 03:05:05,611 - config - INFO - 删除脚本成功: ID 49
2025-05-21 03:05:05,612 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:05:05] "DELETE /api/scripts/49 HTTP/1.1" 200 -
2025-05-21 03:05:05,939 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:05:05] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 03:05:07,509 - config - INFO - 删除脚本成功: ID 48
2025-05-21 03:05:07,510 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:05:07] "DELETE /api/scripts/48 HTTP/1.1" 200 -
2025-05-21 03:05:07,835 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:05:07] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 03:05:25,243 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:05:25] "GET /api/scripts/template?language=shell&has_params=true&output_mode=json HTTP/1.1" 200 -
2025-05-21 03:05:26,841 - config - WARNING - 模板 shell_without_params_json.sh 不存在，使用备选模板 python_without_params_json.py
2025-05-21 03:05:26,843 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:05:26] "GET /api/scripts/template?language=shell&has_params=false&output_mode=json HTTP/1.1" 200 -
2025-05-21 03:05:42,254 - config - ERROR - 添加脚本版本失败: database is locked
2025-05-21 03:05:42,255 - config - WARNING - 添加脚本成功，但创建初始版本失败: 脚本ID 55
2025-05-21 03:05:42,261 - config - INFO - 添加脚本成功: 测试用shell脚本
2025-05-21 03:05:43,674 - config - ERROR - 保存脚本参数模式失败: no such table: script_parameters_schema
2025-05-21 03:05:43,682 - config - INFO - 添加脚本版本成功: 脚本ID 55, 版本 1.0.0
2025-05-21 03:05:43,682 - config - INFO - 添加脚本初始版本成功: 脚本ID 55, 版本ID 41
2025-05-21 03:05:43,687 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:05:43] "POST /api/scripts/with-file HTTP/1.1" 200 -
2025-05-21 03:05:43,811 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:05:43] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 03:05:49,815 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:05:49] "GET /api/scripts/55 HTTP/1.1" 200 -
2025-05-21 03:05:49,833 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=55, chain_id=None
2025-05-21 03:05:49,836 - config - INFO - 符合条件的执行历史记录总数: 0
2025-05-21 03:05:49,837 - config - WARNING - 没有符合条件的执行历史记录
2025-05-21 03:05:49,838 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:05:49] "GET /api/execution/statistics?period=day&script_id=55&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 03:05:51,581 - config - INFO - 添加执行历史记录成功: 脚本ID 55, 链ID None
2025-05-21 03:05:51,583 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:05:51] "POST /api/execution/script/55 HTTP/1.1" 200 -
2025-05-21 03:05:51,595 - config - INFO - 更新执行进度成功: ID 694
2025-05-21 03:05:51,613 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:05:51] "GET /api/execution/history/694 HTTP/1.1" 200 -
2025-05-21 03:05:51,840 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 03:05:51"}, "file_params": {}}...
2025-05-21 03:05:51,843 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521030536_script_template.sh
2025-05-21 03:05:51,844 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 03:05:51,844 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim bash /app/20250521030536_script_template.sh /params/tmpsomzouyl.json
2025-05-21 03:05:51,926 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:05:51] "GET /api/execution/history?script_id=55&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 03:05:53,141 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 03:05:53,141 - config - INFO - Docker执行成功，输出长度: 369
2025-05-21 03:05:53,170 - config - INFO - 更新执行历史记录成功: ID 694
2025-05-21 03:05:56,628 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 03:05:56] "GET /api/execution/history/694 HTTP/1.1" 200 -
2025-05-21 03:57:12,115 - config - INFO - 数据库初始化成功
2025-05-21 03:57:12,128 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 03:57:13,450 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-21 03:57:13,451 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 03:57:13,452 - werkzeug - INFO -  * Restarting with stat
2025-05-21 03:57:14,317 - config - INFO - 数据库初始化成功
2025-05-21 03:57:14,330 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 03:57:14,359 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 03:57:14,363 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 03:57:39,516 - config - INFO - 数据库初始化成功
2025-05-21 03:57:39,527 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 03:57:40,842 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-21 03:57:40,842 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 03:57:40,843 - werkzeug - INFO -  * Restarting with stat
2025-05-21 03:57:41,672 - config - INFO - 数据库初始化成功
2025-05-21 03:57:41,688 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 03:57:41,719 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 03:57:41,721 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 03:57:42,941 - config - INFO - 数据库初始化成功
2025-05-21 03:57:42,951 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 03:57:43,832 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-21 03:57:43,832 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 03:57:43,833 - werkzeug - INFO -  * Restarting with stat
2025-05-21 03:57:44,649 - config - INFO - 数据库初始化成功
2025-05-21 03:57:44,664 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 03:57:44,709 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 03:57:44,713 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 03:57:58,867 - config - INFO - 数据库初始化成功
2025-05-21 03:57:58,878 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 03:58:00,211 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-21 03:58:00,211 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 03:58:00,212 - werkzeug - INFO -  * Restarting with stat
2025-05-21 03:58:00,961 - config - INFO - 数据库初始化成功
2025-05-21 03:58:00,971 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 03:58:01,003 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 03:58:01,007 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 04:00:10,402 - config - INFO - 数据库初始化成功
2025-05-21 04:00:10,412 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 04:00:11,740 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-21 04:00:11,740 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 04:00:11,741 - werkzeug - INFO -  * Restarting with stat
2025-05-21 04:00:12,518 - config - INFO - 数据库初始化成功
2025-05-21 04:00:12,528 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 04:00:12,554 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 04:00:12,557 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 04:00:25,112 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 04:00:25] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 04:00:25,113 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 04:00:25] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 04:00:25,139 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 04:00:25] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 04:00:25,244 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=None, chain_id=None
2025-05-21 04:00:25,245 - config - INFO - 符合条件的执行历史记录总数: 694
2025-05-21 04:00:25,245 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 04:00:25,245 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 04:00:25,245 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21']
2025-05-21 04:00:25,246 - config - INFO - 查询返回 30 条统计数据
2025-05-21 04:00:25,246 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 17, 'success_count': 12, 'failed_count': 2, 'avg_execution_time': 142.64786081685196}
2025-05-21 04:00:25,247 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 04:00:25] "GET /api/execution/statistics?period=day&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 04:00:28,819 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 04:00:28] "[33mGET /api/scripts/ai-generator HTTP/1.1[0m" 404 -
2025-05-21 04:00:28,876 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 04:00:28] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 04:00:30,275 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 04:00:30] "[33mGET /api/scripts/ai-generator HTTP/1.1[0m" 404 -
2025-05-21 04:00:30,313 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 04:00:30] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 04:00:30,868 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 04:00:30] "[33mGET /api/scripts/ai-generator HTTP/1.1[0m" 404 -
2025-05-21 04:00:30,908 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 04:00:30] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 04:00:31,270 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 04:00:31] "[33mGET /api/scripts/ai-generator HTTP/1.1[0m" 404 -
2025-05-21 04:00:31,635 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 04:00:31] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 04:00:31,682 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 04:00:31] "[33mGET /api/scripts/ai-generator HTTP/1.1[0m" 404 -
2025-05-21 04:00:31,891 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 04:00:31] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 04:00:33,686 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 04:00:33] "[33mGET /api/scripts/ai-generator HTTP/1.1[0m" 404 -
2025-05-21 04:00:33,726 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 04:00:33] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 04:00:34,279 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 04:00:34] "[33mGET /api/scripts/ai-generator HTTP/1.1[0m" 404 -
2025-05-21 04:00:34,320 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 04:00:34] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 04:00:34,732 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 04:00:34] "[33mGET /api/scripts/ai-generator HTTP/1.1[0m" 404 -
2025-05-21 04:00:35,082 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 04:00:35] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 04:02:58,057 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\routes\\scripts\\__init__.py', reloading
2025-05-21 04:02:58,155 - werkzeug - INFO -  * Restarting with stat
2025-05-21 04:02:59,076 - config - INFO - 数据库初始化成功
2025-05-21 04:02:59,088 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 04:02:59,116 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 04:02:59,120 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 04:06:12,227 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 04:06:12] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 04:06:12,468 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 04:06:12] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 04:06:12,787 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 04:06:12] "[33mGET /api/scripts/ai-generator HTTP/1.1[0m" 404 -
2025-05-21 04:06:12,828 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 04:06:12] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 09:08:34,669 - config - INFO - 数据库初始化成功
2025-05-21 09:08:34,679 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 09:08:35,999 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-21 09:08:35,999 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 09:08:36,000 - werkzeug - INFO -  * Restarting with stat
2025-05-21 09:08:36,713 - config - INFO - 数据库初始化成功
2025-05-21 09:08:36,723 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 09:08:36,746 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 09:08:36,749 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 09:10:43,052 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:10:43] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 09:10:43,053 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:10:43] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 09:10:43,055 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:10:43] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 09:10:43,196 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=None, chain_id=None
2025-05-21 09:10:43,198 - config - INFO - 符合条件的执行历史记录总数: 694
2025-05-21 09:10:43,198 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 09:10:43,199 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 09:10:43,199 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21']
2025-05-21 09:10:43,200 - config - INFO - 查询返回 30 条统计数据
2025-05-21 09:10:43,200 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 17, 'success_count': 12, 'failed_count': 2, 'avg_execution_time': 142.64786081685196}
2025-05-21 09:10:43,200 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:10:43] "GET /api/execution/statistics?period=day&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 09:10:44,212 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:10:44] "[33mGET /api/scripts/ai-generator HTTP/1.1[0m" 404 -
2025-05-21 09:10:44,273 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:10:44] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 09:11:58,527 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\routes\\scripts\\ai_generator.py', reloading
2025-05-21 09:11:58,570 - werkzeug - INFO -  * Restarting with stat
2025-05-21 09:11:59,338 - config - INFO - 数据库初始化成功
2025-05-21 09:11:59,348 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 09:11:59,372 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 09:11:59,375 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 09:12:01,677 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:12:01] "[33mGET /api/scripts/ai-generator HTTP/1.1[0m" 404 -
2025-05-21 09:12:01,702 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:12:01] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 09:14:33,218 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\routes\\scripts\\ai_generator.py', reloading
2025-05-21 09:14:33,279 - werkzeug - INFO -  * Restarting with stat
2025-05-21 09:14:34,035 - config - INFO - 数据库初始化成功
2025-05-21 09:14:34,047 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 09:14:34,072 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 09:14:34,075 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 09:14:41,673 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\routes\\scripts\\ai_generator.py', reloading
2025-05-21 09:14:41,724 - werkzeug - INFO -  * Restarting with stat
2025-05-21 09:14:42,560 - config - INFO - 数据库初始化成功
2025-05-21 09:14:42,571 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 09:14:42,597 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 09:14:42,600 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 09:14:57,910 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:14:57] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 09:15:01,048 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:15:01] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 09:15:01,057 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:15:01] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 09:15:01,543 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:15:01] "[33mGET /api/scripts/ai-generator HTTP/1.1[0m" 404 -
2025-05-21 09:15:01,597 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:15:01] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 09:16:20,697 - config - INFO - 数据库初始化成功
2025-05-21 09:16:20,710 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 09:16:22,027 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-21 09:16:22,027 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 09:16:22,028 - werkzeug - INFO -  * Restarting with stat
2025-05-21 09:16:22,766 - config - INFO - 数据库初始化成功
2025-05-21 09:16:22,777 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 09:16:22,801 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 09:16:22,804 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 09:16:34,072 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:16:34] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 09:16:34,073 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:16:34] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 09:16:34,075 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:16:34] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 09:16:34,222 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=None, chain_id=None
2025-05-21 09:16:34,223 - config - INFO - 符合条件的执行历史记录总数: 694
2025-05-21 09:16:34,223 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 09:16:34,223 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 09:16:34,223 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21']
2025-05-21 09:16:34,224 - config - INFO - 查询返回 30 条统计数据
2025-05-21 09:16:34,224 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 17, 'success_count': 12, 'failed_count': 2, 'avg_execution_time': 142.64786081685196}
2025-05-21 09:16:34,225 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:16:34] "GET /api/execution/statistics?period=day&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 09:16:40,848 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:16:40] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 09:16:42,252 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:16:42] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 09:16:42,260 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:16:42] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 09:16:42,743 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:16:42] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 09:16:42,836 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:16:42] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 09:16:43,067 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:16:43] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 09:16:43,236 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:16:43] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 09:16:44,853 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:16:44] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-21 09:16:45,791 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:16:45] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 09:16:46,184 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:16:46] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 09:16:46,496 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:16:46] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 09:16:47,162 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:16:47] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 09:16:49,704 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:16:49] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 09:16:49,710 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:16:49] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 09:16:50,018 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=None, chain_id=None
2025-05-21 09:16:50,020 - config - INFO - 符合条件的执行历史记录总数: 694
2025-05-21 09:16:50,020 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 09:16:50,020 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 09:16:50,020 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21']
2025-05-21 09:16:50,023 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:16:50] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 09:16:50,023 - config - INFO - 查询返回 30 条统计数据
2025-05-21 09:16:50,024 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 17, 'success_count': 12, 'failed_count': 2, 'avg_execution_time': 142.64786081685196}
2025-05-21 09:16:50,024 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:16:50] "GET /api/execution/statistics?period=day&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 09:18:07,075 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:18:07] "[35m[1mPOST /api/scripts/ai/generate HTTP/1.1[0m" 500 -
2025-05-21 09:25:49,282 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:25:49] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 09:25:54,671 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:25:54] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 09:25:54,699 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 09:25:54,702 - config - INFO - 符合条件的执行历史记录总数: 7
2025-05-21 09:25:54,702 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 09:25:54,702 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 09:25:54,702 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 47]
2025-05-21 09:25:54,702 - config - INFO - 查询返回 0 条统计数据
2025-05-21 09:25:54,703 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 09:25:54,703 - config - INFO - 备用查询参数: [47, '2025-04-21', '2025-05-21']
2025-05-21 09:25:54,703 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 09:25:54,703 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 09:25:54,704 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:25:54] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 09:26:02,334 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:26:02] "[33mGET /api/scripts/ai/analyze/1?type=readability HTTP/1.1[0m" 404 -
2025-05-21 09:26:19,969 - config - ERROR - 分析脚本时发生错误: 'dict' object has no attribute 'content'
2025-05-21 09:26:19,969 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:26:19] "[35m[1mGET /api/scripts/ai/analyze/47?type=general HTTP/1.1[0m" 500 -
2025-05-21 09:26:21,701 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:26:21] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 09:26:22,685 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:26:22] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 09:26:24,142 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:26:24] "GET /api/scripts/55 HTTP/1.1" 200 -
2025-05-21 09:26:24,469 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=55, chain_id=None
2025-05-21 09:26:24,471 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 09:26:24,471 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 09:26:24,472 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 09:26:24,472 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 55]
2025-05-21 09:26:24,472 - config - INFO - 查询返回 0 条统计数据
2025-05-21 09:26:24,472 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 09:26:24,473 - config - INFO - 备用查询参数: [55, '2025-04-21', '2025-05-21']
2025-05-21 09:26:24,473 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 09:26:24,473 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 09:26:24,474 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:26:24] "GET /api/execution/statistics?period=day&script_id=55&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 09:26:27,216 - config - ERROR - 分析脚本时发生错误: 'dict' object has no attribute 'content'
2025-05-21 09:26:27,217 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:26:27] "[35m[1mGET /api/scripts/ai/analyze/55?type=general HTTP/1.1[0m" 500 -
2025-05-21 09:26:29,152 - config - ERROR - 分析脚本时发生错误: 'dict' object has no attribute 'content'
2025-05-21 09:26:29,153 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:26:29] "[35m[1mGET /api/scripts/ai/analyze/55?type=general HTTP/1.1[0m" 500 -
2025-05-21 09:26:33,614 - config - ERROR - 分析脚本时发生错误: 'dict' object has no attribute 'content'
2025-05-21 09:26:33,614 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:26:33] "[35m[1mGET /api/scripts/ai/analyze/55?type=readability HTTP/1.1[0m" 500 -
2025-05-21 09:26:34,813 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:26:34] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 09:28:08,406 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\ai_generator\\script_analyzer.py', reloading
2025-05-21 09:28:08,502 - werkzeug - INFO -  * Restarting with stat
2025-05-21 09:28:09,325 - config - INFO - 数据库初始化成功
2025-05-21 09:28:09,335 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 09:28:09,360 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 09:28:09,363 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 09:29:59,356 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:29:59] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 09:29:59,362 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 09:29:59,364 - config - INFO - 符合条件的执行历史记录总数: 7
2025-05-21 09:29:59,364 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 09:29:59,364 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 09:29:59,364 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 47]
2025-05-21 09:29:59,364 - config - INFO - 查询返回 0 条统计数据
2025-05-21 09:29:59,365 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 09:29:59,365 - config - INFO - 备用查询参数: [47, '2025-04-21', '2025-05-21']
2025-05-21 09:29:59,365 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 09:29:59,365 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 09:29:59,366 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:29:59] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 09:30:02,153 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:30:02] "[35m[1mGET /api/scripts/ai/analyze/47?type=general HTTP/1.1[0m" 500 -
2025-05-21 09:30:51,972 - config - INFO - 数据库初始化成功
2025-05-21 09:30:51,982 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 09:30:53,300 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-21 09:30:53,300 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 09:30:53,303 - werkzeug - INFO -  * Restarting with stat
2025-05-21 09:30:54,888 - config - INFO - 数据库初始化成功
2025-05-21 09:30:54,899 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 09:30:54,938 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 09:30:54,942 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 09:44:34,333 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:44:34] "[35m[1mGET /api/scripts/ai/analyze/47?type=general HTTP/1.1[0m" 500 -
2025-05-21 09:44:34,348 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\ai_generator\\script_analyzer.py', reloading
2025-05-21 09:44:35,132 - werkzeug - INFO -  * Restarting with stat
2025-05-21 09:52:28,058 - config - INFO - 数据库初始化成功
2025-05-21 09:52:28,065 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 09:52:29,369 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-21 09:52:29,369 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 09:52:29,370 - werkzeug - INFO -  * Restarting with stat
2025-05-21 09:52:30,421 - config - INFO - 数据库初始化成功
2025-05-21 09:52:30,429 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 09:52:30,465 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 09:52:30,470 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 09:52:37,614 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:52:37] "[35m[1mGET /api/scripts/ai/analyze/47?type=general HTTP/1.1[0m" 500 -
2025-05-21 09:53:21,953 - config - INFO - 数据库初始化成功
2025-05-21 09:53:21,963 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 09:53:23,318 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-21 09:53:23,319 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 09:53:23,322 - werkzeug - INFO -  * Restarting with stat
2025-05-21 09:53:26,602 - config - INFO - 数据库初始化成功
2025-05-21 09:53:26,615 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 09:53:26,650 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 09:53:26,655 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 09:54:15,258 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:54:15] "[35m[1mGET /api/scripts/ai/analyze/47?type=general HTTP/1.1[0m" 500 -
2025-05-21 09:56:05,649 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\routes\\scripts\\ai_generator.py', reloading
2025-05-21 09:56:06,524 - werkzeug - INFO -  * Restarting with stat
2025-05-21 09:56:12,493 - config - INFO - 数据库初始化成功
2025-05-21 09:56:12,504 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 09:56:12,537 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 09:56:12,541 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 09:58:13,453 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:58:13] "[35m[1mGET /api/scripts/ai/analyze/47?type=general HTTP/1.1[0m" 500 -
2025-05-21 09:58:13,560 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\ai_generator\\__init__.py', reloading
2025-05-21 09:58:14,374 - werkzeug - INFO -  * Restarting with stat
2025-05-21 09:58:32,734 - config - INFO - 数据库初始化成功
2025-05-21 09:58:32,746 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 09:58:32,785 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 09:58:32,790 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 09:59:25,396 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:59:25] "[35m[1mGET /api/scripts/ai/analyze/47?type=general HTTP/1.1[0m" 500 -
2025-05-21 09:59:30,133 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:59:30] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 09:59:34,815 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:59:34] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 09:59:34,829 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 09:59:34,832 - config - INFO - 符合条件的执行历史记录总数: 7
2025-05-21 09:59:34,832 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 09:59:34,833 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 09:59:34,833 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 47]
2025-05-21 09:59:34,834 - config - INFO - 查询返回 0 条统计数据
2025-05-21 09:59:34,835 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 09:59:34,836 - config - INFO - 备用查询参数: [47, '2025-04-21', '2025-05-21']
2025-05-21 09:59:34,836 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 09:59:34,837 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 09:59:34,838 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:59:34] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 09:59:38,827 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:59:38] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 09:59:39,135 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 09:59:39,138 - config - INFO - 符合条件的执行历史记录总数: 7
2025-05-21 09:59:39,138 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 09:59:39,139 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 09:59:39,139 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 47]
2025-05-21 09:59:39,140 - config - INFO - 查询返回 0 条统计数据
2025-05-21 09:59:39,140 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 09:59:39,141 - config - INFO - 备用查询参数: [47, '2025-04-21', '2025-05-21']
2025-05-21 09:59:39,142 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 09:59:39,142 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 09:59:39,143 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:59:39] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 09:59:39,893 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:59:39] "GET /api/scripts/47/versions HTTP/1.1" 200 -
2025-05-21 09:59:42,168 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 09:59:42,169 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 09:59:42] "GET /api/scripts/47/versions/39/content HTTP/1.1" 200 -
2025-05-21 10:01:19,087 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:01:19] "[35m[1mGET /api/scripts/ai/analyze/47?type=general HTTP/1.1[0m" 500 -
2025-05-21 10:01:22,830 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:01:22] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 10:01:24,180 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:01:24] "GET /api/scripts/55 HTTP/1.1" 200 -
2025-05-21 10:01:24,184 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=55, chain_id=None
2025-05-21 10:01:24,186 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 10:01:24,187 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 10:01:24,187 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 10:01:24,188 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 55]
2025-05-21 10:01:24,189 - config - INFO - 查询返回 0 条统计数据
2025-05-21 10:01:24,190 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 10:01:24,190 - config - INFO - 备用查询参数: [55, '2025-04-21', '2025-05-21']
2025-05-21 10:01:24,192 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 10:01:24,192 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 10:01:24,194 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:01:24] "GET /api/execution/statistics?period=day&script_id=55&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 10:01:25,786 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:01:25] "GET /api/scripts/55 HTTP/1.1" 200 -
2025-05-21 10:01:25,806 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521030536_script_template.sh
2025-05-21 10:01:25,807 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:01:25] "GET /api/scripts/55/versions/41/content HTTP/1.1" 200 -
2025-05-21 10:01:35,273 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:01:35] "GET /api/scripts/55 HTTP/1.1" 200 -
2025-05-21 10:01:35,561 - config - INFO - 添加脚本版本成功: 脚本ID 55, 版本 1.0.1
2025-05-21 10:01:35,563 - config - INFO - 更新脚本参数成功: 脚本ID 55
2025-05-21 10:01:35,568 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:01:35] "POST /api/scripts/55/content HTTP/1.1" 200 -
2025-05-21 10:01:35,596 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:01:35] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 10:01:37,614 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:01:37] "GET /api/scripts/55 HTTP/1.1" 200 -
2025-05-21 10:01:37,619 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=55, chain_id=None
2025-05-21 10:01:37,622 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 10:01:37,622 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 10:01:37,623 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 10:01:37,623 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 55]
2025-05-21 10:01:37,624 - config - INFO - 查询返回 0 条统计数据
2025-05-21 10:01:37,625 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 10:01:37,626 - config - INFO - 备用查询参数: [55, '2025-04-21', '2025-05-21']
2025-05-21 10:01:37,627 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 10:01:37,628 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 10:01:37,629 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:01:37] "GET /api/execution/statistics?period=day&script_id=55&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 10:01:40,317 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:01:40] "GET /api/scripts/55 HTTP/1.1" 200 -
2025-05-21 10:01:40,623 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=55, chain_id=None
2025-05-21 10:01:40,626 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 10:01:40,626 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 10:01:40,627 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 10:01:40,627 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 55]
2025-05-21 10:01:40,628 - config - INFO - 查询返回 0 条统计数据
2025-05-21 10:01:40,629 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 10:01:40,629 - config - INFO - 备用查询参数: [55, '2025-04-21', '2025-05-21']
2025-05-21 10:01:40,630 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 10:01:40,630 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 10:01:40,631 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:01:40] "GET /api/execution/statistics?period=day&script_id=55&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 10:01:41,177 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:01:41] "GET /api/scripts/55/versions HTTP/1.1" 200 -
2025-05-21 10:01:43,778 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:01:43] "GET /api/scripts/55 HTTP/1.1" 200 -
2025-05-21 10:01:43,802 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521100135_script_content.sh
2025-05-21 10:01:43,803 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:01:43] "GET /api/scripts/55/versions/42/content HTTP/1.1" 200 -
2025-05-21 10:01:45,469 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:01:45] "GET /api/scripts/55 HTTP/1.1" 200 -
2025-05-21 10:01:45,780 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=55, chain_id=None
2025-05-21 10:01:45,782 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 10:01:45,783 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 10:01:45,783 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 10:01:45,785 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 55]
2025-05-21 10:01:45,785 - config - INFO - 查询返回 0 条统计数据
2025-05-21 10:01:45,786 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 10:01:45,786 - config - INFO - 备用查询参数: [55, '2025-04-21', '2025-05-21']
2025-05-21 10:01:45,787 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 10:01:45,788 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 10:01:45,790 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:01:45] "GET /api/execution/statistics?period=day&script_id=55&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 10:02:01,943 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:02:01] "[35m[1mGET /api/scripts/ai/analyze/55?type=general HTTP/1.1[0m" 500 -
2025-05-21 10:02:24,398 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:02:24] "[35m[1mGET /api/scripts/ai/analyze/55?type=general HTTP/1.1[0m" 500 -
2025-05-21 10:05:20,522 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:05:20] "[35m[1mGET /api/scripts/ai/analyze/55?type=general HTTP/1.1[0m" 500 -
2025-05-21 10:06:41,530 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\ai_generator\\script_analyzer.py', reloading
2025-05-21 10:06:42,427 - werkzeug - INFO -  * Restarting with stat
2025-05-21 10:07:15,184 - config - INFO - 数据库初始化成功
2025-05-21 10:07:15,196 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 10:07:15,233 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 10:07:15,238 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 10:07:38,001 - config - INFO - 已从文件路径读取脚本内容: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521100135_script_content.sh
2025-05-21 10:07:52,256 - config - ERROR - 分析脚本时发生错误: 'dict' object has no attribute 'script_type'
2025-05-21 10:08:21,136 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:08:21] "[35m[1mGET /api/scripts/ai/analyze/55?type=general HTTP/1.1[0m" 500 -
2025-05-21 10:08:46,833 - config - INFO - 已从文件路径读取脚本内容: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521100135_script_content.sh
2025-05-21 10:08:46,834 - config - ERROR - 分析脚本时发生错误: 'dict' object has no attribute 'script_type'
2025-05-21 10:08:46,835 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:08:46] "[35m[1mGET /api/scripts/ai/analyze/55?type=general HTTP/1.1[0m" 500 -
2025-05-21 10:09:23,657 - config - INFO - 已从文件路径读取脚本内容: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521100135_script_content.sh
2025-05-21 10:11:20,325 - config - ERROR - 分析脚本时发生错误: 'dict' object has no attribute 'script_type'
2025-05-21 10:11:20,327 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:11:20] "[35m[1mGET /api/scripts/ai/analyze/55?type=general HTTP/1.1[0m" 500 -
2025-05-21 10:11:20,479 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\ai_generator\\script_analyzer.py', reloading
2025-05-21 10:11:21,922 - werkzeug - INFO -  * Restarting with stat
2025-05-21 10:11:31,355 - config - INFO - 数据库初始化成功
2025-05-21 10:11:31,376 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 10:11:31,440 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 10:11:31,450 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 10:11:42,353 - config - INFO - 已从文件路径读取脚本内容: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521100135_script_content.sh
2025-05-21 10:14:26,690 - config - ERROR - 分析脚本时发生错误: 'dict' object has no attribute 'file_type'
2025-05-21 10:14:26,693 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:14:26] "[35m[1mGET /api/scripts/ai/analyze/55?type=general HTTP/1.1[0m" 500 -
2025-05-21 10:14:27,796 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\ai_generator\\script_analyzer.py', reloading
2025-05-21 10:14:32,131 - werkzeug - INFO -  * Restarting with stat
2025-05-21 10:15:47,386 - config - INFO - 数据库初始化成功
2025-05-21 10:15:47,398 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 10:15:47,430 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 10:15:47,434 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 10:15:52,944 - config - INFO - 已从文件路径读取脚本内容: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521100135_script_content.sh
2025-05-21 10:18:00,289 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-21 10:18:40,792 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:18:40] "GET /api/scripts/ai/analyze/55?type=general HTTP/1.1" 200 -
2025-05-21 10:20:38,474 - config - INFO - 数据库初始化成功
2025-05-21 10:20:38,482 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 10:20:39,801 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-21 10:20:39,802 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 10:20:39,802 - werkzeug - INFO -  * Restarting with stat
2025-05-21 10:20:40,894 - config - INFO - 数据库初始化成功
2025-05-21 10:20:40,901 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 10:20:40,926 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 10:20:40,929 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 10:22:00,170 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:00] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 10:22:00,172 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:00] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 10:22:00,200 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:00] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 10:22:00,318 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=None, chain_id=None
2025-05-21 10:22:00,320 - config - INFO - 符合条件的执行历史记录总数: 694
2025-05-21 10:22:00,320 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 10:22:00,320 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 10:22:00,320 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21']
2025-05-21 10:22:00,321 - config - INFO - 查询返回 30 条统计数据
2025-05-21 10:22:00,321 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 17, 'success_count': 12, 'failed_count': 2, 'avg_execution_time': 142.64786081685196}
2025-05-21 10:22:00,321 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:00] "GET /api/execution/statistics?period=day&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 10:22:01,258 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:01] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 10:22:02,177 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:02] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 10:22:02,177 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:02] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 10:22:02,666 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:02] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 10:22:02,977 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:02] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 10:22:02,978 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:02] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 10:22:03,237 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:03] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 10:22:03,769 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:03] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-21 10:22:04,337 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:04] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 10:22:04,642 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:04] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 10:22:08,460 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:08] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 10:22:32,263 - config - INFO - 添加脚本链成功: 测试1
2025-05-21 10:22:32,276 - config - INFO - 添加脚本链节点成功: 链ID 12, 脚本ID 47, 序号 1
2025-05-21 10:22:32,287 - config - INFO - 添加脚本链节点成功: 链ID 12, 脚本ID 55, 序号 2
2025-05-21 10:22:32,290 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:32] "POST /api/chains HTTP/1.1" 200 -
2025-05-21 10:22:32,526 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:32] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 10:22:32,637 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:32] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 10:22:34,124 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:34] "GET /api/chains/12 HTTP/1.1" 200 -
2025-05-21 10:22:34,142 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:34] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 10:22:34,450 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:34] "GET /api/scripts/55 HTTP/1.1" 200 -
2025-05-21 10:22:37,691 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 12
2025-05-21 10:22:37,698 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:37] "POST /api/execution/chain/12 HTTP/1.1" 200 -
2025-05-21 10:22:37,704 - config - INFO - 更新执行进度成功: ID 695
2025-05-21 10:22:37,712 - config - INFO - 更新执行进度成功: ID 695
2025-05-21 10:22:37,951 - config - INFO - 传递给Docker容器的参数: {"user_params": {"resource_type": "cpu", "sample_count": "2"}, "system_params": {"__execution_time": "2025-05-21 10:22:37"}, "file_params": {}}...
2025-05-21 10:22:37,957 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 10:22:37,957 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 10:22:37,957 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmp1s84jiq3.json
2025-05-21 10:22:37,975 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:37] "GET /api/execution/history/695 HTTP/1.1" 200 -
2025-05-21 10:22:42,989 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:42] "GET /api/execution/history/695 HTTP/1.1" 200 -
2025-05-21 10:22:47,989 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:47] "GET /api/execution/history/695 HTTP/1.1" 200 -
2025-05-21 10:22:53,299 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:53] "GET /api/execution/history/695 HTTP/1.1" 200 -
2025-05-21 10:22:57,989 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:22:57] "GET /api/execution/history/695 HTTP/1.1" 200 -
2025-05-21 10:23:00,441 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 10:23:00,441 - config - INFO - Docker执行成功，输出长度: 10371
2025-05-21 10:23:00,450 - config - INFO - 更新执行进度成功: ID 695
2025-05-21 10:23:00,687 - config - INFO - 传递给Docker容器的参数: {"user_params": {"resource_type": "cpu", "sample_count": "2", "__prev_output": "Writing to /root/.config/pip/pip.conf\nWriting to /root/.config/pip/pip.conf\nLooking in indexes: https://mirrors.aliyun.com/pypi/simple/\nCollecting flask==2.0.1\n  Downloading https://mirrors.aliyun.com/pypi/packages/54/4f/1b294c1a4ab7b2ad5ca5fc4a9a65a22ef1ac48be126289d97668852d4ab3/Flask-2.0.1-py3-none-any.whl (94 kB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 94.8/94.8 kB 3.6 MB/s eta 0:00:00\nCollecting flas...
2025-05-21 10:23:00,690 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521100135_script_content.sh
2025-05-21 10:23:00,690 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 10:23:00,690 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim bash /app/20250521100135_script_content.sh /params/tmpz0y41pdo.json
2025-05-21 10:23:01,879 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 10:23:01,880 - config - INFO - Docker执行成功，输出长度: 369
2025-05-21 10:23:01,901 - config - INFO - 更新执行历史记录成功: ID 695
2025-05-21 10:23:03,291 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:23:03] "GET /api/execution/history/695 HTTP/1.1" 200 -
2025-05-21 10:24:01,294 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:24:01] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 10:24:01,610 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:24:01] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 10:24:01,614 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:24:01] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 10:29:17,637 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\app.py', reloading
2025-05-21 10:29:17,798 - werkzeug - INFO -  * Restarting with stat
2025-05-21 10:29:19,173 - config - INFO - 数据库初始化成功
2025-05-21 10:29:19,175 - config - INFO - 定时任务调度服务已启动
2025-05-21 10:29:19,184 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 10:29:19,197 - config - INFO - 添加执行历史记录成功: 脚本ID 13, 链ID None
2025-05-21 10:29:19,199 - config - INFO - 定时任务启动成功: 任务ID 2, 历史ID 696
2025-05-21 10:29:19,212 - config - INFO - 更新任务执行信息成功: ID 2, 下次执行时间 2025-05-21 12:00:00
2025-05-21 10:29:19,223 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 4
2025-05-21 10:29:19,224 - config - INFO - 定时任务启动成功: 任务ID 5, 历史ID 697
2025-05-21 10:29:19,226 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 10:29:19,229 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 10:29:19,244 - config - INFO - 更新执行进度成功: ID 696
2025-05-21 10:29:19,260 - config - INFO - 更新任务执行信息成功: ID 5, 下次执行时间 2025-05-21 10:30:00
2025-05-21 10:29:19,271 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 6
2025-05-21 10:29:19,272 - config - INFO - 定时任务启动成功: 任务ID 10, 历史ID 698
2025-05-21 10:29:19,280 - config - INFO - 更新执行进度成功: ID 698
2025-05-21 10:29:19,291 - config - INFO - 更新执行进度成功: ID 697
2025-05-21 10:29:19,301 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:19,301 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:19,308 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:19,308 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:19,315 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 698
2025-05-21 10:29:19,315 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:19,315 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:19,321 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 697
2025-05-21 10:29:19,321 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:19,321 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:19,328 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 697
2025-05-21 10:29:19,329 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:19,329 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:19,336 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 697
2025-05-21 10:29:19,336 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:19,337 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:19,343 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 697
2025-05-21 10:29:19,343 - config - INFO - 更新执行历史记录成功: ID 697
2025-05-21 10:29:19,352 - config - INFO - 更新任务执行信息成功: ID 10, 下次执行时间 2025-05-21 12:00:00
2025-05-21 10:29:19,360 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 5
2025-05-21 10:29:19,361 - config - INFO - 定时任务启动成功: 任务ID 6, 历史ID 699
2025-05-21 10:29:19,381 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 698
2025-05-21 10:29:19,381 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:19,381 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:19,388 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 698
2025-05-21 10:29:19,388 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:19,388 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:19,395 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 698
2025-05-21 10:29:19,395 - config - INFO - 更新执行历史记录成功: ID 698
2025-05-21 10:29:19,412 - config - INFO - 更新任务执行信息成功: ID 6, 下次执行时间 2025-05-21 11:00:00
2025-05-21 10:29:19,423 - config - INFO - 添加执行历史记录成功: 脚本ID 18, 链ID None
2025-05-21 10:29:19,424 - config - INFO - 定时任务启动成功: 任务ID 8, 历史ID 700
2025-05-21 10:29:19,431 - config - INFO - 更新任务执行信息成功: ID 8, 下次执行时间 2025-05-21 11:00:00
2025-05-21 10:29:19,456 - config - INFO - 添加执行历史记录成功: 脚本ID 19, 链ID None
2025-05-21 10:29:19,457 - config - INFO - 定时任务启动成功: 任务ID 9, 历史ID 701
2025-05-21 10:29:19,471 - config - INFO - 更新任务执行信息成功: ID 9, 下次执行时间 2025-05-21 11:00:00
2025-05-21 10:29:19,482 - config - INFO - 添加执行历史记录成功: 脚本ID 14, 链ID None
2025-05-21 10:29:19,482 - config - INFO - 定时任务启动成功: 任务ID 3, 历史ID 702
2025-05-21 10:29:19,488 - config - INFO - 更新执行进度成功: ID 700
2025-05-21 10:29:19,504 - config - INFO - 更新执行进度成功: ID 701
2025-05-21 10:29:19,519 - config - INFO - 更新执行进度成功: ID 702
2025-05-21 10:29:19,535 - config - INFO - 传递给Docker容器的参数: {"user_params": {"file_path": "scheduled_value_33", "size_kb": 43, "content_type": "scheduled_value_98"}, "system_params": {"__execution_time": "2025-05-21 10:29:19"}, "file_params": {}}...
2025-05-21 10:29:19,535 - config - INFO - 更新任务执行信息成功: ID 3, 下次执行时间 2025-05-21 12:00:00
2025-05-21 10:29:19,539 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250515233706_文件生成器.py
2025-05-21 10:29:19,540 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 10:29:19,541 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250515233706_文件生成器.py /params/tmp83l0rf_7.json
2025-05-21 10:29:19,545 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 3
2025-05-21 10:29:19,546 - config - INFO - 定时任务启动成功: 任务ID 4, 历史ID 703
2025-05-21 10:29:19,554 - config - INFO - 更新执行进度成功: ID 703
2025-05-21 10:29:19,565 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:19,565 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:19,572 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 703
2025-05-21 10:29:19,573 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:19,573 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:19,594 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 703
2025-05-21 10:29:19,595 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:19,595 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:19,602 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 703
2025-05-21 10:29:19,602 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:19,602 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:19,608 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 703
2025-05-21 10:29:19,609 - config - INFO - 更新执行历史记录成功: ID 703
2025-05-21 10:29:19,626 - config - INFO - 更新执行进度成功: ID 699
2025-05-21 10:29:19,637 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:19,637 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:19,641 - config - INFO - 更新任务执行信息成功: ID 4, 下次执行时间 2025-05-21 12:00:00
2025-05-21 10:29:19,649 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 7
2025-05-21 10:29:19,650 - config - INFO - 定时任务启动成功: 任务ID 11, 历史ID 704
2025-05-21 10:29:19,656 - config - INFO - 更新执行进度成功: ID 704
2025-05-21 10:29:19,664 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:19,664 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:19,669 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 704
2025-05-21 10:29:19,670 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:19,670 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:19,675 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 704
2025-05-21 10:29:19,676 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:19,676 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:19,681 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 704
2025-05-21 10:29:19,682 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:19,682 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:19,688 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 704
2025-05-21 10:29:19,688 - config - INFO - 更新执行历史记录成功: ID 704
2025-05-21 10:29:19,701 - config - INFO - 更新任务执行信息成功: ID 11, 下次执行时间 2025-05-21 12:00:00
2025-05-21 10:29:19,710 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 8
2025-05-21 10:29:19,710 - config - INFO - 定时任务启动成功: 任务ID 12, 历史ID 705
2025-05-21 10:29:19,716 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 699
2025-05-21 10:29:19,717 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:19,717 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:19,722 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 699
2025-05-21 10:29:19,722 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:19,722 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:19,729 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 699
2025-05-21 10:29:19,729 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:19,730 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:19,736 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 699
2025-05-21 10:29:19,736 - config - INFO - 更新执行历史记录成功: ID 699
2025-05-21 10:29:19,747 - config - INFO - 更新任务执行信息成功: ID 12, 下次执行时间 2025-05-21 12:00:00
2025-05-21 10:29:19,756 - config - INFO - 添加执行历史记录成功: 脚本ID 17, 链ID None
2025-05-21 10:29:19,757 - config - INFO - 定时任务启动成功: 任务ID 7, 历史ID 706
2025-05-21 10:29:19,775 - config - INFO - 更新执行进度成功: ID 705
2025-05-21 10:29:19,782 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:19,783 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:19,788 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 705
2025-05-21 10:29:19,789 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:19,789 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:19,795 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 705
2025-05-21 10:29:19,795 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:19,795 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:19,800 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 705
2025-05-21 10:29:19,800 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:19,801 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:19,806 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 705
2025-05-21 10:29:19,806 - config - INFO - 更新执行历史记录成功: ID 705
2025-05-21 10:29:19,823 - config - INFO - 传递给Docker容器的参数: {"user_params": {"file_path": "scheduled_value_73", "pattern": "scheduled_value_91", "time_window": 39}, "system_params": {"__execution_time": "2025-05-21 10:29:19"}, "file_params": {}}...
2025-05-21 10:29:19,824 - config - INFO - 更新任务执行信息成功: ID 7, 下次执行时间 2025-05-22 00:00:00
2025-05-21 10:29:19,826 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_日志分析器.py
2025-05-21 10:29:19,826 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 10:29:19,826 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250516001959_日志分析器.py /params/tmp4f8o73xj.json
2025-05-21 10:29:19,832 - config - INFO - 添加执行历史记录成功: 脚本ID 12, 链ID None
2025-05-21 10:29:19,833 - config - INFO - 定时任务启动成功: 任务ID 1, 历史ID 707
2025-05-21 10:29:19,842 - config - INFO - 传递给Docker容器的参数: {"user_params": {"file_path": "scheduled_value_49", "size_kb": 87, "content_type": "scheduled_value_77"}, "system_params": {"__execution_time": "2025-05-21 10:29:19"}, "file_params": {}}...
2025-05-21 10:29:19,845 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_文件生成器.py
2025-05-21 10:29:19,845 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 10:29:19,845 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250516001959_文件生成器.py /params/tmpcrlkedak.json
2025-05-21 10:29:19,855 - config - INFO - 更新任务执行信息成功: ID 1, 下次执行时间 2025-05-22 01:00:00
2025-05-21 10:29:19,860 - config - INFO - 传递给Docker容器的参数: {"user_params": {"file_path": "scheduled_value_28", "pattern": "scheduled_value_69", "time_window": 63}, "system_params": {"__execution_time": "2025-05-21 10:29:19"}, "file_params": {}}...
2025-05-21 10:29:19,863 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250515233707_日志分析器.py
2025-05-21 10:29:19,863 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 10:29:19,863 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250515233707_日志分析器.py /params/tmp49i_puxn.json
2025-05-21 10:29:19,871 - config - INFO - 更新执行进度成功: ID 706
2025-05-21 10:29:19,885 - config - INFO - 更新执行进度成功: ID 707
2025-05-21 10:29:20,273 - config - INFO - 传递给Docker容器的参数: {"user_params": {"filter": "scheduled_value_54"}, "system_params": {"__execution_time": "2025-05-21 10:29:20"}, "file_params": {}}...
2025-05-21 10:29:20,276 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250515233706_系统信息获取.py
2025-05-21 10:29:20,276 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 10:29:20,276 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250515233706_系统信息获取.py /params/tmp5ldxe376.json
2025-05-21 10:29:20,283 - config - INFO - 传递给Docker容器的参数: {"user_params": {"filter": "scheduled_value_96"}, "system_params": {"__execution_time": "2025-05-21 10:29:20"}, "file_params": {}}...
2025-05-21 10:29:20,286 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_系统信息获取.py
2025-05-21 10:29:20,287 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 10:29:20,287 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250516001959_系统信息获取.py /params/tmpqt1u0icy.json
2025-05-21 10:29:24,565 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:29:24] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 10:29:24,566 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:29:24] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 10:29:25,084 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:29:25] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 10:29:25,094 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:29:25] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 10:29:25,402 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:29:25] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 10:29:35,312 - config - INFO - Docker执行完成，返回码: 1
2025-05-21 10:29:35,312 - config - ERROR - Docker执行失败，错误信息:   WARNING: The script tqdm is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script dotenv is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script distro is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script normalizer is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script flask is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script httpx is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script openai is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
错误: 必须提供日志文件路径参数 'file_path'

2025-05-21 10:29:35,329 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:35,329 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:35,337 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 701
2025-05-21 10:29:35,337 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:35,337 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:35,345 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 701
2025-05-21 10:29:35,346 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:35,346 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:35,355 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 701
2025-05-21 10:29:35,355 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:35,355 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:35,368 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 701
2025-05-21 10:29:35,368 - config - INFO - 更新执行历史记录成功: ID 701
2025-05-21 10:29:36,379 - config - INFO - Docker执行完成，返回码: 1
2025-05-21 10:29:36,379 - config - ERROR - Docker执行失败，错误信息:   WARNING: The script tqdm is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script dotenv is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script distro is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script normalizer is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script flask is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script httpx is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script openai is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
错误: 必须提供日志文件路径参数 'file_path'

2025-05-21 10:29:36,391 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:36,391 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:36,397 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 702
2025-05-21 10:29:36,398 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:36,398 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:36,405 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 702
2025-05-21 10:29:36,406 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:36,406 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:36,413 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 702
2025-05-21 10:29:36,413 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:29:36,414 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:29:36,420 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 702
2025-05-21 10:29:36,420 - config - INFO - 更新执行历史记录成功: ID 702
2025-05-21 10:29:37,504 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 10:29:37,504 - config - INFO - Docker执行成功，输出长度: 9252
2025-05-21 10:29:37,517 - config - INFO - 更新执行历史记录成功: ID 700
2025-05-21 10:29:37,519 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 10:29:37,519 - config - INFO - Docker执行成功，输出长度: 9253
2025-05-21 10:29:37,532 - config - INFO - 更新执行历史记录成功: ID 696
2025-05-21 10:29:38,279 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 10:29:38,279 - config - INFO - Docker执行成功，输出长度: 9584
2025-05-21 10:29:38,293 - config - INFO - 更新执行历史记录成功: ID 707
2025-05-21 10:29:38,522 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 10:29:38,523 - config - INFO - Docker执行成功，输出长度: 9583
2025-05-21 10:29:38,537 - config - INFO - 更新执行历史记录成功: ID 706
2025-05-21 10:30:19,897 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 4
2025-05-21 10:30:19,897 - config - INFO - 定时任务启动成功: 任务ID 5, 历史ID 708
2025-05-21 10:30:19,904 - config - INFO - 更新执行进度成功: ID 708
2025-05-21 10:30:19,913 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:30:19,913 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:30:19,919 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 708
2025-05-21 10:30:19,920 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:30:19,920 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:30:19,928 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 708
2025-05-21 10:30:19,928 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:30:19,928 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:30:19,935 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 708
2025-05-21 10:30:19,935 - config - WARNING - 邮件服务初始化失败: 缺少必要的SMTP配置
2025-05-21 10:30:19,935 - config - ERROR - 发送邮件失败: 缺少SMTP配置
2025-05-21 10:30:19,942 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 708
2025-05-21 10:30:19,942 - config - INFO - 更新执行历史记录成功: ID 708
2025-05-21 10:30:19,960 - config - INFO - 更新任务执行信息成功: ID 5, 下次执行时间 2025-05-21 11:00:00
2025-05-21 10:30:26,790 - config - INFO - 添加定时任务成功: 获取任务执行状态
2025-05-21 10:30:26,792 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:30:26] "POST /api/schedule HTTP/1.1" 200 -
2025-05-21 10:30:27,041 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:30:27] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 10:31:18,146 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:31:18] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 10:31:18,288 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:31:18] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 10:31:18,312 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:31:18] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 10:34:13,879 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:34:13] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 10:35:35,462 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:35:35] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 10:35:35,707 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:35:35] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 10:35:35,779 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:35:35] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 10:38:29,219 - config - INFO - 添加定时任务成功: 测试
2025-05-21 10:38:29,221 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:38:29] "POST /api/schedule HTTP/1.1" 200 -
2025-05-21 10:38:29,477 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:38:29] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 10:38:36,338 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:38:36] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 10:38:36,937 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:38:36] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-21 10:38:37,759 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:38:37] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 10:38:40,397 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:38:40] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 10:38:41,005 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:38:41] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 10:38:42,036 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:38:42] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 10:38:42,037 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:38:42] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 10:38:42,460 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:38:42] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 10:38:42,461 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:38:42] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 10:38:42,463 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:38:42] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 10:43:14,671 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\services\\email_service.py', reloading
2025-05-21 10:43:14,796 - werkzeug - INFO -  * Restarting with stat
2025-05-21 10:43:16,313 - config - INFO - 数据库初始化成功
2025-05-21 10:43:16,315 - config - INFO - 定时任务调度服务已启动
2025-05-21 10:43:16,324 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 10:43:16,349 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 10:43:16,352 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 10:43:51,737 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\models\\execution.py', reloading
2025-05-21 10:43:51,874 - werkzeug - INFO -  * Restarting with stat
2025-05-21 10:43:53,262 - config - INFO - 数据库初始化成功
2025-05-21 10:43:53,264 - config - INFO - 定时任务调度服务已启动
2025-05-21 10:43:53,273 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 10:43:53,309 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 10:43:53,313 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 10:52:02,177 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\services\\email_service.py', reloading
2025-05-21 10:52:02,275 - werkzeug - INFO -  * Restarting with stat
2025-05-21 10:52:03,404 - config - INFO - 数据库初始化成功
2025-05-21 10:52:03,405 - config - INFO - 定时任务调度服务已启动
2025-05-21 10:52:03,412 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 10:52:03,434 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 10:52:03,437 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 10:53:21,079 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\services\\email_service.py', reloading
2025-05-21 10:53:21,204 - werkzeug - INFO -  * Restarting with stat
2025-05-21 10:53:22,280 - config - INFO - 数据库初始化成功
2025-05-21 10:53:22,281 - config - INFO - 定时任务调度服务已启动
2025-05-21 10:53:22,288 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 10:53:22,312 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 10:53:22,315 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 10:57:03,288 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:57:03] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 10:57:03,289 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:57:03] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 10:57:03,843 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:57:03] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 10:57:05,769 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:57:05] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 10:57:06,704 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:57:06] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 10:57:07,504 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:57:07] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 10:57:27,532 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:57:27] "GET /api/scripts/template?language=python&has_params=false&output_mode=json HTTP/1.1" 200 -
2025-05-21 10:57:28,984 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:57:28] "GET /api/scripts/template?language=python&has_params=false&output_mode=none HTTP/1.1" 200 -
2025-05-21 10:57:30,983 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:57:30] "GET /api/scripts/template?language=python&has_params=false&output_mode=none HTTP/1.1" 200 -
2025-05-21 10:58:13,169 - config - ERROR - 添加脚本版本失败: database is locked
2025-05-21 10:58:13,170 - config - WARNING - 添加脚本成功，但创建初始版本失败: 脚本ID 56
2025-05-21 10:58:13,175 - config - INFO - 添加脚本成功: 错误测试脚本
2025-05-21 10:58:13,177 - config - ERROR - 保存脚本参数模式失败: no such table: script_parameters_schema
2025-05-21 10:58:13,184 - config - INFO - 添加脚本版本成功: 脚本ID 56, 版本 1.0.0
2025-05-21 10:58:13,184 - config - INFO - 添加脚本初始版本成功: 脚本ID 56, 版本ID 43
2025-05-21 10:58:13,189 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:58:13] "POST /api/scripts/with-file HTTP/1.1" 200 -
2025-05-21 10:58:13,514 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:58:13] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 10:58:15,790 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:58:15] "GET /api/scripts/56 HTTP/1.1" 200 -
2025-05-21 10:58:15,811 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=56, chain_id=None
2025-05-21 10:58:15,813 - config - INFO - 符合条件的执行历史记录总数: 0
2025-05-21 10:58:15,814 - config - WARNING - 没有符合条件的执行历史记录
2025-05-21 10:58:15,814 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:58:15] "GET /api/execution/statistics?period=day&script_id=56&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 10:58:18,092 - config - INFO - 添加执行历史记录成功: 脚本ID 56, 链ID None
2025-05-21 10:58:18,093 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:58:18] "POST /api/execution/script/56 HTTP/1.1" 200 -
2025-05-21 10:58:18,104 - config - INFO - 更新执行进度成功: ID 709
2025-05-21 10:58:18,129 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:58:18] "GET /api/execution/history/709 HTTP/1.1" 200 -
2025-05-21 10:58:18,351 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 10:58:18"}, "file_params": {}}...
2025-05-21 10:58:18,354 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521105807_test_alert_email.py
2025-05-21 10:58:18,355 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 10:58:18,355 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521105807_test_alert_email.py /params/tmpk_cdi95y.json
2025-05-21 10:58:18,450 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:58:18] "GET /api/execution/history?script_id=56&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 10:58:23,142 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:58:23] "GET /api/execution/history/709 HTTP/1.1" 200 -
2025-05-21 10:58:28,451 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:58:28] "GET /api/execution/history/709 HTTP/1.1" 200 -
2025-05-21 10:58:32,500 - config - INFO - Docker执行完成，返回码: 1
2025-05-21 10:58:32,501 - config - ERROR - Docker执行失败，错误信息:   WARNING: The script tqdm is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script dotenv is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script distro is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script normalizer is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script flask is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script httpx is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script openai is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
Traceback (most recent call last):
  File "/app/20250521105807_test_alert_email.py", line 14, in <module>
    from backend.models.execution import ExecutionHistory, AlertConfig, AlertHandler
ModuleNotFoundError: No module named 'backend'

2025-05-21 10:58:33,142 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:58:33] "GET /api/execution/history/709 HTTP/1.1" 200 -
2025-05-21 10:58:52,686 - config - ERROR - 发送邮件失败: Connection unexpectedly closed
2025-05-21 10:58:52,694 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 709
2025-05-21 10:59:01,811 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:59:01] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-21 10:59:03,299 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:59:03] "GET /api/alert/config/4 HTTP/1.1" 200 -
2025-05-21 10:59:03,300 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 10:59:03] "GET /api/alert/history?limit=20&offset=0&config_id=4 HTTP/1.1" 200 -
2025-05-21 10:59:12,854 - config - ERROR - 发送邮件失败: Connection unexpectedly closed
2025-05-21 10:59:12,863 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 709
2025-05-21 10:59:33,017 - config - ERROR - 发送邮件失败: Connection unexpectedly closed
2025-05-21 10:59:33,022 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 709
2025-05-21 10:59:53,179 - config - ERROR - 发送邮件失败: Connection unexpectedly closed
2025-05-21 10:59:53,186 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 709
2025-05-21 10:59:53,186 - config - INFO - 更新执行历史记录成功: ID 709
2025-05-21 11:00:22,453 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 4
2025-05-21 11:00:22,454 - config - INFO - 定时任务启动成功: 任务ID 5, 历史ID 710
2025-05-21 11:00:22,470 - config - INFO - 更新任务执行信息成功: ID 5, 下次执行时间 2025-05-21 11:30:00
2025-05-21 11:00:22,477 - config - INFO - 更新执行进度成功: ID 710
2025-05-21 11:00:22,485 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 5
2025-05-21 11:00:22,485 - config - INFO - 定时任务启动成功: 任务ID 6, 历史ID 711
2025-05-21 11:00:22,502 - config - INFO - 更新执行进度成功: ID 711
2025-05-21 11:00:22,520 - config - INFO - 更新任务执行信息成功: ID 6, 下次执行时间 2025-05-21 12:00:00
2025-05-21 11:00:22,530 - config - INFO - 添加执行历史记录成功: 脚本ID 18, 链ID None
2025-05-21 11:00:22,531 - config - INFO - 定时任务启动成功: 任务ID 8, 历史ID 712
2025-05-21 11:00:22,538 - config - INFO - 更新任务执行信息成功: ID 8, 下次执行时间 2025-05-21 12:00:00
2025-05-21 11:00:22,548 - config - INFO - 更新执行进度成功: ID 712
2025-05-21 11:00:22,557 - config - INFO - 添加执行历史记录成功: 脚本ID 19, 链ID None
2025-05-21 11:00:22,558 - config - INFO - 定时任务启动成功: 任务ID 9, 历史ID 713
2025-05-21 11:00:22,566 - config - INFO - 更新任务执行信息成功: ID 9, 下次执行时间 2025-05-21 12:00:00
2025-05-21 11:00:22,589 - config - INFO - 更新执行进度成功: ID 713
2025-05-21 11:00:22,599 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 11:00:22,599 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 714
2025-05-21 11:00:22,619 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 11:00:23
2025-05-21 11:00:22,635 - config - INFO - 更新执行进度成功: ID 714
2025-05-21 11:00:22,852 - config - INFO - 传递给Docker容器的参数: {"user_params": {"file_path": "scheduled_value_49", "size_kb": 87, "content_type": "scheduled_value_77"}, "system_params": {"__execution_time": "2025-05-21 11:00:22"}, "file_params": {}}...
2025-05-21 11:00:22,855 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_文件生成器.py
2025-05-21 11:00:22,856 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 11:00:22,856 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250516001959_文件生成器.py /params/tmpj4y_y47w.json
2025-05-21 11:00:22,869 - config - INFO - 传递给Docker容器的参数: {"user_params": {"file_path": "scheduled_value_73", "pattern": "scheduled_value_91", "time_window": 39}, "system_params": {"__execution_time": "2025-05-21 11:00:22"}, "file_params": {}}...
2025-05-21 11:00:22,873 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_日志分析器.py
2025-05-21 11:00:22,874 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 11:00:22,874 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250516001959_日志分析器.py /params/tmp2q4zpn5e.json
2025-05-21 11:00:22,902 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 11:00:22"}, "file_params": {}}...
2025-05-21 11:00:22,906 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 11:00:22,907 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 11:00:22,907 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmpczxrkgei.json
2025-05-21 11:00:37,344 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 11:00:37,344 - config - INFO - Docker执行成功，输出长度: 9252
2025-05-21 11:00:37,351 - config - INFO - 更新执行历史记录成功: ID 712
2025-05-21 11:00:37,362 - config - INFO - Docker执行完成，返回码: 1
2025-05-21 11:00:37,362 - config - ERROR - Docker执行失败，错误信息:   WARNING: The script tqdm is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script dotenv is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script distro is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script normalizer is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script flask is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script httpx is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script openai is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
错误: 必须提供日志文件路径参数 'file_path'

2025-05-21 11:00:37,660 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 11:00:37,660 - config - INFO - Docker执行成功，输出长度: 9940
2025-05-21 11:00:37,667 - config - INFO - 更新执行历史记录成功: ID 714
2025-05-21 11:00:42,656 - config - ERROR - 发送邮件失败: Connection unexpectedly closed
2025-05-21 11:00:42,659 - config - ERROR - 发送邮件失败: Connection unexpectedly closed
2025-05-21 11:00:42,670 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 711
2025-05-21 11:00:42,686 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 710
2025-05-21 11:00:52,640 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 11:00:52,640 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 715
2025-05-21 11:00:52,657 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 11:00:53
2025-05-21 11:00:52,672 - config - INFO - 更新执行进度成功: ID 715
2025-05-21 11:00:52,908 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 11:00:52"}, "file_params": {}}...
2025-05-21 11:00:52,912 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 11:00:52,912 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 11:00:52,912 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmpv3muklc7.json
2025-05-21 11:00:57,539 - config - ERROR - 发送邮件失败: Connection unexpectedly closed
2025-05-21 11:00:57,543 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 713
2025-05-21 11:01:02,843 - config - ERROR - 发送邮件失败: Connection unexpectedly closed
2025-05-21 11:01:02,846 - config - ERROR - 发送邮件失败: Connection unexpectedly closed
2025-05-21 11:01:02,850 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 710
2025-05-21 11:01:02,854 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 711
2025-05-21 11:01:06,264 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 11:01:06,264 - config - INFO - Docker执行成功，输出长度: 9938
2025-05-21 11:01:06,271 - config - INFO - 更新执行历史记录成功: ID 715
2025-05-21 11:01:17,701 - config - ERROR - 发送邮件失败: Connection unexpectedly closed
2025-05-21 11:01:17,705 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 713
2025-05-21 11:01:22,674 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 11:01:22,675 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 716
2025-05-21 11:01:22,696 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 12:00:00
2025-05-21 11:01:22,713 - config - INFO - 更新执行进度成功: ID 716
2025-05-21 11:01:22,949 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 11:01:22"}, "file_params": {}}...
2025-05-21 11:01:22,951 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 11:01:22,951 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 11:01:22,951 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmprnd3eqkb.json
2025-05-21 11:01:22,996 - config - ERROR - 发送邮件失败: Connection unexpectedly closed
2025-05-21 11:01:22,996 - config - ERROR - 发送邮件失败: Connection unexpectedly closed
2025-05-21 11:01:23,001 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 710
2025-05-21 11:01:23,018 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 711
2025-05-21 11:01:36,765 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 11:01:36,765 - config - INFO - Docker执行成功，输出长度: 9935
2025-05-21 11:01:36,779 - config - INFO - 更新执行历史记录成功: ID 716
2025-05-21 11:01:37,854 - config - ERROR - 发送邮件失败: Connection unexpectedly closed
2025-05-21 11:01:37,874 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 713
2025-05-21 11:01:43,168 - config - ERROR - 发送邮件失败: Connection unexpectedly closed
2025-05-21 11:01:43,175 - config - ERROR - 发送邮件失败: Connection unexpectedly closed
2025-05-21 11:01:43,179 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 710
2025-05-21 11:01:43,179 - config - INFO - 更新执行历史记录成功: ID 710
2025-05-21 11:01:43,189 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 711
2025-05-21 11:01:43,189 - config - INFO - 更新执行历史记录成功: ID 711
2025-05-21 11:01:58,017 - config - ERROR - 发送邮件失败: Connection unexpectedly closed
2025-05-21 11:01:58,023 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 713
2025-05-21 11:01:58,024 - config - INFO - 更新执行历史记录成功: ID 713
2025-05-21 11:02:12,964 - werkzeug - INFO -  * Detected change in 'C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\backend\\services\\email_service.py', reloading
2025-05-21 11:02:13,200 - werkzeug - INFO -  * Restarting with stat
2025-05-21 11:02:48,261 - backend.config - ERROR - 发送邮件失败: Connection unexpectedly closed
2025-05-21 11:04:53,609 - backend.config - ERROR - 发送邮件失败: Connection unexpectedly closed
2025-05-21 11:10:10,927 - backend.config - ERROR - 发送邮件失败: Connection unexpectedly closed
2025-05-21 11:17:41,795 - config - INFO - 数据库初始化成功
2025-05-21 11:17:41,796 - config - INFO - 定时任务调度服务已启动
2025-05-21 11:17:41,804 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 11:17:43,130 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-21 11:17:43,130 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 11:17:43,131 - werkzeug - INFO -  * Restarting with stat
2025-05-21 11:17:44,180 - config - INFO - 数据库初始化成功
2025-05-21 11:17:44,181 - config - INFO - 定时任务调度服务已启动
2025-05-21 11:17:44,189 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 11:17:44,211 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 11:17:44,215 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 11:18:02,640 - config - INFO - 数据库初始化成功
2025-05-21 11:18:02,641 - config - INFO - 定时任务调度服务已启动
2025-05-21 11:18:02,648 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 11:18:03,947 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.0.6:5000
2025-05-21 11:18:03,947 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 11:18:03,948 - werkzeug - INFO -  * Restarting with stat
2025-05-21 11:18:04,977 - config - INFO - 数据库初始化成功
2025-05-21 11:18:04,978 - config - INFO - 定时任务调度服务已启动
2025-05-21 11:18:04,985 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 11:18:05,008 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 11:18:05,011 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 11:18:16,272 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:16] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 11:18:16,283 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:16] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 11:18:16,331 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:16] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 11:18:16,420 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=None, chain_id=None
2025-05-21 11:18:16,421 - config - INFO - 符合条件的执行历史记录总数: 716
2025-05-21 11:18:16,421 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 11:18:16,421 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 11:18:16,421 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21']
2025-05-21 11:18:16,422 - config - INFO - 查询返回 30 条统计数据
2025-05-21 11:18:16,422 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 17, 'success_count': 12, 'failed_count': 2, 'avg_execution_time': 142.64786081685196}
2025-05-21 11:18:16,422 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:16] "GET /api/execution/statistics?period=day&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 11:18:19,110 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:19] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 11:18:19,111 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:19] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 11:18:20,264 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:20] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 11:18:20,265 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:20] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 11:18:20,265 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:20] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 11:18:20,775 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:20] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 11:18:21,294 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:21] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-21 11:18:21,812 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:21] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 11:18:22,188 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:22] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 11:18:22,507 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:22] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 11:18:22,508 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:22] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 11:18:22,852 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:22] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 11:18:24,136 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:24] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-21 11:18:27,391 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:27] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 11:18:28,966 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:28] "GET /api/scripts/56 HTTP/1.1" 200 -
2025-05-21 11:18:28,992 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=56, chain_id=None
2025-05-21 11:18:28,993 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 11:18:28,994 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 11:18:28,994 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 11:18:28,994 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 56]
2025-05-21 11:18:28,994 - config - INFO - 查询返回 0 条统计数据
2025-05-21 11:18:28,994 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 11:18:28,994 - config - INFO - 备用查询参数: [56, '2025-04-21', '2025-05-21']
2025-05-21 11:18:28,995 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 11:18:28,995 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 11:18:28,995 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:28] "GET /api/execution/statistics?period=day&script_id=56&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 11:18:31,150 - config - INFO - 添加执行历史记录成功: 脚本ID 56, 链ID None
2025-05-21 11:18:31,151 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:31] "POST /api/execution/script/56 HTTP/1.1" 200 -
2025-05-21 11:18:31,158 - config - INFO - 更新执行进度成功: ID 717
2025-05-21 11:18:31,187 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:31] "GET /api/execution/history/717 HTTP/1.1" 200 -
2025-05-21 11:18:31,387 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 11:18:31"}, "file_params": {}}...
2025-05-21 11:18:31,389 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521105807_test_alert_email.py
2025-05-21 11:18:31,389 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 11:18:31,389 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521105807_test_alert_email.py /params/tmp1tv7m_8l.json
2025-05-21 11:18:31,506 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:31] "GET /api/execution/history?script_id=56&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 11:18:37,008 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:37] "GET /api/execution/history/717 HTTP/1.1" 200 -
2025-05-21 11:18:42,000 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:42] "GET /api/execution/history/717 HTTP/1.1" 200 -
2025-05-21 11:18:44,480 - config - INFO - Docker执行完成，返回码: 1
2025-05-21 11:18:44,480 - config - ERROR - Docker执行失败，错误信息:   WARNING: The script tqdm is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script dotenv is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script distro is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script normalizer is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script flask is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script httpx is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script openai is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
Traceback (most recent call last):
  File "/app/20250521105807_test_alert_email.py", line 14, in <module>
    from backend.models.execution import ExecutionHistory, AlertConfig, AlertHandler
ModuleNotFoundError: No module named 'backend'

2025-05-21 11:18:47,302 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:18:47] "GET /api/execution/history/717 HTTP/1.1" 200 -
2025-05-21 11:18:48,564 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com
2025-05-21 11:18:48,570 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 717
2025-05-21 11:18:50,689 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 11:18:50,695 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 717
2025-05-21 11:18:52,603 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com
2025-05-21 11:18:52,610 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 717
2025-05-21 11:18:54,315 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 11:18:54,322 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 717
2025-05-21 11:18:54,322 - config - INFO - 更新执行历史记录成功: ID 717
2025-05-21 11:23:21,719 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:23:21] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 11:23:22,037 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=None, chain_id=None
2025-05-21 11:23:22,038 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:23:22] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 11:23:22,039 - config - INFO - 符合条件的执行历史记录总数: 717
2025-05-21 11:23:22,039 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 11:23:22,039 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 11:23:22,039 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21']
2025-05-21 11:23:22,041 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:23:22] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 11:23:22,042 - config - INFO - 查询返回 30 条统计数据
2025-05-21 11:23:22,042 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 17, 'success_count': 12, 'failed_count': 2, 'avg_execution_time': 142.64786081685196}
2025-05-21 11:23:22,043 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:23:22] "GET /api/execution/statistics?period=day&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 11:24:50,198 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:24:50] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 11:26:38,494 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:26:38] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 11:26:38,807 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:26:38] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-21 11:26:39,816 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:26:39] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 11:26:40,974 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:26:40] "GET /api/execution/history?script_id=56&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 11:26:42,259 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:26:42] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 11:26:43,620 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=56, chain_id=None
2025-05-21 11:26:43,623 - config - INFO - 符合条件的执行历史记录总数: 2
2025-05-21 11:26:43,623 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 11:26:43,623 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 11:26:43,623 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 56]
2025-05-21 11:26:43,623 - config - INFO - 查询返回 0 条统计数据
2025-05-21 11:26:43,624 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 11:26:43,624 - config - INFO - 备用查询参数: [56, '2025-04-21', '2025-05-21']
2025-05-21 11:26:43,624 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 11:26:43,624 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 11:26:43,625 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:26:43] "GET /api/execution/statistics?period=day&script_id=56&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 11:26:43,626 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:26:43] "GET /api/scripts/56 HTTP/1.1" 200 -
2025-05-21 11:26:45,491 - config - INFO - 添加执行历史记录成功: 脚本ID 56, 链ID None
2025-05-21 11:26:45,492 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:26:45] "POST /api/execution/script/56 HTTP/1.1" 200 -
2025-05-21 11:26:45,502 - config - INFO - 更新执行进度成功: ID 718
2025-05-21 11:26:45,760 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 11:26:45"}, "file_params": {}}...
2025-05-21 11:26:45,764 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521105807_test_alert_email.py
2025-05-21 11:26:45,764 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 11:26:45,764 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521105807_test_alert_email.py /params/tmpxwgdj665.json
2025-05-21 11:26:45,829 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:26:45] "GET /api/execution/history/718 HTTP/1.1" 200 -
2025-05-21 11:26:45,862 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:26:45] "GET /api/execution/history?script_id=56&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 11:26:51,003 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:26:51] "GET /api/execution/history/718 HTTP/1.1" 200 -
2025-05-21 11:26:56,299 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:26:56] "GET /api/execution/history/718 HTTP/1.1" 200 -
2025-05-21 11:26:58,314 - config - INFO - Docker执行完成，返回码: 1
2025-05-21 11:26:58,314 - config - ERROR - Docker执行失败，错误信息:   WARNING: The script tqdm is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script dotenv is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script distro is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script normalizer is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script flask is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script httpx is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script openai is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
Traceback (most recent call last):
  File "/app/20250521105807_test_alert_email.py", line 14, in <module>
    from backend.models.execution import ExecutionHistory, AlertConfig, AlertHandler
ModuleNotFoundError: No module named 'backend'

2025-05-21 11:27:01,002 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:27:01] "GET /api/execution/history/718 HTTP/1.1" 200 -
2025-05-21 11:27:02,376 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com
2025-05-21 11:27:02,383 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 718
2025-05-21 11:27:04,173 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 11:27:04,180 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 718
2025-05-21 11:27:06,137 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com
2025-05-21 11:27:06,143 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 718
2025-05-21 11:27:08,326 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 11:27:08,332 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 718
2025-05-21 11:27:08,332 - config - INFO - 更新执行历史记录成功: ID 718
2025-05-21 11:28:34,014 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:28:34] "GET /api/scripts/56 HTTP/1.1" 200 -
2025-05-21 11:28:34,022 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=56, chain_id=None
2025-05-21 11:28:34,024 - config - INFO - 符合条件的执行历史记录总数: 3
2025-05-21 11:28:34,025 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 11:28:34,025 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 11:28:34,025 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 56]
2025-05-21 11:28:34,026 - config - INFO - 查询返回 0 条统计数据
2025-05-21 11:28:34,026 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 11:28:34,026 - config - INFO - 备用查询参数: [56, '2025-04-21', '2025-05-21']
2025-05-21 11:28:34,026 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 11:28:34,026 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 11:28:34,027 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:28:34] "GET /api/execution/statistics?period=day&script_id=56&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 11:29:40,593 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:29:40] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 11:29:40,603 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=None, chain_id=None
2025-05-21 11:29:40,604 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:29:40] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 11:29:40,608 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:29:40] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 11:29:40,619 - config - INFO - 符合条件的执行历史记录总数: 718
2025-05-21 11:29:40,619 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 11:29:40,619 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 11:29:40,619 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21']
2025-05-21 11:29:40,621 - config - INFO - 查询返回 30 条统计数据
2025-05-21 11:29:40,621 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 17, 'success_count': 12, 'failed_count': 2, 'avg_execution_time': 142.64786081685196}
2025-05-21 11:29:40,621 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:29:40] "GET /api/execution/statistics?period=day&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 11:30:02,926 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 4
2025-05-21 11:30:02,927 - config - INFO - 定时任务启动成功: 任务ID 5, 历史ID 719
2025-05-21 11:30:02,934 - config - INFO - 更新执行进度成功: ID 719
2025-05-21 11:30:02,950 - config - INFO - 更新任务执行信息成功: ID 5, 下次执行时间 2025-05-21 12:00:00
2025-05-21 11:30:05,765 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 11:30:05,773 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 719
2025-05-21 11:30:08,597 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 11:30:08,605 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 719
2025-05-21 11:30:10,821 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 11:30:10,829 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 719
2025-05-21 11:30:12,641 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 11:30:12,649 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 719
2025-05-21 11:30:12,650 - config - INFO - 更新执行历史记录成功: ID 719
2025-05-21 11:43:33,974 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:43:33] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 11:54:43,525 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:54:43] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 11:54:43,757 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:54:43] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 11:54:43,844 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:54:43] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 11:54:43,850 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:54:43] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 11:56:46,609 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=None, chain_id=None
2025-05-21 11:56:46,611 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:56:46] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 11:56:46,611 - config - INFO - 符合条件的执行历史记录总数: 719
2025-05-21 11:56:46,611 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 11:56:46,611 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 11:56:46,612 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21']
2025-05-21 11:56:46,613 - config - INFO - 查询返回 30 条统计数据
2025-05-21 11:56:46,613 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 17, 'success_count': 12, 'failed_count': 2, 'avg_execution_time': 142.64786081685196}
2025-05-21 11:56:46,614 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:56:46] "GET /api/execution/statistics?period=day&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 11:56:46,662 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:56:46] "GET /api/execution/history?script_id=56&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 11:56:46,663 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:56:46] "GET /api/execution/history?chain_id=12&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 11:58:22,768 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 11:58:22] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-21 12:00:03,632 - config - INFO - 添加执行历史记录成功: 脚本ID 13, 链ID None
2025-05-21 12:00:03,633 - config - INFO - 定时任务启动成功: 任务ID 2, 历史ID 720
2025-05-21 12:00:03,637 - config - INFO - 更新任务执行信息成功: ID 2, 下次执行时间 2025-05-21 18:00:00
2025-05-21 12:00:03,642 - config - INFO - 添加执行历史记录成功: 脚本ID 14, 链ID None
2025-05-21 12:00:03,642 - config - INFO - 定时任务启动成功: 任务ID 3, 历史ID 721
2025-05-21 12:00:03,647 - config - INFO - 更新任务执行信息成功: ID 3, 下次执行时间 2025-05-22 12:00:00
2025-05-21 12:00:03,652 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 3
2025-05-21 12:00:03,652 - config - INFO - 定时任务启动成功: 任务ID 4, 历史ID 722
2025-05-21 12:00:03,667 - config - INFO - 更新执行进度成功: ID 722
2025-05-21 12:00:03,698 - config - INFO - 更新执行进度成功: ID 721
2025-05-21 12:00:03,714 - config - INFO - 更新任务执行信息成功: ID 4, 下次执行时间 2025-05-22 12:00:00
2025-05-21 12:00:03,721 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 4
2025-05-21 12:00:03,722 - config - INFO - 定时任务启动成功: 任务ID 5, 历史ID 723
2025-05-21 12:00:03,727 - config - INFO - 更新执行进度成功: ID 723
2025-05-21 12:00:03,753 - config - INFO - 更新执行进度成功: ID 720
2025-05-21 12:00:03,758 - config - INFO - 更新任务执行信息成功: ID 5, 下次执行时间 2025-05-21 12:30:00
2025-05-21 12:00:03,766 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 5
2025-05-21 12:00:03,766 - config - INFO - 定时任务启动成功: 任务ID 6, 历史ID 724
2025-05-21 12:00:03,772 - config - INFO - 更新执行进度成功: ID 724
2025-05-21 12:00:03,804 - config - INFO - 更新任务执行信息成功: ID 6, 下次执行时间 2025-05-21 13:00:00
2025-05-21 12:00:03,814 - config - INFO - 添加执行历史记录成功: 脚本ID 18, 链ID None
2025-05-21 12:00:03,815 - config - INFO - 定时任务启动成功: 任务ID 8, 历史ID 725
2025-05-21 12:00:03,822 - config - INFO - 更新任务执行信息成功: ID 8, 下次执行时间 2025-05-21 13:00:00
2025-05-21 12:00:03,829 - config - INFO - 添加执行历史记录成功: 脚本ID 19, 链ID None
2025-05-21 12:00:03,830 - config - INFO - 定时任务启动成功: 任务ID 9, 历史ID 726
2025-05-21 12:00:03,848 - config - INFO - 更新执行进度成功: ID 725
2025-05-21 12:00:03,866 - config - INFO - 更新任务执行信息成功: ID 9, 下次执行时间 2025-05-21 13:00:00
2025-05-21 12:00:03,873 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 6
2025-05-21 12:00:03,873 - config - INFO - 定时任务启动成功: 任务ID 10, 历史ID 727
2025-05-21 12:00:03,880 - config - INFO - 更新任务执行信息成功: ID 10, 下次执行时间 2025-05-21 18:00:00
2025-05-21 12:00:03,887 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 7
2025-05-21 12:00:03,888 - config - INFO - 定时任务启动成功: 任务ID 11, 历史ID 728
2025-05-21 12:00:03,893 - config - INFO - 更新执行进度成功: ID 728
2025-05-21 12:00:03,925 - config - INFO - 更新任务执行信息成功: ID 11, 下次执行时间 2025-05-22 12:00:00
2025-05-21 12:00:03,931 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 8
2025-05-21 12:00:03,932 - config - INFO - 定时任务启动成功: 任务ID 12, 历史ID 729
2025-05-21 12:00:03,937 - config - INFO - 更新执行进度成功: ID 729
2025-05-21 12:00:03,963 - config - INFO - 传递给Docker容器的参数: {"user_params": {"file_path": "scheduled_value_28", "pattern": "scheduled_value_69", "time_window": 63}, "system_params": {"__execution_time": "2025-05-21 12:00:03"}, "file_params": {}}...
2025-05-21 12:00:03,966 - config - INFO - 更新任务执行信息成功: ID 12, 下次执行时间 2025-05-22 12:00:00
2025-05-21 12:00:03,966 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250515233707_日志分析器.py
2025-05-21 12:00:03,967 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 12:00:03,967 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250515233707_日志分析器.py /params/tmptt5hkpmx.json
2025-05-21 12:00:03,973 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 12:00:03,974 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 730
2025-05-21 12:00:03,985 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 12:00:04
2025-05-21 12:00:03,988 - config - INFO - 传递给Docker容器的参数: {"user_params": {"file_path": "scheduled_value_33", "size_kb": 43, "content_type": "scheduled_value_98"}, "system_params": {"__execution_time": "2025-05-21 12:00:03"}, "file_params": {}}...
2025-05-21 12:00:03,992 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250515233706_文件生成器.py
2025-05-21 12:00:03,992 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 12:00:03,992 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250515233706_文件生成器.py /params/tmp92nlvopk.json
2025-05-21 12:00:04,000 - config - INFO - 更新执行进度成功: ID 727
2025-05-21 12:00:04,031 - config - INFO - 更新执行进度成功: ID 730
2025-05-21 12:00:04,061 - config - INFO - 更新执行进度成功: ID 726
2025-05-21 12:00:04,092 - config - INFO - 传递给Docker容器的参数: {"user_params": {"file_path": "scheduled_value_49", "size_kb": 87, "content_type": "scheduled_value_77"}, "system_params": {"__execution_time": "2025-05-21 12:00:04"}, "file_params": {}}...
2025-05-21 12:00:04,095 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_文件生成器.py
2025-05-21 12:00:04,095 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 12:00:04,095 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250516001959_文件生成器.py /params/tmpn8neyisi.json
2025-05-21 12:00:04,278 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 12:00:04"}, "file_params": {}}...
2025-05-21 12:00:04,281 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 12:00:04,281 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 12:00:04,281 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmphdmeqtxn.json
2025-05-21 12:00:04,294 - config - INFO - 传递给Docker容器的参数: {"user_params": {"file_path": "scheduled_value_73", "pattern": "scheduled_value_91", "time_window": 39}, "system_params": {"__execution_time": "2025-05-21 12:00:04"}, "file_params": {}}...
2025-05-21 12:00:04,297 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_日志分析器.py
2025-05-21 12:00:04,297 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 12:00:04,297 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250516001959_日志分析器.py /params/tmpaw4vnj1u.json
2025-05-21 12:00:05,936 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 12:00:05,937 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 731
2025-05-21 12:00:05,943 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 12:00:06
2025-05-21 12:00:05,953 - config - INFO - 更新执行进度成功: ID 731
2025-05-21 12:00:06,214 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 12:00:06"}, "file_params": {}}...
2025-05-21 12:00:06,216 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 12:00:06,216 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 12:00:06,216 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmp0yvuee18.json
2025-05-21 12:00:07,282 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 12:00:07,290 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 724
2025-05-21 12:00:07,363 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 12:00:07,369 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 722
2025-05-21 12:00:07,470 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 12:00:07,476 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 723
2025-05-21 12:00:07,566 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 12:00:07,572 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 728
2025-05-21 12:00:07,598 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 12:00:07,604 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 727
2025-05-21 12:00:07,662 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 12:00:07,668 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 729
2025-05-21 12:00:09,338 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 12:00:09,345 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 724
2025-05-21 12:00:10,155 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 12:00:10,163 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 729
2025-05-21 12:00:10,351 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 12:00:10,359 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 727
2025-05-21 12:00:10,472 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 12:00:10,481 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 728
2025-05-21 12:00:10,613 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 12:00:10,619 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 722
2025-05-21 12:00:11,243 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 12:00:11,250 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 723
2025-05-21 12:00:11,824 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 12:00:11,837 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 724
2025-05-21 12:00:12,114 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 12:00:12,119 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 727
2025-05-21 12:00:12,659 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 12:00:12,667 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 729
2025-05-21 12:00:12,733 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 12:00:12,741 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 728
2025-05-21 12:00:12,964 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 12:00:12,973 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 723
2025-05-21 12:00:13,072 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 12:00:13,080 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 722
2025-05-21 12:00:14,808 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 12:00:14,815 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 727
2025-05-21 12:00:14,815 - config - INFO - 更新执行历史记录成功: ID 727
2025-05-21 12:00:14,878 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 12:00:14,878 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 12:00:14,885 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 729
2025-05-21 12:00:14,885 - config - INFO - 更新执行历史记录成功: ID 729
2025-05-21 12:00:14,895 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 724
2025-05-21 12:00:14,896 - config - INFO - 更新执行历史记录成功: ID 724
2025-05-21 12:00:15,253 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 12:00:15,260 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 728
2025-05-21 12:00:15,260 - config - INFO - 更新执行历史记录成功: ID 728
2025-05-21 12:00:15,663 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 12:00:15,676 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 722
2025-05-21 12:00:15,676 - config - INFO - 更新执行历史记录成功: ID 722
2025-05-21 12:00:15,992 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 12:00:15,999 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 723
2025-05-21 12:00:16,000 - config - INFO - 更新执行历史记录成功: ID 723
2025-05-21 12:00:23,199 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 12:00:23,199 - config - INFO - Docker执行成功，输出长度: 9251
2025-05-21 12:00:23,214 - config - INFO - 更新执行历史记录成功: ID 725
2025-05-21 12:00:23,437 - config - INFO - Docker执行完成，返回码: 1
2025-05-21 12:00:23,438 - config - ERROR - Docker执行失败，错误信息:   WARNING: The script tqdm is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script dotenv is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script distro is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script normalizer is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script flask is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script httpx is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script openai is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
错误: 必须提供日志文件路径参数 'file_path'

2025-05-21 12:00:23,852 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 12:00:23,853 - config - INFO - Docker执行成功，输出长度: 9253
2025-05-21 12:00:23,866 - config - INFO - 更新执行历史记录成功: ID 720
2025-05-21 12:00:23,870 - config - INFO - Docker执行完成，返回码: 1
2025-05-21 12:00:23,871 - config - ERROR - Docker执行失败，错误信息:   WARNING: The script tqdm is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script dotenv is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script distro is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script normalizer is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script flask is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script httpx is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script openai is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
错误: 必须提供日志文件路径参数 'file_path'

2025-05-21 12:00:24,803 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 12:00:24,803 - config - INFO - Docker执行成功，输出长度: 9940
2025-05-21 12:00:24,813 - config - INFO - 更新执行历史记录成功: ID 731
2025-05-21 12:00:25,044 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 12:00:25,045 - config - INFO - Docker执行成功，输出长度: 9937
2025-05-21 12:00:25,056 - config - INFO - 更新执行历史记录成功: ID 730
2025-05-21 12:00:26,999 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com
2025-05-21 12:00:27,006 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 726
2025-05-21 12:00:27,107 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com
2025-05-21 12:00:27,114 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 721
2025-05-21 12:00:28,774 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 12:00:28,783 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 726
2025-05-21 12:00:28,851 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 12:00:28,859 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 721
2025-05-21 12:00:30,558 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com
2025-05-21 12:00:30,565 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 726
2025-05-21 12:00:30,604 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com
2025-05-21 12:00:30,611 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 721
2025-05-21 12:00:32,766 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 12:00:32,774 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 726
2025-05-21 12:00:32,774 - config - INFO - 更新执行历史记录成功: ID 726
2025-05-21 12:00:32,929 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 12:00:32,936 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 721
2025-05-21 12:00:32,937 - config - INFO - 更新执行历史记录成功: ID 721
2025-05-21 12:00:34,029 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 12:00:34,029 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 732
2025-05-21 12:00:34,040 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 12:00:35
2025-05-21 12:00:34,047 - config - INFO - 更新执行进度成功: ID 732
2025-05-21 12:00:34,273 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 12:00:34"}, "file_params": {}}...
2025-05-21 12:00:34,276 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 12:00:34,276 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 12:00:34,276 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmp90k0xbtn.json
2025-05-21 12:00:35,966 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 12:00:35,967 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 733
2025-05-21 12:00:35,986 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 12:00:36
2025-05-21 12:00:35,993 - config - INFO - 更新执行进度成功: ID 733
2025-05-21 12:00:36,209 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 12:00:36"}, "file_params": {}}...
2025-05-21 12:00:36,212 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 12:00:36,213 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 12:00:36,213 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmp7qbyd143.json
2025-05-21 12:00:46,496 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 12:00:46,496 - config - INFO - Docker执行成功，输出长度: 9941
2025-05-21 12:00:46,509 - config - INFO - 更新执行历史记录成功: ID 732
2025-05-21 12:00:48,692 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 12:00:48,692 - config - INFO - Docker执行成功，输出长度: 9937
2025-05-21 12:00:48,703 - config - INFO - 更新执行历史记录成功: ID 733
2025-05-21 12:01:04,064 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 12:01:04,065 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 734
2025-05-21 12:01:04,072 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 13:00:00
2025-05-21 12:01:04,084 - config - INFO - 更新执行进度成功: ID 734
2025-05-21 12:01:04,311 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 12:01:04"}, "file_params": {}}...
2025-05-21 12:01:04,314 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 12:01:04,314 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 12:01:04,314 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmp0dukwlce.json
2025-05-21 12:01:16,927 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 12:01:16,927 - config - INFO - Docker执行成功，输出长度: 9938
2025-05-21 12:01:16,934 - config - INFO - 更新执行历史记录成功: ID 734
2025-05-21 12:09:35,450 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 12:09:35] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 12:09:35,460 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 12:09:35] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 12:09:35,942 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 12:09:35] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 12:09:36,421 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 12:09:36] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-21 12:09:42,932 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 12:09:42] "GET /api/alert/config/4 HTTP/1.1" 200 -
2025-05-21 12:09:43,250 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 12:09:43] "GET /api/alert/history?limit=20&offset=0&config_id=4 HTTP/1.1" 200 -
2025-05-21 12:10:13,293 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 12:10:13] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 12:10:13,295 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 12:10:13] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 12:10:13,302 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 12:10:13] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 12:13:28,656 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-21 12:13:28,661 - config - ERROR - 保存生成的脚本时发生错误: type object 'Script' has no attribute 'create'
2025-05-21 12:13:28,662 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 12:13:28] "[35m[1mPOST /api/scripts/ai/generate HTTP/1.1[0m" 500 -
2025-05-21 12:15:14,514 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-21 12:15:14,515 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 12:15:14] "POST /api/scripts/ai/generate HTTP/1.1" 200 -
2025-05-21 12:17:21,003 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 12:17:21] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 12:17:26,146 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 12:17:26] "GET /api/scripts/56 HTTP/1.1" 200 -
2025-05-21 12:17:26,476 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=56, chain_id=None
2025-05-21 12:17:26,477 - config - INFO - 符合条件的执行历史记录总数: 3
2025-05-21 12:17:26,477 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 12:17:26,477 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 12:17:26,477 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 56]
2025-05-21 12:17:26,477 - config - INFO - 查询返回 0 条统计数据
2025-05-21 12:17:26,477 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 12:17:26,477 - config - INFO - 备用查询参数: [56, '2025-04-21', '2025-05-21']
2025-05-21 12:17:26,478 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 12:17:26,478 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 12:17:26,478 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 12:17:26] "GET /api/execution/statistics?period=day&script_id=56&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 12:17:30,275 - config - INFO - 已从文件路径读取脚本内容: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521105807_test_alert_email.py
2025-05-21 12:19:46,135 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-21 12:19:46,136 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 12:19:46] "GET /api/scripts/ai/analyze/56?type=general HTTP/1.1" 200 -
2025-05-21 12:30:04,761 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 4
2025-05-21 12:30:04,762 - config - INFO - 定时任务启动成功: 任务ID 5, 历史ID 735
2025-05-21 12:30:04,767 - config - INFO - 更新执行进度成功: ID 735
2025-05-21 12:30:04,799 - config - INFO - 更新任务执行信息成功: ID 5, 下次执行时间 2025-05-21 13:00:00
2025-05-21 12:30:08,151 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 12:30:08,158 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 735
2025-05-21 12:30:10,438 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 12:30:10,445 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 735
2025-05-21 12:30:12,553 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 12:30:12,557 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 735
2025-05-21 12:30:14,296 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 12:30:14,302 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 735
2025-05-21 12:30:14,302 - config - INFO - 更新执行历史记录成功: ID 735
2025-05-21 12:37:25,815 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 12:37:25] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 13:00:05,517 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 4
2025-05-21 13:00:05,518 - config - INFO - 定时任务启动成功: 任务ID 5, 历史ID 736
2025-05-21 13:00:05,522 - config - INFO - 更新执行进度成功: ID 736
2025-05-21 13:00:05,547 - config - INFO - 更新任务执行信息成功: ID 5, 下次执行时间 2025-05-21 13:30:00
2025-05-21 13:00:05,555 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 5
2025-05-21 13:00:05,555 - config - INFO - 定时任务启动成功: 任务ID 6, 历史ID 737
2025-05-21 13:00:05,562 - config - INFO - 更新执行进度成功: ID 737
2025-05-21 13:00:05,591 - config - INFO - 更新任务执行信息成功: ID 6, 下次执行时间 2025-05-21 14:00:00
2025-05-21 13:00:05,599 - config - INFO - 添加执行历史记录成功: 脚本ID 18, 链ID None
2025-05-21 13:00:05,600 - config - INFO - 定时任务启动成功: 任务ID 8, 历史ID 738
2025-05-21 13:00:05,623 - config - INFO - 更新任务执行信息成功: ID 8, 下次执行时间 2025-05-21 14:00:00
2025-05-21 13:00:05,629 - config - INFO - 添加执行历史记录成功: 脚本ID 19, 链ID None
2025-05-21 13:00:05,630 - config - INFO - 定时任务启动成功: 任务ID 9, 历史ID 739
2025-05-21 13:00:05,635 - config - INFO - 更新任务执行信息成功: ID 9, 下次执行时间 2025-05-21 14:00:00
2025-05-21 13:00:05,654 - config - INFO - 更新执行进度成功: ID 738
2025-05-21 13:00:05,684 - config - INFO - 更新执行进度成功: ID 739
2025-05-21 13:00:05,703 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 13:00:05,704 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 740
2025-05-21 13:00:05,714 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 13:00:06
2025-05-21 13:00:05,730 - config - INFO - 更新执行进度成功: ID 740
2025-05-21 13:00:05,938 - config - INFO - 传递给Docker容器的参数: {"user_params": {"file_path": "scheduled_value_49", "size_kb": 87, "content_type": "scheduled_value_77"}, "system_params": {"__execution_time": "2025-05-21 13:00:05"}, "file_params": {}}...
2025-05-21 13:00:05,942 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_文件生成器.py
2025-05-21 13:00:05,942 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 13:00:05,942 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250516001959_文件生成器.py /params/tmpfawamu52.json
2025-05-21 13:00:05,976 - config - INFO - 传递给Docker容器的参数: {"user_params": {"file_path": "scheduled_value_73", "pattern": "scheduled_value_91", "time_window": 39}, "system_params": {"__execution_time": "2025-05-21 13:00:05"}, "file_params": {}}...
2025-05-21 13:00:05,979 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_日志分析器.py
2025-05-21 13:00:05,979 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 13:00:05,979 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250516001959_日志分析器.py /params/tmpl3n_z7hx.json
2025-05-21 13:00:06,009 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 13:00:06"}, "file_params": {}}...
2025-05-21 13:00:06,012 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 13:00:06,012 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 13:00:06,013 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmpobqeadkp.json
2025-05-21 13:00:07,391 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 13:00:07,392 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 741
2025-05-21 13:00:07,402 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 13:00:08
2025-05-21 13:00:07,413 - config - INFO - 更新执行进度成功: ID 741
2025-05-21 13:00:07,773 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 13:00:07"}, "file_params": {}}...
2025-05-21 13:00:07,778 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 13:00:07,779 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 13:00:07,779 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmp4wjjpj34.json
2025-05-21 13:00:08,496 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 13:00:08,503 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 737
2025-05-21 13:00:09,457 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 13:00:09,465 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 736
2025-05-21 13:00:10,218 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 13:00:10,225 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 737
2025-05-21 13:00:11,199 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 13:00:11,209 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 736
2025-05-21 13:00:12,886 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 13:00:12,894 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 737
2025-05-21 13:00:13,604 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 13:00:13,615 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 736
2025-05-21 13:00:16,095 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 13:00:16,104 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 737
2025-05-21 13:00:16,104 - config - INFO - 更新执行历史记录成功: ID 737
2025-05-21 13:00:16,856 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 13:00:16,865 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 736
2025-05-21 13:00:16,866 - config - INFO - 更新执行历史记录成功: ID 736
2025-05-21 13:00:24,686 - config - INFO - Docker执行完成，返回码: 1
2025-05-21 13:00:24,686 - config - ERROR - Docker执行失败，错误信息:   WARNING: The script tqdm is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script dotenv is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script distro is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script normalizer is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script flask is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script httpx is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script openai is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
错误: 必须提供日志文件路径参数 'file_path'

2025-05-21 13:00:24,701 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 13:00:24,702 - config - INFO - Docker执行成功，输出长度: 9251
2025-05-21 13:00:24,756 - config - INFO - 更新执行历史记录成功: ID 738
2025-05-21 13:00:26,058 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 13:00:26,059 - config - INFO - Docker执行成功，输出长度: 9938
2025-05-21 13:00:26,075 - config - INFO - 更新执行历史记录成功: ID 741
2025-05-21 13:00:26,076 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 13:00:26,077 - config - INFO - Docker执行成功，输出长度: 9938
2025-05-21 13:00:26,094 - config - INFO - 更新执行历史记录成功: ID 740
2025-05-21 13:00:28,482 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com
2025-05-21 13:00:28,489 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 739
2025-05-21 13:00:30,677 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 13:00:30,683 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 739
2025-05-21 13:00:32,628 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com
2025-05-21 13:00:32,637 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 739
2025-05-21 13:00:34,820 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 13:00:34,826 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 739
2025-05-21 13:00:34,827 - config - INFO - 更新执行历史记录成功: ID 739
2025-05-21 13:00:35,775 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 13:00:35,776 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 742
2025-05-21 13:00:35,798 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 13:00:36
2025-05-21 13:00:35,818 - config - INFO - 更新执行进度成功: ID 742
2025-05-21 13:00:36,100 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 13:00:36"}, "file_params": {}}...
2025-05-21 13:00:36,104 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 13:00:36,104 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 13:00:36,104 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmpxrjm77fe.json
2025-05-21 13:00:37,433 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 13:00:37,434 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 743
2025-05-21 13:00:37,452 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 13:00:38
2025-05-21 13:00:37,470 - config - INFO - 更新执行进度成功: ID 743
2025-05-21 13:00:37,744 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 13:00:37"}, "file_params": {}}...
2025-05-21 13:00:37,748 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 13:00:37,748 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 13:00:37,748 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmp_q3tdoo8.json
2025-05-21 13:00:50,286 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 13:00:50,286 - config - INFO - Docker执行成功，输出长度: 9943
2025-05-21 13:00:50,293 - config - INFO - 更新执行历史记录成功: ID 742
2025-05-21 13:00:51,378 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 13:00:51,378 - config - INFO - Docker执行成功，输出长度: 9939
2025-05-21 13:00:51,394 - config - INFO - 更新执行历史记录成功: ID 743
2025-05-21 13:01:05,819 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 13:01:05,820 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 744
2025-05-21 13:01:05,834 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 14:00:00
2025-05-21 13:01:05,851 - config - INFO - 更新执行进度成功: ID 744
2025-05-21 13:01:06,127 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 13:01:06"}, "file_params": {}}...
2025-05-21 13:01:06,130 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 13:01:06,131 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 13:01:06,131 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmpujo2eosx.json
2025-05-21 13:01:20,093 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 13:01:20,094 - config - INFO - Docker执行成功，输出长度: 9939
2025-05-21 13:01:20,105 - config - INFO - 更新执行历史记录成功: ID 744
2025-05-21 13:30:21,506 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 4
2025-05-21 13:30:21,507 - config - INFO - 定时任务启动成功: 任务ID 5, 历史ID 745
2025-05-21 13:30:21,518 - config - INFO - 更新执行进度成功: ID 745
2025-05-21 13:30:21,599 - config - INFO - 更新任务执行信息成功: ID 5, 下次执行时间 2025-05-21 14:00:00
2025-05-21 13:30:25,193 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 13:30:25,206 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 745
2025-05-21 13:30:27,275 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 13:30:27,284 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 745
2025-05-21 13:30:29,657 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 13:30:29,671 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 745
2025-05-21 13:30:32,368 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 13:30:32,379 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 745
2025-05-21 13:30:32,380 - config - INFO - 更新执行历史记录成功: ID 745
2025-05-21 14:00:22,537 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 4
2025-05-21 14:00:22,539 - config - INFO - 定时任务启动成功: 任务ID 5, 历史ID 746
2025-05-21 14:00:22,545 - config - INFO - 更新任务执行信息成功: ID 5, 下次执行时间 2025-05-21 14:30:00
2025-05-21 14:00:22,556 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 5
2025-05-21 14:00:22,557 - config - INFO - 定时任务启动成功: 任务ID 6, 历史ID 747
2025-05-21 14:00:22,568 - config - INFO - 更新执行进度成功: ID 747
2025-05-21 14:00:22,602 - config - INFO - 更新任务执行信息成功: ID 6, 下次执行时间 2025-05-21 15:00:00
2025-05-21 14:00:22,607 - config - INFO - 添加执行历史记录成功: 脚本ID 18, 链ID None
2025-05-21 14:00:22,608 - config - INFO - 定时任务启动成功: 任务ID 8, 历史ID 748
2025-05-21 14:00:22,614 - config - INFO - 更新任务执行信息成功: ID 8, 下次执行时间 2025-05-21 15:00:00
2025-05-21 14:00:22,621 - config - INFO - 添加执行历史记录成功: 脚本ID 19, 链ID None
2025-05-21 14:00:22,622 - config - INFO - 定时任务启动成功: 任务ID 9, 历史ID 749
2025-05-21 14:00:22,628 - config - INFO - 更新任务执行信息成功: ID 9, 下次执行时间 2025-05-21 15:00:00
2025-05-21 14:00:22,636 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 14:00:22,636 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 750
2025-05-21 14:00:22,641 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 14:00:23
2025-05-21 14:00:22,660 - config - INFO - 更新执行进度成功: ID 750
2025-05-21 14:00:22,677 - config - INFO - 更新执行进度成功: ID 749
2025-05-21 14:00:22,691 - config - INFO - 更新执行进度成功: ID 748
2025-05-21 14:00:22,722 - config - INFO - 更新执行进度成功: ID 746
2025-05-21 14:00:22,963 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 14:00:22"}, "file_params": {}}...
2025-05-21 14:00:22,966 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 14:00:22,966 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 14:00:22,966 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmpp4xbrz2p.json
2025-05-21 14:00:22,979 - config - INFO - 传递给Docker容器的参数: {"user_params": {"file_path": "scheduled_value_73", "pattern": "scheduled_value_91", "time_window": 39}, "system_params": {"__execution_time": "2025-05-21 14:00:22"}, "file_params": {}}...
2025-05-21 14:00:22,982 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_日志分析器.py
2025-05-21 14:00:22,983 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 14:00:22,983 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250516001959_日志分析器.py /params/tmp3wpjhvkz.json
2025-05-21 14:00:22,994 - config - INFO - 传递给Docker容器的参数: {"user_params": {"file_path": "scheduled_value_49", "size_kb": 87, "content_type": "scheduled_value_77"}, "system_params": {"__execution_time": "2025-05-21 14:00:22"}, "file_params": {}}...
2025-05-21 14:00:22,996 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_文件生成器.py
2025-05-21 14:00:22,997 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 14:00:22,997 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250516001959_文件生成器.py /params/tmpmn_7k6zm.json
2025-05-21 14:00:24,380 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 14:00:24,382 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 751
2025-05-21 14:00:24,389 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 14:00:25
2025-05-21 14:00:24,404 - config - INFO - 更新执行进度成功: ID 751
2025-05-21 14:00:24,762 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 14:00:24"}, "file_params": {}}...
2025-05-21 14:00:24,765 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 14:00:24,765 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 14:00:24,765 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmpx3xkz9mi.json
2025-05-21 14:00:24,940 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 14:00:24,970 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 746
2025-05-21 14:00:25,417 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 14:00:25,424 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 747
2025-05-21 14:00:27,046 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 14:00:27,054 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 746
2025-05-21 14:00:27,440 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 14:00:27,448 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 747
2025-05-21 14:00:28,934 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 14:00:28,959 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 746
2025-05-21 14:00:29,769 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 14:00:29,797 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 747
2025-05-21 14:00:31,459 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 14:00:31,474 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 746
2025-05-21 14:00:31,474 - config - INFO - 更新执行历史记录成功: ID 746
2025-05-21 14:00:32,160 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 14:00:32,178 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 747
2025-05-21 14:00:32,179 - config - INFO - 更新执行历史记录成功: ID 747
2025-05-21 14:00:50,720 - config - INFO - Docker执行完成，返回码: 1
2025-05-21 14:00:50,720 - config - ERROR - Docker执行失败，错误信息:   WARNING: The script tqdm is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script dotenv is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script distro is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script normalizer is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script flask is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script httpx is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script openai is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
错误: 必须提供日志文件路径参数 'file_path'

2025-05-21 14:00:50,721 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 14:00:50,721 - config - INFO - Docker执行成功，输出长度: 9254
2025-05-21 14:00:50,746 - config - INFO - 更新执行历史记录成功: ID 748
2025-05-21 14:00:51,672 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 14:00:51,672 - config - INFO - Docker执行成功，输出长度: 9932
2025-05-21 14:00:51,685 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 14:00:51,685 - config - INFO - Docker执行成功，输出长度: 9940
2025-05-21 14:00:51,701 - config - INFO - 更新执行历史记录成功: ID 750
2025-05-21 14:00:51,717 - config - INFO - 更新执行历史记录成功: ID 751
2025-05-21 14:00:52,669 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 14:00:52,669 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 752
2025-05-21 14:00:52,676 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 14:00:53
2025-05-21 14:00:52,695 - config - INFO - 更新执行进度成功: ID 752
2025-05-21 14:00:52,955 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 14:00:52"}, "file_params": {}}...
2025-05-21 14:00:52,958 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 14:00:52,958 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 14:00:52,958 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmpw25n9ije.json
2025-05-21 14:00:54,292 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com
2025-05-21 14:00:54,301 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 749
2025-05-21 14:00:54,418 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 14:00:54,419 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 753
2025-05-21 14:00:54,438 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 14:00:55
2025-05-21 14:00:54,453 - config - INFO - 更新执行进度成功: ID 753
2025-05-21 14:00:54,758 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 14:00:54"}, "file_params": {}}...
2025-05-21 14:00:54,760 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 14:00:54,760 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 14:00:54,760 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmpyi5g5dlg.json
2025-05-21 14:00:56,512 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 14:00:56,518 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 749
2025-05-21 14:00:58,365 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com
2025-05-21 14:00:58,378 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 749
2025-05-21 14:01:00,719 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 14:01:00,731 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 749
2025-05-21 14:01:00,732 - config - INFO - 更新执行历史记录成功: ID 749
2025-05-21 14:01:14,354 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 14:01:14,354 - config - INFO - Docker执行成功，输出长度: 9940
2025-05-21 14:01:14,354 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 14:01:14,354 - config - INFO - Docker执行成功，输出长度: 9939
2025-05-21 14:01:14,362 - config - INFO - 更新执行历史记录成功: ID 752
2025-05-21 14:01:14,370 - config - INFO - 更新执行历史记录成功: ID 753
2025-05-21 14:01:22,706 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 14:01:22,707 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 754
2025-05-21 14:01:22,724 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 15:00:00
2025-05-21 14:01:22,739 - config - INFO - 更新执行进度成功: ID 754
2025-05-21 14:01:22,984 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 14:01:22"}, "file_params": {}}...
2025-05-21 14:01:22,986 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 14:01:22,986 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 14:01:22,986 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmp6_uf8biu.json
2025-05-21 14:01:40,192 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 14:01:40,193 - config - INFO - Docker执行成功，输出长度: 9939
2025-05-21 14:01:40,202 - config - INFO - 更新执行历史记录成功: ID 754
2025-05-21 14:30:24,564 - config - INFO - 数据库初始化成功
2025-05-21 14:30:24,566 - config - INFO - 定时任务调度服务已启动
2025-05-21 14:30:24,578 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 14:30:24,587 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 4
2025-05-21 14:30:24,588 - config - INFO - 定时任务启动成功: 任务ID 5, 历史ID 755
2025-05-21 14:30:24,596 - config - INFO - 更新任务执行信息成功: ID 5, 下次执行时间 2025-05-21 15:00:00
2025-05-21 14:30:24,611 - config - INFO - 更新执行进度成功: ID 755
2025-05-21 14:30:24,708 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.155.112:5000
2025-05-21 14:30:24,708 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 14:30:24,709 - werkzeug - INFO -  * Restarting with stat
2025-05-21 14:30:26,187 - config - INFO - 数据库初始化成功
2025-05-21 14:30:26,189 - config - INFO - 定时任务调度服务已启动
2025-05-21 14:30:26,201 - config - INFO - 启动应用服务，监听端口: 5000
2025-05-21 14:30:26,241 - werkzeug - WARNING -  * Debugger is active!
2025-05-21 14:30:26,245 - werkzeug - INFO -  * Debugger PIN: 188-467-372
2025-05-21 14:30:26,448 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 14:30:26,463 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 755
2025-05-21 14:30:28,058 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 14:30:28,064 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 755
2025-05-21 14:30:29,302 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 14:30:29,307 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 755
2025-05-21 14:30:30,905 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 14:30:30,912 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 755
2025-05-21 14:30:30,913 - config - INFO - 更新执行历史记录成功: ID 755
2025-05-21 14:32:32,190 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 14:32:32] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 14:32:32,198 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 14:32:32] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 14:32:32,206 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 14:32:32] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 14:32:32,248 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=None, chain_id=None
2025-05-21 14:32:32,253 - config - INFO - 符合条件的执行历史记录总数: 755
2025-05-21 14:32:32,253 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 14:32:32,254 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 14:32:32,254 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21']
2025-05-21 14:32:32,257 - config - INFO - 查询返回 30 条统计数据
2025-05-21 14:32:32,257 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 17, 'success_count': 12, 'failed_count': 2, 'avg_execution_time': 142.64786081685196}
2025-05-21 14:32:32,259 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 14:32:32] "GET /api/execution/statistics?period=day&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 14:47:58,133 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 14:47:58] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 14:47:58,135 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 14:47:58] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 14:47:58,153 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 14:47:58] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 14:47:58,166 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=None, chain_id=None
2025-05-21 14:47:58,172 - config - INFO - 符合条件的执行历史记录总数: 755
2025-05-21 14:47:58,172 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 14:47:58,172 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 14:47:58,172 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21']
2025-05-21 14:47:58,177 - config - INFO - 查询返回 30 条统计数据
2025-05-21 14:47:58,177 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 17, 'success_count': 12, 'failed_count': 2, 'avg_execution_time': 142.64786081685196}
2025-05-21 14:47:58,179 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 14:47:58] "GET /api/execution/statistics?period=day&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 14:48:02,090 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 14:48:02] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 14:48:03,105 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 14:48:03] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 14:48:03,421 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 14:48:03] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 14:48:03,432 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 14:48:03] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 14:48:03,435 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=None, chain_id=None
2025-05-21 14:48:03,440 - config - INFO - 符合条件的执行历史记录总数: 755
2025-05-21 14:48:03,441 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 14:48:03,442 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 14:48:03,442 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21']
2025-05-21 14:48:03,446 - config - INFO - 查询返回 30 条统计数据
2025-05-21 14:48:03,446 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 17, 'success_count': 12, 'failed_count': 2, 'avg_execution_time': 142.64786081685196}
2025-05-21 14:48:03,448 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 14:48:03] "GET /api/execution/statistics?period=day&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 14:48:05,792 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 14:48:05] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 14:48:05,793 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 14:48:05] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 14:48:06,615 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 14:48:06] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 14:48:06,617 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 14:48:06] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 14:48:06,943 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 14:48:06] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 14:48:07,270 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 14:48:07] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 14:48:08,254 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 14:48:08] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-21 14:48:11,907 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 14:48:11] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 14:48:12,226 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 14:48:12] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 14:48:12,234 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=None, chain_id=None
2025-05-21 14:48:12,245 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 14:48:12] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 14:48:12,245 - config - INFO - 符合条件的执行历史记录总数: 755
2025-05-21 14:48:12,245 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 14:48:12,246 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 14:48:12,246 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21']
2025-05-21 14:48:12,250 - config - INFO - 查询返回 30 条统计数据
2025-05-21 14:48:12,251 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 17, 'success_count': 12, 'failed_count': 2, 'avg_execution_time': 142.64786081685196}
2025-05-21 14:48:12,254 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 14:48:12] "GET /api/execution/statistics?period=day&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 15:00:25,627 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 4
2025-05-21 15:00:25,628 - config - INFO - 定时任务启动成功: 任务ID 5, 历史ID 756
2025-05-21 15:00:25,641 - config - INFO - 更新执行进度成功: ID 756
2025-05-21 15:00:25,672 - config - INFO - 更新任务执行信息成功: ID 5, 下次执行时间 2025-05-21 15:30:00
2025-05-21 15:00:25,685 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 5
2025-05-21 15:00:25,686 - config - INFO - 定时任务启动成功: 任务ID 6, 历史ID 757
2025-05-21 15:00:25,696 - config - INFO - 更新执行进度成功: ID 757
2025-05-21 15:00:25,743 - config - INFO - 更新任务执行信息成功: ID 6, 下次执行时间 2025-05-21 16:00:00
2025-05-21 15:00:25,867 - config - INFO - 添加执行历史记录成功: 脚本ID 18, 链ID None
2025-05-21 15:00:25,868 - config - INFO - 定时任务启动成功: 任务ID 8, 历史ID 758
2025-05-21 15:00:25,877 - config - INFO - 更新任务执行信息成功: ID 8, 下次执行时间 2025-05-21 16:00:00
2025-05-21 15:00:25,888 - config - INFO - 更新执行进度成功: ID 758
2025-05-21 15:00:25,906 - config - INFO - 添加执行历史记录成功: 脚本ID 19, 链ID None
2025-05-21 15:00:25,907 - config - INFO - 定时任务启动成功: 任务ID 9, 历史ID 759
2025-05-21 15:00:25,919 - config - INFO - 更新执行进度成功: ID 759
2025-05-21 15:00:25,937 - config - INFO - 更新任务执行信息成功: ID 9, 下次执行时间 2025-05-21 16:00:00
2025-05-21 15:00:25,951 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 15:00:25,952 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 760
2025-05-21 15:00:25,979 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 15:00:26
2025-05-21 15:00:25,996 - config - INFO - 更新执行进度成功: ID 760
2025-05-21 15:00:26,393 - config - INFO - 传递给Docker容器的参数: {"user_params": {"file_path": "scheduled_value_49", "size_kb": 87, "content_type": "scheduled_value_77"}, "system_params": {"__execution_time": "2025-05-21 15:00:26"}, "file_params": {}}...
2025-05-21 15:00:26,397 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_文件生成器.py
2025-05-21 15:00:26,398 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 15:00:26,398 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250516001959_文件生成器.py /params/tmpzv1si3ty.json
2025-05-21 15:00:26,428 - config - INFO - 传递给Docker容器的参数: {"user_params": {"file_path": "scheduled_value_73", "pattern": "scheduled_value_91", "time_window": 39}, "system_params": {"__execution_time": "2025-05-21 15:00:26"}, "file_params": {}}...
2025-05-21 15:00:26,434 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_日志分析器.py
2025-05-21 15:00:26,435 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 15:00:26,435 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250516001959_日志分析器.py /params/tmpman190vs.json
2025-05-21 15:00:26,447 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 15:00:26"}, "file_params": {}}...
2025-05-21 15:00:26,452 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 15:00:26,452 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 15:00:26,452 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmp_pvh_nix.json
2025-05-21 15:00:27,284 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 15:00:27,285 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 761
2025-05-21 15:00:27,297 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 15:00:28
2025-05-21 15:00:27,315 - config - INFO - 更新执行进度成功: ID 761
2025-05-21 15:00:27,788 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 15:00:27"}, "file_params": {}}...
2025-05-21 15:00:27,793 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 15:00:27,793 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 15:00:27,793 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmpuqq0z570.json
2025-05-21 15:00:28,280 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 15:00:28,285 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 15:00:28,292 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 757
2025-05-21 15:00:28,377 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 756
2025-05-21 15:00:30,363 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 15:00:30,375 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 757
2025-05-21 15:00:30,736 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 15:00:30,749 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 756
2025-05-21 15:00:32,248 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 15:00:32,261 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 757
2025-05-21 15:00:33,199 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 15:00:33,211 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 756
2025-05-21 15:00:34,771 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 15:00:34,801 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 757
2025-05-21 15:00:34,801 - config - INFO - 更新执行历史记录成功: ID 757
2025-05-21 15:00:35,923 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 15:00:35,935 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 756
2025-05-21 15:00:35,935 - config - INFO - 更新执行历史记录成功: ID 756
2025-05-21 15:00:56,034 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 15:00:56,036 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 762
2025-05-21 15:00:56,048 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 15:00:57
2025-05-21 15:00:56,069 - config - INFO - 更新执行进度成功: ID 762
2025-05-21 15:00:56,592 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 15:00:56"}, "file_params": {}}...
2025-05-21 15:00:56,598 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 15:00:56,598 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 15:00:56,598 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmpnhm6r_qk.json
2025-05-21 15:00:57,337 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 15:00:57,338 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 763
2025-05-21 15:00:57,354 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 15:00:58
2025-05-21 15:00:57,372 - config - INFO - 更新执行进度成功: ID 763
2025-05-21 15:00:57,859 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 15:00:57"}, "file_params": {}}...
2025-05-21 15:00:57,866 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 15:00:57,866 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 15:00:57,866 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmpblrstj6s.json
2025-05-21 15:01:14,244 - config - INFO - Docker执行完成，返回码: 1
2025-05-21 15:01:14,244 - config - ERROR - Docker执行失败，错误信息:   WARNING: The script tqdm is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script dotenv is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script distro is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script normalizer is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script flask is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script httpx is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script openai is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
错误: 必须提供日志文件路径参数 'file_path'

2025-05-21 15:01:14,265 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 15:01:14,266 - config - INFO - Docker执行成功，输出长度: 9251
2025-05-21 15:01:15,190 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 15:01:15,191 - config - INFO - Docker执行成功，输出长度: 9944
2025-05-21 15:01:15,558 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 15:01:15,558 - config - INFO - Docker执行成功，输出长度: 9940
2025-05-21 15:01:19,229 - config - INFO - 邮件发送成功: 脚本执行completed告警 发送给 admin@example.com, operator@example.com
2025-05-21 15:01:19,249 - config - INFO - 添加告警历史记录成功: 配置ID 5, 执行ID 758
2025-05-21 15:01:19,992 - config - INFO - 邮件发送成功: 脚本执行completed告警 发送给 admin@example.com, operator@example.com
2025-05-21 15:01:19,992 - config - INFO - 邮件发送成功: 脚本执行completed告警 发送给 admin@example.com, operator@example.com
2025-05-21 15:01:20,011 - config - INFO - 添加告警历史记录成功: 配置ID 5, 执行ID 760
2025-05-21 15:01:20,022 - config - INFO - 添加告警历史记录成功: 配置ID 5, 执行ID 761
2025-05-21 15:01:20,712 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com
2025-05-21 15:01:20,732 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 759
2025-05-21 15:01:21,861 - config - INFO - 邮件发送成功: 脚本执行completed告警 发送给 admin@example.com, operator@example.com
2025-05-21 15:01:21,878 - config - INFO - 添加告警历史记录成功: 配置ID 2, 执行ID 760
2025-05-21 15:01:21,879 - config - INFO - 更新执行历史记录成功: ID 760
2025-05-21 15:01:21,943 - config - INFO - 邮件发送成功: 脚本执行completed告警 发送给 admin@example.com, operator@example.com
2025-05-21 15:01:21,962 - config - INFO - 添加告警历史记录成功: 配置ID 2, 执行ID 758
2025-05-21 15:01:21,962 - config - INFO - 更新执行历史记录成功: ID 758
2025-05-21 15:01:22,719 - config - INFO - 邮件发送成功: 脚本执行completed告警 发送给 admin@example.com, operator@example.com
2025-05-21 15:01:22,738 - config - INFO - 添加告警历史记录成功: 配置ID 2, 执行ID 761
2025-05-21 15:01:22,738 - config - INFO - 更新执行历史记录成功: ID 761
2025-05-21 15:01:23,443 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com, operator@example.com
2025-05-21 15:01:23,463 - config - INFO - 添加告警历史记录成功: 配置ID 5, 执行ID 759
2025-05-21 15:01:25,810 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 15:01:25,826 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 759
2025-05-21 15:01:26,105 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 15:01:26,106 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 764
2025-05-21 15:01:26,125 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 16:00:00
2025-05-21 15:01:26,141 - config - INFO - 更新执行进度成功: ID 764
2025-05-21 15:01:26,593 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 15:01:26"}, "file_params": {}}...
2025-05-21 15:01:26,598 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 15:01:26,598 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 15:01:26,599 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmpycihkmr2.json
2025-05-21 15:01:27,672 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com
2025-05-21 15:01:27,688 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 759
2025-05-21 15:01:29,889 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com, operator@example.com
2025-05-21 15:01:29,908 - config - INFO - 添加告警历史记录成功: 配置ID 2, 执行ID 759
2025-05-21 15:01:31,752 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 15:01:31,761 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 759
2025-05-21 15:01:31,761 - config - INFO - 更新执行历史记录成功: ID 759
2025-05-21 15:01:39,536 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 15:01:39,537 - config - INFO - Docker执行成功，输出长度: 9938
2025-05-21 15:01:40,476 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 15:01:40,476 - config - INFO - Docker执行成功，输出长度: 9937
2025-05-21 15:01:42,192 - config - INFO - 邮件发送成功: 脚本执行completed告警 发送给 admin@example.com, operator@example.com
2025-05-21 15:01:42,207 - config - INFO - 添加告警历史记录成功: 配置ID 5, 执行ID 762
2025-05-21 15:01:43,450 - config - INFO - 邮件发送成功: 脚本执行completed告警 发送给 admin@example.com, operator@example.com
2025-05-21 15:01:43,466 - config - INFO - 添加告警历史记录成功: 配置ID 5, 执行ID 763
2025-05-21 15:01:44,840 - config - INFO - 邮件发送成功: 脚本执行completed告警 发送给 admin@example.com, operator@example.com
2025-05-21 15:01:44,857 - config - INFO - 添加告警历史记录成功: 配置ID 2, 执行ID 762
2025-05-21 15:01:44,857 - config - INFO - 更新执行历史记录成功: ID 762
2025-05-21 15:01:45,778 - config - INFO - 邮件发送成功: 脚本执行completed告警 发送给 admin@example.com, operator@example.com
2025-05-21 15:01:45,795 - config - INFO - 添加告警历史记录成功: 配置ID 2, 执行ID 763
2025-05-21 15:01:45,795 - config - INFO - 更新执行历史记录成功: ID 763
2025-05-21 15:02:02,741 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 15:02:02,741 - config - INFO - Docker执行成功，输出长度: 9934
2025-05-21 15:02:05,831 - config - INFO - 邮件发送成功: 脚本执行completed告警 发送给 admin@example.com, operator@example.com
2025-05-21 15:02:05,846 - config - INFO - 添加告警历史记录成功: 配置ID 5, 执行ID 764
2025-05-21 15:02:09,321 - config - INFO - 邮件发送成功: 脚本执行completed告警 发送给 admin@example.com, operator@example.com
2025-05-21 15:02:09,338 - config - INFO - 添加告警历史记录成功: 配置ID 2, 执行ID 764
2025-05-21 15:02:09,339 - config - INFO - 更新执行历史记录成功: ID 764
2025-05-21 15:07:27,682 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 15:07:27] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 15:07:27,686 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 15:07:27] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 15:07:27,700 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 15:07:27] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 15:07:27,715 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=None, chain_id=None
2025-05-21 15:07:27,720 - config - INFO - 符合条件的执行历史记录总数: 764
2025-05-21 15:07:27,720 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 15:07:27,720 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 15:07:27,720 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21']
2025-05-21 15:07:27,724 - config - INFO - 查询返回 30 条统计数据
2025-05-21 15:07:27,724 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 17, 'success_count': 12, 'failed_count': 2, 'avg_execution_time': 142.64786081685196}
2025-05-21 15:07:27,725 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 15:07:27] "GET /api/execution/statistics?period=day&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 15:07:30,675 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 15:07:30] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 15:07:30,681 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 15:07:30] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 15:07:30,881 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=None, chain_id=None
2025-05-21 15:07:30,884 - config - INFO - 符合条件的执行历史记录总数: 764
2025-05-21 15:07:30,885 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 15:07:30,885 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 15:07:30,885 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21']
2025-05-21 15:07:30,890 - config - INFO - 查询返回 30 条统计数据
2025-05-21 15:07:30,890 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 17, 'success_count': 12, 'failed_count': 2, 'avg_execution_time': 142.64786081685196}
2025-05-21 15:07:30,892 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 15:07:30] "GET /api/execution/statistics?period=day&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 15:07:30,901 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 15:07:30] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 15:07:32,478 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 15:07:32] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 15:30:27,264 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 4
2025-05-21 15:30:27,265 - config - INFO - 定时任务启动成功: 任务ID 5, 历史ID 765
2025-05-21 15:30:27,274 - config - INFO - 更新任务执行信息成功: ID 5, 下次执行时间 2025-05-21 16:00:00
2025-05-21 15:30:27,282 - config - INFO - 更新执行进度成功: ID 765
2025-05-21 15:30:29,282 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 15:30:29,299 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 765
2025-05-21 15:30:30,989 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 15:30:31,007 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 765
2025-05-21 15:30:32,090 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 15:30:32,105 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 765
2025-05-21 15:30:33,725 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 15:30:33,742 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 765
2025-05-21 15:30:33,742 - config - INFO - 更新执行历史记录成功: ID 765
2025-05-21 15:56:49,012 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 15:56:49] "GET /api/scripts/56 HTTP/1.1" 200 -
2025-05-21 15:56:49,175 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=56, chain_id=None
2025-05-21 15:56:49,178 - config - INFO - 符合条件的执行历史记录总数: 3
2025-05-21 15:56:49,178 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 15:56:49,179 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 15:56:49,179 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 56]
2025-05-21 15:56:49,179 - config - INFO - 查询返回 0 条统计数据
2025-05-21 15:56:49,180 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 15:56:49,180 - config - INFO - 备用查询参数: [56, '2025-04-21', '2025-05-21']
2025-05-21 15:56:49,180 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 15:56:49,180 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 15:56:49,181 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 15:56:49] "GET /api/execution/statistics?period=day&script_id=56&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 15:56:51,297 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 15:56:51] "GET /api/scripts/56/versions HTTP/1.1" 200 -
2025-05-21 15:56:57,602 - config - INFO - 从文件中读取脚本内容成功: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521105807_test_alert_email.py
2025-05-21 15:56:57,604 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 15:56:57] "GET /api/scripts/56/versions/43/content HTTP/1.1" 200 -
2025-05-21 15:57:04,743 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 15:57:04] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 15:58:21,373 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 15:58:21] "GET /api/scripts/55 HTTP/1.1" 200 -
2025-05-21 15:58:21,387 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=55, chain_id=None
2025-05-21 15:58:21,395 - config - INFO - 符合条件的执行历史记录总数: 1
2025-05-21 15:58:21,396 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 15:58:21,396 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 15:58:21,397 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 55]
2025-05-21 15:58:21,399 - config - INFO - 查询返回 0 条统计数据
2025-05-21 15:58:21,400 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 15:58:21,400 - config - INFO - 备用查询参数: [55, '2025-04-21', '2025-05-21']
2025-05-21 15:58:21,402 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 15:58:21,402 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 15:58:21,404 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 15:58:21] "GET /api/execution/statistics?period=day&script_id=55&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 15:58:30,705 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 15:58:30] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 15:58:31,008 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=None, chain_id=None
2025-05-21 15:58:31,015 - config - INFO - 符合条件的执行历史记录总数: 765
2025-05-21 15:58:31,015 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 15:58:31,015 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 15:58:31,017 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 15:58:31] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 15:58:31,017 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21']
2025-05-21 15:58:31,023 - config - INFO - 查询返回 30 条统计数据
2025-05-21 15:58:31,024 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 17, 'success_count': 12, 'failed_count': 2, 'avg_execution_time': 142.64786081685196}
2025-05-21 15:58:31,026 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 15:58:31] "GET /api/execution/statistics?period=day&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 15:58:31,036 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 15:58:31] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 15:58:31,093 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 15:58:31] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 15:59:29,108 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 15:59:29] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 15:59:29,413 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 15:59:29] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 16:00:28,645 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 4
2025-05-21 16:00:28,647 - config - INFO - 定时任务启动成功: 任务ID 5, 历史ID 766
2025-05-21 16:00:28,658 - config - INFO - 更新任务执行信息成功: ID 5, 下次执行时间 2025-05-21 16:30:00
2025-05-21 16:00:28,668 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 5
2025-05-21 16:00:28,669 - config - INFO - 定时任务启动成功: 任务ID 6, 历史ID 767
2025-05-21 16:00:28,680 - config - INFO - 更新执行进度成功: ID 767
2025-05-21 16:00:28,713 - config - INFO - 更新执行进度成功: ID 766
2025-05-21 16:00:28,859 - config - INFO - 更新任务执行信息成功: ID 6, 下次执行时间 2025-05-21 17:00:00
2025-05-21 16:00:28,879 - config - INFO - 添加执行历史记录成功: 脚本ID 18, 链ID None
2025-05-21 16:00:28,880 - config - INFO - 定时任务启动成功: 任务ID 8, 历史ID 768
2025-05-21 16:00:28,895 - config - INFO - 更新任务执行信息成功: ID 8, 下次执行时间 2025-05-21 17:00:00
2025-05-21 16:00:28,906 - config - INFO - 更新执行进度成功: ID 768
2025-05-21 16:00:28,919 - config - INFO - 添加执行历史记录成功: 脚本ID 19, 链ID None
2025-05-21 16:00:28,920 - config - INFO - 定时任务启动成功: 任务ID 9, 历史ID 769
2025-05-21 16:00:28,934 - config - INFO - 更新任务执行信息成功: ID 9, 下次执行时间 2025-05-21 17:00:00
2025-05-21 16:00:28,950 - config - INFO - 更新执行进度成功: ID 769
2025-05-21 16:00:28,969 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 16:00:28,970 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 770
2025-05-21 16:00:28,990 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 16:00:29
2025-05-21 16:00:29,000 - config - INFO - 更新执行进度成功: ID 770
2025-05-21 16:00:29,373 - config - INFO - 传递给Docker容器的参数: {"user_params": {"file_path": "scheduled_value_49", "size_kb": 87, "content_type": "scheduled_value_77"}, "system_params": {"__execution_time": "2025-05-21 16:00:29"}, "file_params": {}}...
2025-05-21 16:00:29,379 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_文件生成器.py
2025-05-21 16:00:29,379 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 16:00:29,379 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250516001959_文件生成器.py /params/tmpijc0ru4a.json
2025-05-21 16:00:29,430 - config - INFO - 传递给Docker容器的参数: {"user_params": {"file_path": "scheduled_value_73", "pattern": "scheduled_value_91", "time_window": 39}, "system_params": {"__execution_time": "2025-05-21 16:00:29"}, "file_params": {}}...
2025-05-21 16:00:29,436 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_日志分析器.py
2025-05-21 16:00:29,436 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 16:00:29,436 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250516001959_日志分析器.py /params/tmpa_t26dln.json
2025-05-21 16:00:29,452 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 16:00:29"}, "file_params": {}}...
2025-05-21 16:00:29,457 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 16:00:29,458 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 16:00:29,458 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmpi5wie74s.json
2025-05-21 16:00:29,839 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 16:00:29,841 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 771
2025-05-21 16:00:29,855 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 16:00:30
2025-05-21 16:00:29,865 - config - INFO - 更新执行进度成功: ID 771
2025-05-21 16:00:29,871 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 16:00:29,883 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 766
2025-05-21 16:00:30,311 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 16:00:30"}, "file_params": {}}...
2025-05-21 16:00:30,315 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 16:00:30,315 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 16:00:30,315 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmp5db9dim_.json
2025-05-21 16:00:30,591 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 16:00:30,608 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 767
2025-05-21 16:00:30,925 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 16:00:30,937 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 766
2025-05-21 16:00:31,931 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 16:00:31,950 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 766
2025-05-21 16:00:32,025 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 16:00:32,038 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 767
2025-05-21 16:00:33,132 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 16:00:33,142 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 766
2025-05-21 16:00:33,144 - config - INFO - 更新执行历史记录成功: ID 766
2025-05-21 16:00:33,487 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 16:00:33,496 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 767
2025-05-21 16:00:34,882 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 16:00:34,896 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 767
2025-05-21 16:00:34,896 - config - INFO - 更新执行历史记录成功: ID 767
2025-05-21 16:00:59,058 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 16:00:59,060 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 772
2025-05-21 16:00:59,072 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 17:00:00
2025-05-21 16:00:59,089 - config - INFO - 更新执行进度成功: ID 772
2025-05-21 16:00:59,529 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 16:00:59"}, "file_params": {}}...
2025-05-21 16:00:59,533 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 16:00:59,534 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 16:00:59,534 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmp4ppt0mu8.json
2025-05-21 16:01:10,626 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 16:01:10,626 - config - INFO - Docker执行成功，输出长度: 9247
2025-05-21 16:01:10,626 - config - INFO - Docker执行完成，返回码: 1
2025-05-21 16:01:10,627 - config - ERROR - Docker执行失败，错误信息:   WARNING: The script tqdm is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script dotenv is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script distro is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script normalizer is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script flask is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script httpx is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script openai is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
错误: 必须提供日志文件路径参数 'file_path'

2025-05-21 16:01:11,522 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 16:01:11,522 - config - INFO - Docker执行成功，输出长度: 9938
2025-05-21 16:01:11,522 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 16:01:11,523 - config - INFO - Docker执行成功，输出长度: 9935
2025-05-21 16:01:12,216 - config - INFO - 邮件发送成功: 脚本执行completed告警 发送给 admin@example.com, operator@example.com
2025-05-21 16:01:12,234 - config - INFO - 添加告警历史记录成功: 配置ID 5, 执行ID 768
2025-05-21 16:01:12,576 - config - INFO - 邮件发送成功: 脚本执行completed告警 发送给 admin@example.com, operator@example.com
2025-05-21 16:01:12,591 - config - INFO - 添加告警历史记录成功: 配置ID 5, 执行ID 770
2025-05-21 16:01:13,026 - config - INFO - 邮件发送成功: 脚本执行completed告警 发送给 admin@example.com, operator@example.com
2025-05-21 16:01:13,044 - config - INFO - 添加告警历史记录成功: 配置ID 5, 执行ID 771
2025-05-21 16:01:13,827 - config - INFO - 邮件发送成功: 脚本执行completed告警 发送给 admin@example.com, operator@example.com
2025-05-21 16:01:13,842 - config - INFO - 添加告警历史记录成功: 配置ID 2, 执行ID 768
2025-05-21 16:01:13,842 - config - INFO - 更新执行历史记录成功: ID 768
2025-05-21 16:01:13,942 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com
2025-05-21 16:01:13,959 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 769
2025-05-21 16:01:14,113 - config - INFO - 邮件发送成功: 脚本执行completed告警 发送给 admin@example.com, operator@example.com
2025-05-21 16:01:14,129 - config - INFO - 添加告警历史记录成功: 配置ID 2, 执行ID 770
2025-05-21 16:01:14,129 - config - INFO - 更新执行历史记录成功: ID 770
2025-05-21 16:01:14,669 - config - INFO - 邮件发送成功: 脚本执行completed告警 发送给 admin@example.com, operator@example.com
2025-05-21 16:01:14,688 - config - INFO - 添加告警历史记录成功: 配置ID 2, 执行ID 771
2025-05-21 16:01:14,689 - config - INFO - 更新执行历史记录成功: ID 771
2025-05-21 16:01:15,209 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com, operator@example.com
2025-05-21 16:01:15,230 - config - INFO - 添加告警历史记录成功: 配置ID 5, 执行ID 769
2025-05-21 16:01:16,823 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 16:01:16,842 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 769
2025-05-21 16:01:18,346 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com
2025-05-21 16:01:18,363 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 769
2025-05-21 16:01:19,762 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com, operator@example.com
2025-05-21 16:01:19,774 - config - INFO - 添加告警历史记录成功: 配置ID 2, 执行ID 769
2025-05-21 16:01:21,793 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 16:01:21,811 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 769
2025-05-21 16:01:21,812 - config - INFO - 更新执行历史记录成功: ID 769
2025-05-21 16:01:23,059 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:01:23] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 16:01:23,263 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:01:23] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 16:01:23,373 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:01:23] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 16:01:34,206 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 16:01:34,206 - config - INFO - Docker执行成功，输出长度: 9934
2025-05-21 16:01:35,254 - config - INFO - 邮件发送成功: 脚本执行completed告警 发送给 admin@example.com, operator@example.com
2025-05-21 16:01:35,270 - config - INFO - 添加告警历史记录成功: 配置ID 5, 执行ID 772
2025-05-21 16:01:36,827 - config - INFO - 邮件发送成功: 脚本执行completed告警 发送给 admin@example.com, operator@example.com
2025-05-21 16:01:36,846 - config - INFO - 添加告警历史记录成功: 配置ID 2, 执行ID 772
2025-05-21 16:01:36,847 - config - INFO - 更新执行历史记录成功: ID 772
2025-05-21 16:01:56,424 - config - INFO - 更新定时任务成功: ID 5
2025-05-21 16:01:56,425 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:01:56] "PUT /api/schedule/5/active HTTP/1.1" 200 -
2025-05-21 16:01:56,756 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:01:56] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 16:01:58,424 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:01:58] "GET /api/schedule?is_active=0 HTTP/1.1" 200 -
2025-05-21 16:02:00,617 - config - INFO - 更新定时任务成功: ID 5
2025-05-21 16:02:00,618 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:02:00] "PUT /api/schedule/5/active HTTP/1.1" 200 -
2025-05-21 16:02:00,865 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:02:00] "GET /api/schedule?is_active=0 HTTP/1.1" 200 -
2025-05-21 16:02:01,649 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:02:01] "GET /api/schedule?is_active=1 HTTP/1.1" 200 -
2025-05-21 16:02:02,607 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:02:02] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 16:02:12,173 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:02:12] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 16:02:16,241 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:02:16] "GET /api/execution/history?script_id=56&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 16:02:30,103 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:02:30] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 16:02:39,103 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:02:39] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-21 16:03:29,821 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:03:29] "GET /api/alert/config/4 HTTP/1.1" 200 -
2025-05-21 16:03:30,038 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:03:30] "GET /api/alert/history?limit=20&offset=0&config_id=4 HTTP/1.1" 200 -
2025-05-21 16:03:46,763 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:03:46] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-21 16:04:53,866 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:04:53] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 16:04:56,216 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:04:56] "GET /api/scripts/56 HTTP/1.1" 200 -
2025-05-21 16:04:56,249 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=56, chain_id=None
2025-05-21 16:04:56,254 - config - INFO - 符合条件的执行历史记录总数: 3
2025-05-21 16:04:56,255 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 16:04:56,256 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 16:04:56,257 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 56]
2025-05-21 16:04:56,258 - config - INFO - 查询返回 0 条统计数据
2025-05-21 16:04:56,259 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 16:04:56,259 - config - INFO - 备用查询参数: [56, '2025-04-21', '2025-05-21']
2025-05-21 16:04:56,259 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 16:04:56,259 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 16:04:56,261 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:04:56] "GET /api/execution/statistics?period=day&script_id=56&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 16:04:57,940 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:04:57] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 16:04:57,941 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:04:57] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 16:04:58,567 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:04:58] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 16:04:59,959 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:04:59] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 16:04:59,961 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:04:59] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 16:05:00,269 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:05:00] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 16:05:01,366 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:05:01] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 16:05:03,317 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=None, chain_id=None
2025-05-21 16:05:03,325 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:05:03] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 16:05:03,325 - config - INFO - 符合条件的执行历史记录总数: 772
2025-05-21 16:05:03,326 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 16:05:03,326 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 16:05:03,327 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21']
2025-05-21 16:05:03,332 - config - INFO - 查询返回 30 条统计数据
2025-05-21 16:05:03,333 - config - INFO - 第一条数据示例: {'time_period': '2025-04-21', 'total_count': 17, 'success_count': 12, 'failed_count': 2, 'avg_execution_time': 142.64786081685196}
2025-05-21 16:05:03,334 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:05:03] "GET /api/execution/statistics?period=day&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 16:05:03,717 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:05:03] "GET /api/execution/history?script_id=56&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 16:05:03,726 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:05:03] "GET /api/execution/history?chain_id=12&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 16:05:12,931 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 16:05:12] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-21 16:30:00,269 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 4
2025-05-21 16:30:00,270 - config - INFO - 定时任务启动成功: 任务ID 5, 历史ID 773
2025-05-21 16:30:00,280 - config - INFO - 更新执行进度成功: ID 773
2025-05-21 16:30:00,352 - config - INFO - 更新任务执行信息成功: ID 5, 下次执行时间 2025-05-21 17:00:00
2025-05-21 16:30:02,057 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 16:30:02,075 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 773
2025-05-21 16:30:03,110 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 16:30:03,128 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 773
2025-05-21 16:30:04,646 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 16:30:04,666 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 773
2025-05-21 16:30:07,151 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 16:30:07,170 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 773
2025-05-21 16:30:07,171 - config - INFO - 更新执行历史记录成功: ID 773
2025-05-21 22:00:06,551 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 4
2025-05-21 22:00:06,552 - config - INFO - 定时任务启动成功: 任务ID 5, 历史ID 774
2025-05-21 22:00:06,557 - config - INFO - 更新执行进度成功: ID 774
2025-05-21 22:00:06,619 - config - INFO - 更新任务执行信息成功: ID 5, 下次执行时间 2025-05-21 22:30:00
2025-05-21 22:00:06,627 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 5
2025-05-21 22:00:06,627 - config - INFO - 定时任务启动成功: 任务ID 6, 历史ID 775
2025-05-21 22:00:06,634 - config - INFO - 更新执行进度成功: ID 775
2025-05-21 22:00:06,677 - config - INFO - 更新任务执行信息成功: ID 6, 下次执行时间 2025-05-22 08:00:00
2025-05-21 22:00:06,688 - config - INFO - 添加执行历史记录成功: 脚本ID 18, 链ID None
2025-05-21 22:00:06,688 - config - INFO - 定时任务启动成功: 任务ID 8, 历史ID 776
2025-05-21 22:00:06,695 - config - INFO - 更新任务执行信息成功: ID 8, 下次执行时间 2025-05-22 08:00:00
2025-05-21 22:00:06,717 - config - INFO - 添加执行历史记录成功: 脚本ID 19, 链ID None
2025-05-21 22:00:06,718 - config - INFO - 定时任务启动成功: 任务ID 9, 历史ID 777
2025-05-21 22:00:06,725 - config - INFO - 更新任务执行信息成功: ID 9, 下次执行时间 2025-05-22 08:00:00
2025-05-21 22:00:06,734 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 22:00:06,735 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 778
2025-05-21 22:00:06,749 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 22:00:07
2025-05-21 22:00:06,760 - config - INFO - 添加执行历史记录成功: 脚本ID 13, 链ID None
2025-05-21 22:00:06,760 - config - INFO - 定时任务启动成功: 任务ID 2, 历史ID 779
2025-05-21 22:00:06,781 - config - INFO - 更新执行进度成功: ID 777
2025-05-21 22:00:06,797 - config - INFO - 更新任务执行信息成功: ID 2, 下次执行时间 2025-05-22 00:00:00
2025-05-21 22:00:06,805 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 6
2025-05-21 22:00:06,806 - config - INFO - 定时任务启动成功: 任务ID 10, 历史ID 780
2025-05-21 22:00:06,827 - config - INFO - 更新执行进度成功: ID 780
2025-05-21 22:00:06,890 - config - INFO - 更新任务执行信息成功: ID 10, 下次执行时间 2025-05-22 00:00:00
2025-05-21 22:00:06,906 - config - INFO - 更新执行进度成功: ID 778
2025-05-21 22:00:06,922 - config - INFO - 更新执行进度成功: ID 779
2025-05-21 22:00:06,953 - config - INFO - 更新执行进度成功: ID 776
2025-05-21 22:00:07,199 - config - INFO - 传递给Docker容器的参数: {"user_params": {"file_path": "scheduled_value_73", "pattern": "scheduled_value_91", "time_window": 39}, "system_params": {"__execution_time": "2025-05-21 22:00:07"}, "file_params": {}}...
2025-05-21 22:00:07,202 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_日志分析器.py
2025-05-21 22:00:07,202 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 22:00:07,203 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250516001959_日志分析器.py /params/tmpy6uwfm9u.json
2025-05-21 22:00:07,271 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 22:00:07"}, "file_params": {}}...
2025-05-21 22:00:07,274 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 22:00:07,275 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 22:00:07,275 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmp6wns390g.json
2025-05-21 22:00:07,318 - config - INFO - 传递给Docker容器的参数: {"user_params": {"file_path": "scheduled_value_33", "size_kb": 43, "content_type": "scheduled_value_98"}, "system_params": {"__execution_time": "2025-05-21 22:00:07"}, "file_params": {}}...
2025-05-21 22:00:07,321 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250515233706_文件生成器.py
2025-05-21 22:00:07,321 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 22:00:07,321 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250515233706_文件生成器.py /params/tmp8kwrplew.json
2025-05-21 22:00:07,332 - config - INFO - 传递给Docker容器的参数: {"user_params": {"file_path": "scheduled_value_49", "size_kb": 87, "content_type": "scheduled_value_77"}, "system_params": {"__execution_time": "2025-05-21 22:00:07"}, "file_params": {}}...
2025-05-21 22:00:07,334 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250516001959_文件生成器.py
2025-05-21 22:00:07,334 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 22:00:07,334 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250516001959_文件生成器.py /params/tmp6f16yfha.json
2025-05-21 22:00:07,550 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 22:00:07,551 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 781
2025-05-21 22:00:07,559 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 22:00:08
2025-05-21 22:00:07,578 - config - INFO - 更新执行进度成功: ID 781
2025-05-21 22:00:08,059 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 22:00:08"}, "file_params": {}}...
2025-05-21 22:00:08,061 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 22:00:08,062 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 22:00:08,062 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmpi6uwi7xv.json
2025-05-21 22:00:08,918 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 22:00:08,927 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 775
2025-05-21 22:00:09,802 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 22:00:09,809 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 774
2025-05-21 22:00:09,950 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 22:00:09,957 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 780
2025-05-21 22:00:11,639 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 22:00:11,646 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 775
2025-05-21 22:00:11,693 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 22:00:11,701 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 780
2025-05-21 22:00:12,604 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 22:00:12,610 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 774
2025-05-21 22:00:13,473 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 22:00:13,480 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 775
2025-05-21 22:00:13,538 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 22:00:13,547 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 780
2025-05-21 22:00:14,456 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 22:00:14,464 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 774
2025-05-21 22:00:15,293 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 22:00:15,300 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 775
2025-05-21 22:00:15,300 - config - INFO - 更新执行历史记录成功: ID 775
2025-05-21 22:00:15,441 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 22:00:15,446 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 780
2025-05-21 22:00:15,446 - config - INFO - 更新执行历史记录成功: ID 780
2025-05-21 22:00:16,646 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 22:00:16,652 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 774
2025-05-21 22:00:16,652 - config - INFO - 更新执行历史记录成功: ID 774
2025-05-21 22:00:29,935 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 22:00:29,935 - config - INFO - Docker执行成功，输出长度: 9249
2025-05-21 22:00:29,947 - config - INFO - 更新执行历史记录成功: ID 776
2025-05-21 22:00:30,148 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 22:00:30,148 - config - INFO - Docker执行成功，输出长度: 9249
2025-05-21 22:00:30,160 - config - INFO - 更新执行历史记录成功: ID 779
2025-05-21 22:00:30,167 - config - INFO - Docker执行完成，返回码: 1
2025-05-21 22:00:30,167 - config - ERROR - Docker执行失败，错误信息:   WARNING: The script tqdm is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script dotenv is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script distro is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script normalizer is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script flask is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script httpx is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script openai is installed in '/root/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.1.1
[notice] To update, run: pip install --upgrade pip
错误: 必须提供日志文件路径参数 'file_path'

2025-05-21 22:00:31,049 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 22:00:31,049 - config - INFO - Docker执行成功，输出长度: 9937
2025-05-21 22:00:31,061 - config - INFO - 更新执行历史记录成功: ID 778
2025-05-21 22:00:31,066 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 22:00:31,066 - config - INFO - Docker执行成功，输出长度: 9937
2025-05-21 22:00:31,075 - config - INFO - 更新执行历史记录成功: ID 781
2025-05-21 22:00:33,970 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com
2025-05-21 22:00:33,985 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 777
2025-05-21 22:00:35,735 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 22:00:35,753 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 777
2025-05-21 22:00:36,935 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 22:00:36,935 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 782
2025-05-21 22:00:36,942 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 22:00:37
2025-05-21 22:00:36,953 - config - INFO - 更新执行进度成功: ID 782
2025-05-21 22:00:37,218 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 22:00:37"}, "file_params": {}}...
2025-05-21 22:00:37,221 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 22:00:37,221 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 22:00:37,221 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmpujytalh7.json
2025-05-21 22:00:37,505 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com
2025-05-21 22:00:37,531 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 777
2025-05-21 22:00:37,577 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 22:00:37,577 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 783
2025-05-21 22:00:37,599 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 22:00:38
2025-05-21 22:00:37,616 - config - INFO - 更新执行进度成功: ID 783
2025-05-21 22:00:37,858 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 22:00:37"}, "file_params": {}}...
2025-05-21 22:00:37,862 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 22:00:37,862 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 22:00:37,862 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmprjr7c3l9.json
2025-05-21 22:00:39,306 - config - INFO - 邮件发送成功: 脚本执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 22:00:39,321 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 777
2025-05-21 22:00:39,322 - config - INFO - 更新执行历史记录成功: ID 777
2025-05-21 22:00:51,590 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 22:00:51,590 - config - INFO - Docker执行成功，输出长度: 9941
2025-05-21 22:00:51,603 - config - INFO - 更新执行历史记录成功: ID 782
2025-05-21 22:00:52,106 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 22:00:52,106 - config - INFO - Docker执行成功，输出长度: 9938
2025-05-21 22:00:52,116 - config - INFO - 更新执行历史记录成功: ID 783
2025-05-21 22:01:06,963 - config - INFO - 添加执行历史记录成功: 脚本ID 47, 链ID None
2025-05-21 22:01:06,964 - config - INFO - 定时任务启动成功: 任务ID 14, 历史ID 784
2025-05-21 22:01:06,969 - config - INFO - 更新任务执行信息成功: ID 14, 下次执行时间 2025-05-21 23:00:00
2025-05-21 22:01:06,981 - config - INFO - 更新执行进度成功: ID 784
2025-05-21 22:01:07,239 - config - INFO - 传递给Docker容器的参数: {"user_params": {}, "system_params": {"__execution_time": "2025-05-21 22:01:07"}, "file_params": {}}...
2025-05-21 22:01:07,241 - config - INFO - 准备在Docker中执行脚本: C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts\20250521012509_script_template.py
2025-05-21 22:01:07,242 - config - INFO - 使用Docker镜像: python:3.9-slim
2025-05-21 22:01:07,242 - config - INFO - 执行Docker命令: docker run --rm -v C:\Users\zhuyu\Desktop\study\lijialu\scipt\scripts:/app -v C:\Users\zhuyu\AppData\Local\Temp:/params -w /app --network=host python:3.9-slim sh -c pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && pip config set global.trusted-host mirrors.aliyun.com && pip install --no-cache-dir --user -r /params/requirements.txt && pip install --no-cache-dir --user psutil && python /app/20250521012509_script_template.py /params/tmp4801whjj.json
2025-05-21 22:01:23,025 - config - INFO - Docker执行完成，返回码: 0
2025-05-21 22:01:23,025 - config - INFO - Docker执行成功，输出长度: 9940
2025-05-21 22:01:23,042 - config - INFO - 更新执行历史记录成功: ID 784
2025-05-21 22:30:07,766 - config - INFO - 添加执行历史记录成功: 脚本ID None, 链ID 4
2025-05-21 22:30:07,768 - config - INFO - 定时任务启动成功: 任务ID 5, 历史ID 785
2025-05-21 22:30:07,778 - config - INFO - 更新执行进度成功: ID 785
2025-05-21 22:30:07,801 - config - INFO - 更新任务执行信息成功: ID 5, 下次执行时间 2025-05-21 23:00:00
2025-05-21 22:30:11,164 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 22:30:11,178 - config - INFO - 添加告警历史记录成功: 配置ID 4, 执行ID 785
2025-05-21 22:30:12,922 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 22:30:12,931 - config - INFO - 添加告警历史记录成功: 配置ID 6, 执行ID 785
2025-05-21 22:30:14,632 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com
2025-05-21 22:30:14,643 - config - INFO - 添加告警历史记录成功: 配置ID 1, 执行ID 785
2025-05-21 22:30:16,430 - config - INFO - 邮件发送成功: 脚本链执行failed告警 发送给 admin@example.com, manager@example.com
2025-05-21 22:30:16,441 - config - INFO - 添加告警历史记录成功: 配置ID 3, 执行ID 785
2025-05-21 22:30:16,441 - config - INFO - 更新执行历史记录成功: ID 785
2025-05-21 22:32:36,109 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 22:32:36] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 22:32:36,113 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 22:32:36] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 22:32:36,130 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 22:32:36] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 22:33:15,031 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 22:33:15] "GET /api/execution/history HTTP/1.1" 200 -
2025-05-21 22:33:19,460 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 22:33:19] "GET /api/alert/config HTTP/1.1" 200 -
2025-05-21 22:33:21,441 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 22:33:21] "GET /api/schedule HTTP/1.1" 200 -
2025-05-21 22:33:21,745 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 22:33:21] "GET /api/scripts HTTP/1.1" 200 -
2025-05-21 22:33:21,751 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 22:33:21] "GET /api/chains HTTP/1.1" 200 -
2025-05-21 22:33:27,516 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 22:33:27] "GET /api/scripts/47 HTTP/1.1" 200 -
2025-05-21 22:33:27,816 - config - INFO - 获取执行统计数据: period=day, start_date=2025-04-21, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 22:33:27,819 - config - INFO - 符合条件的执行历史记录总数: 38
2025-05-21 22:33:27,819 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 22:33:27,820 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 22:33:27,821 - config - INFO - 查询参数: ['2025-04-21', '2025-05-21', 47]
2025-05-21 22:33:27,823 - config - INFO - 查询返回 0 条统计数据
2025-05-21 22:33:27,823 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 22:33:27,824 - config - INFO - 备用查询参数: [47, '2025-04-21', '2025-05-21']
2025-05-21 22:33:27,825 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 22:33:27,825 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 22:33:27,826 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 22:33:27] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-04-21&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 22:33:30,714 - config - INFO - 获取执行统计数据: period=day, start_date=2025-05-14, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 22:33:30,718 - config - INFO - 符合条件的执行历史记录总数: 38
2025-05-21 22:33:30,718 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 22:33:30,719 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 22:33:30,719 - config - INFO - 查询参数: ['2025-05-14', '2025-05-21', 47]
2025-05-21 22:33:30,720 - config - INFO - 查询返回 0 条统计数据
2025-05-21 22:33:30,720 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 22:33:30,721 - config - INFO - 备用查询参数: [47, '2025-05-14', '2025-05-21']
2025-05-21 22:33:30,721 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 22:33:30,722 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 22:33:30,723 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 22:33:30] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-05-14&end_date=2025-05-21 HTTP/1.1" 200 -
2025-05-21 22:33:32,136 - config - INFO - 获取执行统计数据: period=day, start_date=2025-02-20, end_date=2025-05-21, script_id=47, chain_id=None
2025-05-21 22:33:32,140 - config - INFO - 符合条件的执行历史记录总数: 38
2025-05-21 22:33:32,140 - config - INFO - 使用分组方式: strftime('%Y-%m-%d', start_time)
2025-05-21 22:33:32,140 - config - INFO - 执行SQL查询: 
            SELECT 
                strftime('%Y-%m-%d', start_time) as time_period,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                CAST(AVG(execution_time) AS REAL) as avg_execution_time
            FROM execution_history
             WHERE start_time >= ? AND start_time <= ? AND script_id = ? GROUP BY strftime('%Y-%m-%d', start_time) ORDER BY time_period ASC
2025-05-21 22:33:32,140 - config - INFO - 查询参数: ['2025-02-20', '2025-05-21', 47]
2025-05-21 22:33:32,141 - config - INFO - 查询返回 0 条统计数据
2025-05-21 22:33:32,142 - config - INFO - 尝试使用备用查询: 
                SELECT 
                    'all' as time_period,
                    COUNT(*) as total_count,
                    SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as success_count,
                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failed_count,
                    CAST(AVG(execution_time) AS REAL) as avg_execution_time
                FROM execution_history
                WHERE 1=1
                 AND script_id = ? AND start_time >= ? AND start_time <= ?
2025-05-21 22:33:32,142 - config - INFO - 备用查询参数: [47, '2025-02-20', '2025-05-21']
2025-05-21 22:33:32,144 - config - INFO - 备用查询返回 1 条统计数据
2025-05-21 22:33:32,144 - config - INFO - 备用数据示例: {'time_period': 'all', 'total_count': 0, 'success_count': None, 'failed_count': None, 'avg_execution_time': None}
2025-05-21 22:33:32,145 - werkzeug - INFO - 127.0.0.1 - - [21/May/2025 22:33:32] "GET /api/execution/statistics?period=day&script_id=47&start_date=2025-02-20&end_date=2025-05-21 HTTP/1.1" 200 -
