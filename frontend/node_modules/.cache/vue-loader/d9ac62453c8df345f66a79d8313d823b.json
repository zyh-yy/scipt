{"remainingRequest":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\src\\views\\ChainForm.vue?vue&type=style&index=0&id=1b82bbdb&lang=scss&scoped=true","dependencies":[{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\src\\views\\ChainForm.vue","mtime":1747313407929},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1747314279928},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1747314282996},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1747314281070},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1747314279003},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747314279003},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1747314281934}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoubm9kZXMtaGVhZGVyIHsNCiAgZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOw0KICBhbGlnbi1pdGVtczogY2VudGVyOw0KICBtYXJnaW4tYm90dG9tOiAxMHB4Ow0KICANCiAgaDMgew0KICAgIG1hcmdpbjogMDsNCiAgfQ0KfQ0KDQouaGludC10ZXh0IHsNCiAgY29sb3I6ICM5MDkzOTk7DQogIG1hcmdpbi1yaWdodDogMTVweDsNCn0NCg=="},{"version":3,"sources":["ChainForm.vue"],"names":[],"mappings":";AA8WA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ChainForm.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"chain-form\">\r\n    <div class=\"page-container\">\r\n      <h1 class=\"page-title\">{{ isEdit ? '编辑脚本链' : '添加脚本链' }}</h1>\r\n      \r\n      <el-form \r\n        ref=\"form\" \r\n        :model=\"form\" \r\n        :rules=\"rules\" \r\n        label-width=\"100px\" \r\n        class=\"form-container\"\r\n        v-loading=\"loading\"\r\n      >\r\n        <el-form-item label=\"脚本链名称\" prop=\"name\">\r\n          <el-input v-model=\"form.name\" placeholder=\"请输入脚本链名称\"></el-input>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"脚本链描述\" prop=\"description\">\r\n          <el-input \r\n            type=\"textarea\" \r\n            v-model=\"form.description\" \r\n            placeholder=\"请输入脚本链描述\"\r\n            :rows=\"4\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"脚本节点\">\r\n          <div class=\"nodes-header\">\r\n            <h3>脚本链节点列表</h3>\r\n            <el-button type=\"primary\" size=\"small\" @click=\"showScriptSelector\">\r\n              <i class=\"el-icon-plus\"></i> 添加脚本\r\n            </el-button>\r\n          </div>\r\n          \r\n          <el-empty v-if=\"!form.nodes.length\" description=\"请添加脚本节点\"></el-empty>\r\n          \r\n          <el-table v-else :data=\"form.nodes\" border style=\"width: 100%\">\r\n            <el-table-column type=\"index\" label=\"序号\" width=\"80\"></el-table-column>\r\n            <el-table-column prop=\"script_name\" label=\"脚本名称\" min-width=\"150\"></el-table-column>\r\n            <el-table-column prop=\"script_description\" label=\"脚本描述\" min-width=\"200\">\r\n              <template slot-scope=\"scope\">\r\n                {{ scope.row.script_description || '无描述' }}\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"file_type\" label=\"类型\" width=\"100\">\r\n              <template slot-scope=\"scope\">\r\n                <el-tag :type=\"getFileTypeTag(scope.row.file_type)\">\r\n                  {{ scope.row.file_type }}\r\n                </el-tag>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" width=\"220\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button\r\n                  size=\"mini\"\r\n                  icon=\"el-icon-top\"\r\n                  @click=\"moveUp(scope.$index)\"\r\n                  :disabled=\"scope.$index === 0\"\r\n                  circle\r\n                ></el-button>\r\n                <el-button\r\n                  size=\"mini\"\r\n                  icon=\"el-icon-bottom\"\r\n                  @click=\"moveDown(scope.$index)\"\r\n                  :disabled=\"scope.$index === form.nodes.length - 1\"\r\n                  circle\r\n                ></el-button>\r\n                <el-button\r\n                  size=\"mini\"\r\n                  type=\"danger\"\r\n                  icon=\"el-icon-delete\"\r\n                  @click=\"removeNode(scope.$index)\"\r\n                  circle\r\n                ></el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-form-item>\r\n        \r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm\" :loading=\"submitting\">保存</el-button>\r\n          <el-button @click=\"cancel\">取消</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    \r\n    <!-- 脚本选择对话框 -->\r\n    <el-dialog title=\"选择脚本\" :visible.sync=\"scriptSelectorVisible\" width=\"70%\">\r\n      <el-table\r\n        v-loading=\"scriptsLoading\"\r\n        :data=\"availableScripts\"\r\n        border\r\n        style=\"width: 100%\"\r\n        height=\"400px\"\r\n        @row-click=\"handleScriptClick\"\r\n      >\r\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\r\n        <el-table-column prop=\"name\" label=\"脚本名称\" min-width=\"150\"></el-table-column>\r\n        <el-table-column prop=\"description\" label=\"描述\" min-width=\"200\"></el-table-column>\r\n        <el-table-column prop=\"file_type\" label=\"类型\" width=\"100\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag :type=\"getFileTypeTag(scope.row.file_type)\">\r\n              {{ scope.row.file_type }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"created_at\" label=\"创建时间\" width=\"180\">\r\n          <template slot-scope=\"scope\">\r\n            {{ formatTime(scope.row.created_at) }}\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      \r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <span class=\"hint-text\">点击表格行选择脚本</span>\r\n        <el-button @click=\"scriptSelectorVisible = false\">关闭</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ChainForm',\r\n  data() {\r\n    return {\r\n      isEdit: false,\r\n      chainId: null,\r\n      form: {\r\n        name: '',\r\n        description: '',\r\n        nodes: []\r\n      },\r\n      rules: {\r\n        name: [\r\n          { required: true, message: '请输入脚本链名称', trigger: 'blur' },\r\n          { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\r\n        ]\r\n      },\r\n      loading: false,\r\n      submitting: false,\r\n      scriptSelectorVisible: false,\r\n      availableScripts: [],\r\n      scriptsLoading: false\r\n    };\r\n  },\r\n  created() {\r\n    // 判断是否为编辑模式\r\n    this.chainId = this.$route.params.id;\r\n    this.isEdit = this.$route.name === 'ChainEdit';\r\n    \r\n    if (this.isEdit) {\r\n      this.fetchChainDetail();\r\n    }\r\n    \r\n    // 获取可用脚本列表\r\n    this.fetchScripts();\r\n  },\r\n  methods: {\r\n    fetchChainDetail() {\r\n      this.loading = true;\r\n      this.$axios.get(`/api/chains/${this.chainId}`)\r\n        .then(response => {\r\n          if (response.data.code === 0) {\r\n            const chain = response.data.data;\r\n            this.form.name = chain.name;\r\n            this.form.description = chain.description;\r\n            \r\n            // 处理节点\r\n            if (chain.nodes && chain.nodes.length) {\r\n              this.form.nodes = chain.nodes.map(node => ({\r\n                script_id: node.script_id,\r\n                script_name: node.script_name,\r\n                script_description: node.script_description,\r\n                file_type: node.file_type,\r\n                node_order: node.node_order\r\n              }));\r\n            }\r\n          } else {\r\n            this.$message.error(response.data.message || '获取脚本链详情失败');\r\n            this.$router.push('/chains');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          this.$message.error('获取脚本链详情失败: ' + error.message);\r\n          this.$router.push('/chains');\r\n        })\r\n        .finally(() => {\r\n          this.loading = false;\r\n        });\r\n    },\r\n    fetchScripts() {\r\n      this.scriptsLoading = true;\r\n      this.$axios.get('/api/scripts')\r\n        .then(response => {\r\n          if (response.data.code === 0) {\r\n            this.availableScripts = response.data.data || [];\r\n          } else {\r\n            this.$message.error(response.data.message || '获取脚本列表失败');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          this.$message.error('获取脚本列表失败: ' + error.message);\r\n        })\r\n        .finally(() => {\r\n          this.scriptsLoading = false;\r\n        });\r\n    },\r\n    showScriptSelector() {\r\n      this.scriptSelectorVisible = true;\r\n    },\r\n    handleScriptClick(row) {\r\n      // 检查是否已经添加过该脚本\r\n      const exists = this.form.nodes.some(node => node.script_id === row.id);\r\n      if (exists) {\r\n        this.$message.warning('该脚本已添加到脚本链中');\r\n        return;\r\n      }\r\n      \r\n      // 添加到节点列表\r\n      this.form.nodes.push({\r\n        script_id: row.id,\r\n        script_name: row.name,\r\n        script_description: row.description,\r\n        file_type: row.file_type,\r\n        node_order: this.form.nodes.length + 1\r\n      });\r\n      \r\n      this.scriptSelectorVisible = false;\r\n      this.$message.success(`已添加脚本: ${row.name}`);\r\n    },\r\n    moveUp(index) {\r\n      if (index === 0) return;\r\n      \r\n      const temp = this.form.nodes[index];\r\n      this.form.nodes.splice(index, 1);\r\n      this.form.nodes.splice(index - 1, 0, temp);\r\n      \r\n      // 更新顺序\r\n      this.updateNodeOrder();\r\n    },\r\n    moveDown(index) {\r\n      if (index === this.form.nodes.length - 1) return;\r\n      \r\n      const temp = this.form.nodes[index];\r\n      this.form.nodes.splice(index, 1);\r\n      this.form.nodes.splice(index + 1, 0, temp);\r\n      \r\n      // 更新顺序\r\n      this.updateNodeOrder();\r\n    },\r\n    removeNode(index) {\r\n      this.form.nodes.splice(index, 1);\r\n      \r\n      // 更新顺序\r\n      this.updateNodeOrder();\r\n    },\r\n    updateNodeOrder() {\r\n      // 更新节点顺序\r\n      this.form.nodes.forEach((node, index) => {\r\n        node.node_order = index + 1;\r\n      });\r\n    },\r\n    formatTime(time) {\r\n      if (!time) return '-';\r\n      const date = new Date(time);\r\n      return date.toLocaleString();\r\n    },\r\n    getFileTypeTag(type) {\r\n      switch (type) {\r\n        case 'py':\r\n          return 'primary';\r\n        case 'sh':\r\n          return 'success';\r\n        case 'bat':\r\n          return 'warning';\r\n        case 'ps1':\r\n          return 'danger';\r\n        case 'js':\r\n          return 'info';\r\n        default:\r\n          return '';\r\n      }\r\n    },\r\n    submitForm() {\r\n      this.$refs.form.validate(valid => {\r\n        if (valid) {\r\n          if (!this.form.nodes.length) {\r\n            this.$message.error('请至少添加一个脚本节点');\r\n            return;\r\n          }\r\n          \r\n          this.submitting = true;\r\n          \r\n          if (this.isEdit) {\r\n            this.updateChain();\r\n          } else {\r\n            this.addChain();\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    addChain() {\r\n      // 准备节点数据\r\n      const nodes = this.form.nodes.map(node => ({\r\n        script_id: node.script_id\r\n      }));\r\n      \r\n      // 发送请求\r\n      this.$axios.post('/api/chains', {\r\n        name: this.form.name,\r\n        description: this.form.description,\r\n        nodes: nodes\r\n      })\r\n        .then(response => {\r\n          if (response.data.code === 0) {\r\n            this.$message.success('添加脚本链成功');\r\n            this.$router.push('/chains');\r\n          } else {\r\n            this.$message.error(response.data.message || '添加脚本链失败');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          this.$message.error('添加脚本链失败: ' + error.message);\r\n        })\r\n        .finally(() => {\r\n          this.submitting = false;\r\n        });\r\n    },\r\n    updateChain() {\r\n      // 准备节点数据\r\n      const nodes = this.form.nodes.map(node => ({\r\n        script_id: node.script_id\r\n      }));\r\n      \r\n      // 发送请求\r\n      this.$axios.put(`/api/chains/${this.chainId}`, {\r\n        name: this.form.name,\r\n        description: this.form.description,\r\n        nodes: nodes\r\n      })\r\n        .then(response => {\r\n          if (response.data.code === 0) {\r\n            this.$message.success('更新脚本链成功');\r\n            this.$router.push('/chains');\r\n          } else {\r\n            this.$message.error(response.data.message || '更新脚本链失败');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          this.$message.error('更新脚本链失败: ' + error.message);\r\n        })\r\n        .finally(() => {\r\n          this.submitting = false;\r\n        });\r\n    },\r\n    cancel() {\r\n      this.$router.go(-1);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.nodes-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n  \r\n  h3 {\r\n    margin: 0;\r\n  }\r\n}\r\n\r\n.hint-text {\r\n  color: #909399;\r\n  margin-right: 15px;\r\n}\r\n</style>\r\n"]}]}