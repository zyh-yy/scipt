{"remainingRequest":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\src\\components\\HistoryStatistics.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\src\\components\\HistoryStatistics.vue","mtime":1747320043188},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747314279003},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1747314323395},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747314279003},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1747314281934}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["axios","VChart","name","components","data","loading","period","dateRange","type","statistics","executionCountOption","tooltip","trigger","axisPointer","legend","grid","left","right","bottom","containLabel","xAxis","yAxis","series","color","successRateOption","formatter","axisLabel","max","smooth","areaStyle","x","y","x2","y2","colorStops","offset","executionTimeOption","statusDistributionOption","orient","radius","center","value","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","mounted","setDefaultDateRange","fetchStatistics","methods","end","Date","start","setDate","getDate","formatDate","date","year","getFullYear","month","getMonth","toString","padStart","day","params","length","start_date","end_date","response","get","code","updateCharts","$message","error","message","timeLabels","map","item","time_period","totalCounts","total_count","successCounts","success_count","failedCounts","failed_count","avgTimes","avg_execution_time","Number","toFixed","successRates","totalSuccess","reduce","sum","current","parseInt","totalFailed","totalRunning"],"sources":["src/components/HistoryStatistics.vue"],"sourcesContent":["<template>\r\n  <div class=\"history-statistics\">\r\n    <div class=\"chart-controls\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"统计周期\">\r\n            <el-select v-model=\"period\" @change=\"fetchStatistics\">\r\n              <el-option label=\"按小时\" value=\"hour\"></el-option>\r\n              <el-option label=\"按天\" value=\"day\"></el-option>\r\n              <el-option label=\"按周\" value=\"week\"></el-option>\r\n              <el-option label=\"按月\" value=\"month\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n        </el-col>\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"日期范围\">\r\n            <el-date-picker\r\n              v-model=\"dateRange\"\r\n              type=\"daterange\"\r\n              range-separator=\"至\"\r\n              start-placeholder=\"开始日期\"\r\n              end-placeholder=\"结束日期\"\r\n              value-format=\"yyyy-MM-dd\"\r\n              @change=\"fetchStatistics\"\r\n            ></el-date-picker>\r\n          </el-form-item>\r\n        </el-col>\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"类型\">\r\n            <el-select v-model=\"type\" @change=\"fetchStatistics\">\r\n              <el-option label=\"全部\" value=\"all\"></el-option>\r\n              <el-option label=\"脚本\" value=\"script\"></el-option>\r\n              <el-option label=\"脚本链\" value=\"chain\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"24\">\r\n        <el-card class=\"chart-card\" v-loading=\"loading\">\r\n          <div slot=\"header\" class=\"card-header\">\r\n            <h3>执行次数统计</h3>\r\n          </div>\r\n          <v-chart class=\"chart\" :option=\"executionCountOption\" autoresize />\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\r\n      <el-col :span=\"12\">\r\n        <el-card class=\"chart-card\" v-loading=\"loading\">\r\n          <div slot=\"header\" class=\"card-header\">\r\n            <h3>成功率统计</h3>\r\n          </div>\r\n          <v-chart class=\"chart\" :option=\"successRateOption\" autoresize />\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"12\">\r\n        <el-card class=\"chart-card\" v-loading=\"loading\">\r\n          <div slot=\"header\" class=\"card-header\">\r\n            <h3>平均执行时间</h3>\r\n          </div>\r\n          <v-chart class=\"chart\" :option=\"executionTimeOption\" autoresize />\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\r\n      <el-col :span=\"24\">\r\n        <el-card class=\"chart-card\" v-loading=\"loading\">\r\n          <div slot=\"header\" class=\"card-header\">\r\n            <h3>执行状态分布</h3>\r\n          </div>\r\n          <v-chart class=\"chart\" :option=\"statusDistributionOption\" autoresize />\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport VChart from 'vue-echarts';\r\n\r\nexport default {\r\n  name: 'HistoryStatistics',\r\n  components: {\r\n    VChart\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      period: 'day',\r\n      dateRange: [],\r\n      type: 'all',\r\n      statistics: [],\r\n      executionCountOption: {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        legend: {\r\n          data: ['总执行次数', '成功次数', '失败次数']\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: []\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '总执行次数',\r\n            type: 'bar',\r\n            data: [],\r\n            color: '#409eff'\r\n          },\r\n          {\r\n            name: '成功次数',\r\n            type: 'bar',\r\n            data: [],\r\n            color: '#67c23a'\r\n          },\r\n          {\r\n            name: '失败次数',\r\n            type: 'bar',\r\n            data: [],\r\n            color: '#f56c6c'\r\n          }\r\n        ]\r\n      },\r\n      successRateOption: {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          formatter: '{b}: {c}%'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: []\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          axisLabel: {\r\n            formatter: '{value}%'\r\n          },\r\n          max: 100\r\n        },\r\n        series: [\r\n          {\r\n            data: [],\r\n            type: 'line',\r\n            smooth: true,\r\n            color: '#67c23a',\r\n            areaStyle: {\r\n              color: {\r\n                type: 'linear',\r\n                x: 0,\r\n                y: 0,\r\n                x2: 0,\r\n                y2: 1,\r\n                colorStops: [\r\n                  {\r\n                    offset: 0,\r\n                    color: 'rgba(103, 194, 58, 0.3)'\r\n                  },\r\n                  {\r\n                    offset: 1,\r\n                    color: 'rgba(103, 194, 58, 0.1)'\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      executionTimeOption: {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          formatter: '{b}: {c}秒'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: []\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          axisLabel: {\r\n            formatter: '{value}秒'\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            data: [],\r\n            type: 'line',\r\n            smooth: true,\r\n            color: '#409eff',\r\n            areaStyle: {\r\n              color: {\r\n                type: 'linear',\r\n                x: 0,\r\n                y: 0,\r\n                x2: 0,\r\n                y2: 1,\r\n                colorStops: [\r\n                  {\r\n                    offset: 0,\r\n                    color: 'rgba(64, 158, 255, 0.3)'\r\n                  },\r\n                  {\r\n                    offset: 1,\r\n                    color: 'rgba(64, 158, 255, 0.1)'\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      statusDistributionOption: {\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 'left',\r\n          data: ['成功', '失败', '执行中']\r\n        },\r\n        series: [\r\n          {\r\n            name: '执行状态',\r\n            type: 'pie',\r\n            radius: '60%',\r\n            center: ['50%', '50%'],\r\n            data: [\r\n              { value: 0, name: '成功', itemStyle: { color: '#67c23a' } },\r\n              { value: 0, name: '失败', itemStyle: { color: '#f56c6c' } },\r\n              { value: 0, name: '执行中', itemStyle: { color: '#409eff' } }\r\n            ],\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.setDefaultDateRange();\r\n    this.fetchStatistics();\r\n  },\r\n  methods: {\r\n    setDefaultDateRange() {\r\n      const end = new Date();\r\n      const start = new Date();\r\n      start.setDate(start.getDate() - 30); // 默认显示最近30天\r\n      \r\n      this.dateRange = [\r\n        this.formatDate(start),\r\n        this.formatDate(end)\r\n      ];\r\n    },\r\n    formatDate(date) {\r\n      const year = date.getFullYear();\r\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n      const day = date.getDate().toString().padStart(2, '0');\r\n      return `${year}-${month}-${day}`;\r\n    },\r\n    async fetchStatistics() {\r\n      this.loading = true;\r\n      \r\n      try {\r\n        // 构建查询参数\r\n        const params = {\r\n          period: this.period\r\n        };\r\n        \r\n        if (this.dateRange && this.dateRange.length === 2) {\r\n          params.start_date = this.dateRange[0];\r\n          params.end_date = this.dateRange[1];\r\n        }\r\n        \r\n        if (this.type === 'script') {\r\n          // 如果需要，可以添加脚本ID筛选\r\n        } else if (this.type === 'chain') {\r\n          // 如果需要，可以添加脚本链ID筛选\r\n        }\r\n        \r\n        const response = await axios.get('/api/execution/statistics', { params });\r\n        \r\n        if (response.data.code === 0) {\r\n          this.statistics = response.data.data;\r\n          this.updateCharts();\r\n        } else {\r\n          this.$message.error(response.data.message || '获取统计数据失败');\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('获取统计数据失败: ' + error.message);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    updateCharts() {\r\n      if (!this.statistics || !this.statistics.length) {\r\n        return;\r\n      }\r\n      \r\n      // 提取数据\r\n      const timeLabels = this.statistics.map(item => item.time_period);\r\n      const totalCounts = this.statistics.map(item => item.total_count);\r\n      const successCounts = this.statistics.map(item => item.success_count);\r\n      const failedCounts = this.statistics.map(item => item.failed_count);\r\n      const avgTimes = this.statistics.map(item => item.avg_execution_time ? Number(item.avg_execution_time).toFixed(2) : 0);\r\n      \r\n      // 计算成功率\r\n      const successRates = this.statistics.map(item => {\r\n        if (item.total_count > 0) {\r\n          return ((item.success_count / item.total_count) * 100).toFixed(2);\r\n        }\r\n        return 0;\r\n      });\r\n      \r\n      // 更新执行次数图表\r\n      this.executionCountOption.xAxis.data = timeLabels;\r\n      this.executionCountOption.series[0].data = totalCounts;\r\n      this.executionCountOption.series[1].data = successCounts;\r\n      this.executionCountOption.series[2].data = failedCounts;\r\n      \r\n      // 更新成功率图表\r\n      this.successRateOption.xAxis.data = timeLabels;\r\n      this.successRateOption.series[0].data = successRates;\r\n      \r\n      // 更新执行时间图表\r\n      this.executionTimeOption.xAxis.data = timeLabels;\r\n      this.executionTimeOption.series[0].data = avgTimes;\r\n      \r\n      // 更新状态分布图表\r\n      const totalSuccess = successCounts.reduce((sum, current) => sum + parseInt(current), 0);\r\n      const totalFailed = failedCounts.reduce((sum, current) => sum + parseInt(current), 0);\r\n      const totalRunning = totalCounts.reduce((sum, current) => sum + parseInt(current), 0) - totalSuccess - totalFailed;\r\n      \r\n      this.statusDistributionOption.series[0].data = [\r\n        { value: totalSuccess, name: '成功', itemStyle: { color: '#67c23a' } },\r\n        { value: totalFailed, name: '失败', itemStyle: { color: '#f56c6c' } },\r\n        { value: totalRunning, name: '执行中', itemStyle: { color: '#409eff' } }\r\n      ];\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.history-statistics {\r\n  padding: 20px 0;\r\n  \r\n  .chart-controls {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .chart-card {\r\n    margin-bottom: 20px;\r\n    \r\n    .card-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      \r\n      h3 {\r\n        margin: 0;\r\n        font-size: 16px;\r\n        font-weight: 500;\r\n      }\r\n    }\r\n    \r\n    .chart {\r\n      height: 300px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AAmFA,OAAAA,KAAA;AACA,OAAAC,MAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;MACAC,OAAA;MACAC,MAAA;MACAC,SAAA;MACAC,IAAA;MACAC,UAAA;MACAC,oBAAA;QACAC,OAAA;UACAC,OAAA;UACAC,WAAA;YACAL,IAAA;UACA;QACA;QACAM,MAAA;UACAV,IAAA;QACA;QACAW,IAAA;UACAC,IAAA;UACAC,KAAA;UACAC,MAAA;UACAC,YAAA;QACA;QACAC,KAAA;UACAZ,IAAA;UACAJ,IAAA;QACA;QACAiB,KAAA;UACAb,IAAA;QACA;QACAc,MAAA,GACA;UACApB,IAAA;UACAM,IAAA;UACAJ,IAAA;UACAmB,KAAA;QACA,GACA;UACArB,IAAA;UACAM,IAAA;UACAJ,IAAA;UACAmB,KAAA;QACA,GACA;UACArB,IAAA;UACAM,IAAA;UACAJ,IAAA;UACAmB,KAAA;QACA;MAEA;MACAC,iBAAA;QACAb,OAAA;UACAC,OAAA;UACAa,SAAA;QACA;QACAL,KAAA;UACAZ,IAAA;UACAJ,IAAA;QACA;QACAiB,KAAA;UACAb,IAAA;UACAkB,SAAA;YACAD,SAAA;UACA;UACAE,GAAA;QACA;QACAL,MAAA,GACA;UACAlB,IAAA;UACAI,IAAA;UACAoB,MAAA;UACAL,KAAA;UACAM,SAAA;YACAN,KAAA;cACAf,IAAA;cACAsB,CAAA;cACAC,CAAA;cACAC,EAAA;cACAC,EAAA;cACAC,UAAA,GACA;gBACAC,MAAA;gBACAZ,KAAA;cACA,GACA;gBACAY,MAAA;gBACAZ,KAAA;cACA;YAEA;UACA;QACA;MAEA;MACAa,mBAAA;QACAzB,OAAA;UACAC,OAAA;UACAa,SAAA;QACA;QACAL,KAAA;UACAZ,IAAA;UACAJ,IAAA;QACA;QACAiB,KAAA;UACAb,IAAA;UACAkB,SAAA;YACAD,SAAA;UACA;QACA;QACAH,MAAA,GACA;UACAlB,IAAA;UACAI,IAAA;UACAoB,MAAA;UACAL,KAAA;UACAM,SAAA;YACAN,KAAA;cACAf,IAAA;cACAsB,CAAA;cACAC,CAA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","ignoreList":[]}]}