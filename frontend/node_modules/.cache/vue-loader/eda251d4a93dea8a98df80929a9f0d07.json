{"remainingRequest":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\src\\components\\ChainExecutionTimeChart.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\src\\components\\ChainExecutionTimeChart.vue","mtime":1747320856019},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747314279003},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1747314323395},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747314279003},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1747314281934}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOw0KaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4JzsNCmltcG9ydCBWQ2hhcnQgZnJvbSAndnVlLWVjaGFydHMnOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdDaGFpbkV4ZWN1dGlvblRpbWVDaGFydCcsDQogIGNvbXBvbmVudHM6IHsNCiAgICBWQ2hhcnQNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgbG9hZGluZzogZmFsc2UsDQogICAgICBzZWxlY3RlZENoYWluOiBudWxsLA0KICAgICAgdGltZVJhbmdlOiAnMzAnLA0KICAgICAgZXhlY3V0aW9uRGF0YTogW10sDQogICAgICBjaGFydE9wdGlvbjogew0KICAgICAgICB0aXRsZTogew0KICAgICAgICAgIHRleHQ6ICfmiafooYzml7bpl7Tlj5jljJYnLA0KICAgICAgICAgIGxlZnQ6ICdjZW50ZXInDQogICAgICAgIH0sDQogICAgICAgIHRvb2x0aXA6IHsNCiAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycsDQogICAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbihwYXJhbXMpIHsNCiAgICAgICAgICAgIGNvbnN0IHRpbWUgPSBwYXJhbXNbMF0udmFsdWVbMF07DQogICAgICAgICAgICBjb25zdCBkdXJhdGlvbiA9IHBhcmFtc1swXS52YWx1ZVsxXTsNCiAgICAgICAgICAgIHJldHVybiBgJHt0aW1lfTxici8+5omn6KGM5pe26Ze0OiAke2R1cmF0aW9uLnRvRml4ZWQoMil956eSYDsNCiAgICAgICAgICB9LA0KICAgICAgICAgIGF4aXNQb2ludGVyOiB7DQogICAgICAgICAgICBhbmltYXRpb246IGZhbHNlDQogICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICB4QXhpczogew0KICAgICAgICAgIHR5cGU6ICd0aW1lJywNCiAgICAgICAgICBzcGxpdExpbmU6IHsNCiAgICAgICAgICAgIHNob3c6IGZhbHNlDQogICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICB5QXhpczogew0KICAgICAgICAgIHR5cGU6ICd2YWx1ZScsDQogICAgICAgICAgbmFtZTogJ+aJp+ihjOaXtumXtCjnp5IpJywNCiAgICAgICAgICBzcGxpdExpbmU6IHsNCiAgICAgICAgICAgIHNob3c6IGZhbHNlDQogICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBzZXJpZXM6IFt7DQogICAgICAgICAgbmFtZTogJ+aJp+ihjOaXtumXtCcsDQogICAgICAgICAgdHlwZTogJ2xpbmUnLA0KICAgICAgICAgIHNob3dTeW1ib2w6IHRydWUsDQogICAgICAgICAgc3ltYm9sU2l6ZTogOCwNCiAgICAgICAgICBob3ZlckFuaW1hdGlvbjogZmFsc2UsDQogICAgICAgICAgZGF0YTogW10sDQogICAgICAgICAgbGluZVN0eWxlOiB7DQogICAgICAgICAgICB3aWR0aDogMiwNCiAgICAgICAgICAgIGNvbG9yOiAnIzY3QzIzQScNCiAgICAgICAgICB9LA0KICAgICAgICAgIGl0ZW1TdHlsZTogew0KICAgICAgICAgICAgY29sb3I6ICcjNjdDMjNBJw0KICAgICAgICAgIH0sDQogICAgICAgICAgYXJlYVN0eWxlOiB7DQogICAgICAgICAgICBjb2xvcjogew0KICAgICAgICAgICAgICB0eXBlOiAnbGluZWFyJywNCiAgICAgICAgICAgICAgeDogMCwNCiAgICAgICAgICAgICAgeTogMCwNCiAgICAgICAgICAgICAgeDI6IDAsDQogICAgICAgICAgICAgIHkyOiAxLA0KICAgICAgICAgICAgICBjb2xvclN0b3BzOiBbew0KICAgICAgICAgICAgICAgIG9mZnNldDogMCwNCiAgICAgICAgICAgICAgICBjb2xvcjogJ3JnYmEoMTAzLDE5NCw1OCwwLjQpJw0KICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgb2Zmc2V0OiAxLA0KICAgICAgICAgICAgICAgIGNvbG9yOiAncmdiYSgxMDMsMTk0LDU4LDAuMSknDQogICAgICAgICAgICAgIH1dDQogICAgICAgICAgICB9DQogICAgICAgICAgfQ0KICAgICAgICB9XQ0KICAgICAgfQ0KICAgIH07DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgLi4ubWFwU3RhdGUoWydjaGFpbnMnXSkNCiAgfSwNCiAgbW91bnRlZCgpIHsNCiAgICB0aGlzLmZldGNoQ2hhaW5zKCk7DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBmZXRjaENoYWlucygpIHsNCiAgICAgIGlmICh0aGlzLmNoYWlucy5sZW5ndGggPT09IDApIHsNCiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2ZldGNoQ2hhaW5zJykudGhlbigoKSA9PiB7DQogICAgICAgICAgaWYgKHRoaXMuY2hhaW5zLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRDaGFpbiA9IHRoaXMuY2hhaW5zWzBdLmlkOw0KICAgICAgICAgICAgdGhpcy5mZXRjaERhdGEoKTsNCiAgICAgICAgICB9DQogICAgICAgIH0pOw0KICAgICAgfSBlbHNlIGlmICh0aGlzLmNoYWlucy5sZW5ndGggPiAwKSB7DQogICAgICAgIHRoaXMuc2VsZWN0ZWRDaGFpbiA9IHRoaXMuY2hhaW5zWzBdLmlkOw0KICAgICAgICB0aGlzLmZldGNoRGF0YSgpOw0KICAgICAgfQ0KICAgIH0sDQogICAgYXN5bmMgZmV0Y2hEYXRhKCkgew0KICAgICAgaWYgKCF0aGlzLnNlbGVjdGVkQ2hhaW4pIHJldHVybjsNCiAgICAgIA0KICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsNCiAgICAgIA0KICAgICAgdHJ5IHsNCiAgICAgICAgLy8g6K6h566X5pel5pyf6IyD5Zu0DQogICAgICAgIGNvbnN0IGVuZERhdGUgPSBuZXcgRGF0ZSgpOw0KICAgICAgICBjb25zdCBzdGFydERhdGUgPSBuZXcgRGF0ZSgpOw0KICAgICAgICBzdGFydERhdGUuc2V0RGF0ZShlbmREYXRlLmdldERhdGUoKSAtIHBhcnNlSW50KHRoaXMudGltZVJhbmdlKSk7DQogICAgICAgIA0KICAgICAgICBjb25zdCBwYXJhbXMgPSB7DQogICAgICAgICAgY2hhaW5faWQ6IHRoaXMuc2VsZWN0ZWRDaGFpbiwNCiAgICAgICAgICBzdGFydF9kYXRlOiB0aGlzLmZvcm1hdERhdGUoc3RhcnREYXRlKSwNCiAgICAgICAgICBlbmRfZGF0ZTogdGhpcy5mb3JtYXREYXRlKGVuZERhdGUpDQogICAgICAgIH07DQogICAgICAgIA0KICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCgnL2FwaS9leGVjdXRpb24vaGlzdG9yeScsIHsgcGFyYW1zIH0pOw0KICAgICAgICANCiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuY29kZSA9PT0gMCkgew0KICAgICAgICAgIHRoaXMucHJvY2Vzc0RhdGEocmVzcG9uc2UuZGF0YS5kYXRhKTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKHJlc3BvbnNlLmRhdGEubWVzc2FnZSB8fCAn6I635Y+W5omn6KGM5pe26Ze05pWw5o2u5aSx6LSlJyk7DQogICAgICAgIH0NCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+iOt+WPluaJp+ihjOaXtumXtOaVsOaNruWksei0pTogJyArIGVycm9yLm1lc3NhZ2UpOw0KICAgICAgfSBmaW5hbGx5IHsNCiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7DQogICAgICB9DQogICAgfSwNCiAgICBmb3JtYXREYXRlKGRhdGUpIHsNCiAgICAgIGNvbnN0IHllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCk7DQogICAgICBjb25zdCBtb250aCA9IChkYXRlLmdldE1vbnRoKCkgKyAxKS50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJyk7DQogICAgICBjb25zdCBkYXkgPSBkYXRlLmdldERhdGUoKS50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJyk7DQogICAgICByZXR1cm4gYCR7eWVhcn0tJHttb250aH0tJHtkYXl9YDsNCiAgICB9LA0KICAgIHByb2Nlc3NEYXRhKGRhdGEpIHsNCiAgICAgIC8vIOi/h+a7pOWHuuW9k+WJjemAieaLqeeahOS7u+WKoemTvueahOaJp+ihjOWOhuWPsg0KICAgICAgY29uc3QgY2hhaW5IaXN0b3JpZXMgPSBkYXRhLmZpbHRlcihpdGVtID0+IA0KICAgICAgICBpdGVtLmNoYWluX2lkID09PSB0aGlzLnNlbGVjdGVkQ2hhaW4gJiYgDQogICAgICAgIGl0ZW0uc3RhdHVzID09PSAnY29tcGxldGVkJyAmJg0KICAgICAgICBpdGVtLmV4ZWN1dGlvbl90aW1lDQogICAgICApOw0KICAgICAgDQogICAgICAvLyDmoLnmja7lvIDlp4vml7bpl7TmjpLluo8NCiAgICAgIGNoYWluSGlzdG9yaWVzLnNvcnQoKGEsIGIpID0+IG5ldyBEYXRlKGEuc3RhcnRfdGltZSkgLSBuZXcgRGF0ZShiLnN0YXJ0X3RpbWUpKTsNCiAgICAgIA0KICAgICAgLy8g5YeG5aSH5Zu+6KGo5pWw5o2uDQogICAgICBjb25zdCBjaGFydERhdGEgPSBjaGFpbkhpc3Rvcmllcy5tYXAoaXRlbSA9PiB7DQogICAgICAgIHJldHVybiBbDQogICAgICAgICAgaXRlbS5zdGFydF90aW1lLA0KICAgICAgICAgIGl0ZW0uZXhlY3V0aW9uX3RpbWUNCiAgICAgICAgXTsNCiAgICAgIH0pOw0KICAgICAgDQogICAgICAvLyDmm7TmlrDlm77ooajmlbDmja4NCiAgICAgIHRoaXMuY2hhcnRPcHRpb24uc2VyaWVzWzBdLmRhdGEgPSBjaGFydERhdGE7DQogICAgICANCiAgICAgIC8vIOabtOaWsOagh+mimA0KICAgICAgY29uc3QgZm91bmRDaGFpbiA9IHRoaXMuY2hhaW5zLmZpbmQoYyA9PiBjLmlkID09PSB0aGlzLnNlbGVjdGVkQ2hhaW4pOw0KICAgICAgY29uc3QgY2hhaW5OYW1lID0gZm91bmRDaGFpbiA/IGZvdW5kQ2hhaW4ubmFtZSA6ICfmnKrnn6Xku7vliqHpk74nOw0KICAgICAgdGhpcy5jaGFydE9wdGlvbi50aXRsZS50ZXh0ID0gYCR7Y2hhaW5OYW1lfSAtIOaJp+ihjOaXtumXtOWPmOWMlmA7DQogICAgfQ0KICB9DQp9Ow0K"},{"version":3,"sources":["ChainExecutionTimeChart.vue"],"names":[],"mappings":";AAwfile":"ChainExecutionTimeChart.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"chain-execution-time-chart\">\r\n    <el-card class=\"chart-card\" v-loading=\"loading\">\r\n      <div slot=\"header\" class=\"card-header\">\r\n        <h3>任务链执行时间变化</h3>\r\n        <div class=\"controls\">\r\n          <el-select \r\n            v-model=\"selectedChain\" \r\n            size=\"small\" \r\n            placeholder=\"选择任务链\" \r\n            clearable \r\n            @change=\"fetchData\"\r\n          >\r\n            <el-option\r\n              v-for=\"chain in chains\"\r\n              :key=\"chain.id\"\r\n              :label=\"chain.name\"\r\n              :value=\"chain.id\"\r\n            ></el-option>\r\n          </el-select>\r\n          <el-select \r\n            v-model=\"timeRange\" \r\n            size=\"small\" \r\n            style=\"margin-left: 10px\" \r\n            @change=\"fetchData\"\r\n          >\r\n            <el-option label=\"最近7天\" value=\"7\"></el-option>\r\n            <el-option label=\"最近30天\" value=\"30\"></el-option>\r\n            <el-option label=\"最近90天\" value=\"90\"></el-option>\r\n          </el-select>\r\n        </div>\r\n      </div>\r\n      \r\n      <el-empty v-if=\"!selectedChain\" description=\"请选择任务链\"></el-empty>\r\n      <v-chart v-else class=\"chart\" :option=\"chartOption\" autoresize />\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { mapState } from 'vuex';\r\nimport VChart from 'vue-echarts';\r\n\r\nexport default {\r\n  name: 'ChainExecutionTimeChart',\r\n  components: {\r\n    VChart\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      selectedChain: null,\r\n      timeRange: '30',\r\n      executionData: [],\r\n      chartOption: {\r\n        title: {\r\n          text: '执行时间变化',\r\n          left: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          formatter: function(params) {\r\n            const time = params[0].value[0];\r\n            const duration = params[0].value[1];\r\n            return `${time}<br/>执行时间: ${duration.toFixed(2)}秒`;\r\n          },\r\n          axisPointer: {\r\n            animation: false\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'time',\r\n          splitLine: {\r\n            show: false\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          name: '执行时间(秒)',\r\n          splitLine: {\r\n            show: false\r\n          }\r\n        },\r\n        series: [{\r\n          name: '执行时间',\r\n          type: 'line',\r\n          showSymbol: true,\r\n          symbolSize: 8,\r\n          hoverAnimation: false,\r\n          data: [],\r\n          lineStyle: {\r\n            width: 2,\r\n            color: '#67C23A'\r\n          },\r\n          itemStyle: {\r\n            color: '#67C23A'\r\n          },\r\n          areaStyle: {\r\n            color: {\r\n              type: 'linear',\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [{\r\n                offset: 0,\r\n                color: 'rgba(103,194,58,0.4)'\r\n              }, {\r\n                offset: 1,\r\n                color: 'rgba(103,194,58,0.1)'\r\n              }]\r\n            }\r\n          }\r\n        }]\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(['chains'])\r\n  },\r\n  mounted() {\r\n    this.fetchChains();\r\n  },\r\n  methods: {\r\n    fetchChains() {\r\n      if (this.chains.length === 0) {\r\n        this.$store.dispatch('fetchChains').then(() => {\r\n          if (this.chains.length > 0) {\r\n            this.selectedChain = this.chains[0].id;\r\n            this.fetchData();\r\n          }\r\n        });\r\n      } else if (this.chains.length > 0) {\r\n        this.selectedChain = this.chains[0].id;\r\n        this.fetchData();\r\n      }\r\n    },\r\n    async fetchData() {\r\n      if (!this.selectedChain) return;\r\n      \r\n      this.loading = true;\r\n      \r\n      try {\r\n        // 计算日期范围\r\n        const endDate = new Date();\r\n        const startDate = new Date();\r\n        startDate.setDate(endDate.getDate() - parseInt(this.timeRange));\r\n        \r\n        const params = {\r\n          chain_id: this.selectedChain,\r\n          start_date: this.formatDate(startDate),\r\n          end_date: this.formatDate(endDate)\r\n        };\r\n        \r\n        const response = await axios.get('/api/execution/history', { params });\r\n        \r\n        if (response.data.code === 0) {\r\n          this.processData(response.data.data);\r\n        } else {\r\n          this.$message.error(response.data.message || '获取执行时间数据失败');\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('获取执行时间数据失败: ' + error.message);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    formatDate(date) {\r\n      const year = date.getFullYear();\r\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n      const day = date.getDate().toString().padStart(2, '0');\r\n      return `${year}-${month}-${day}`;\r\n    },\r\n    processData(data) {\r\n      // 过滤出当前选择的任务链的执行历史\r\n      const chainHistories = data.filter(item => \r\n        item.chain_id === this.selectedChain && \r\n        item.status === 'completed' &&\r\n        item.execution_time\r\n      );\r\n      \r\n      // 根据开始时间排序\r\n      chainHistories.sort((a, b) => new Date(a.start_time) - new Date(b.start_time));\r\n      \r\n      // 准备图表数据\r\n      const chartData = chainHistories.map(item => {\r\n        return [\r\n          item.start_time,\r\n          item.execution_time\r\n        ];\r\n      });\r\n      \r\n      // 更新图表数据\r\n      this.chartOption.series[0].data = chartData;\r\n      \r\n      // 更新标题\r\n      const foundChain = this.chains.find(c => c.id === this.selectedChain);\r\n      const chainName = foundChain ? foundChain.name : '未知任务链';\r\n      this.chartOption.title.text = `${chainName} - 执行时间变化`;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.chart-card {\r\n  margin-bottom: 20px;\r\n  \r\n  .card-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    \r\n    h3 {\r\n      margin: 0;\r\n      font-size: 16px;\r\n      font-weight: 500;\r\n    }\r\n    \r\n    .controls {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n  }\r\n  \r\n  .chart {\r\n    height: 300px;\r\n    margin-top: 10px;\r\n  }\r\n}\r\n</style>\r\n"]}]}