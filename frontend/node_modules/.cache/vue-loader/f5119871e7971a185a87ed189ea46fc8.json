{"remainingRequest":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\src\\views\\Alerts.vue?vue&type=style&index=0&id=de6edc5e&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\src\\views\\Alerts.vue","mtime":1747319151128},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1747314279928},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1747314282996},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1747314281070},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747314279003},{"path":"C:\\Users\\zhuyu\\Desktop\\study\\lijialu\\scipt\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1747314281934}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouYWxlcnRzLWNvbnRhaW5lciB7DQogIHBhZGRpbmc6IDIwcHg7DQp9DQoNCi5wYWdlLWhlYWRlciB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgbWFyZ2luLWJvdHRvbTogMjBweDsNCn0NCg0KLmZpbHRlci1jYXJkIHsNCiAgbWFyZ2luLWJvdHRvbTogMjBweDsNCn0NCg0KLmZpbHRlci1jb250YWluZXIgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBhbGlnbi1pdGVtczogY2VudGVyOw0KfQ0KDQouZGlhbG9nLWZvb3RlciB7DQogIG1hcmdpbi10b3A6IDIwcHg7DQogIHRleHQtYWxpZ246IHJpZ2h0Ow0KfQ0KDQouaGludC10ZXh0IHsNCiAgZm9udC1zaXplOiAxMnB4Ow0KICBjb2xvcjogIzkwOTM5OTsNCiAgbWFyZ2luLXRvcDogNXB4Ow0KfQ0K"},{"version":3,"sources":["Alerts.vue"],"names":[],"mappings":";AAqiBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Alerts.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"alerts-container\">\r\n    <div class=\"page-header\">\r\n      <h1>告警配置</h1>\r\n      <el-button type=\"primary\" @click=\"openAlertForm()\">添加告警</el-button>\r\n    </div>\r\n\r\n    <el-card class=\"filter-card\">\r\n      <div class=\"filter-container\">\r\n        <el-radio-group v-model=\"activeFilter\" @change=\"loadAlertConfigs\">\r\n          <el-radio-button :label=\"null\">全部</el-radio-button>\r\n          <el-radio-button :label=\"1\">已启用</el-radio-button>\r\n          <el-radio-button :label=\"0\">已禁用</el-radio-button>\r\n        </el-radio-group>\r\n      </div>\r\n    </el-card>\r\n\r\n    <el-table\r\n      v-loading=\"loading\"\r\n      :data=\"alertConfigs\"\r\n      stripe\r\n      style=\"width: 100%; margin-top: 20px\"\r\n    >\r\n      <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\r\n      <el-table-column prop=\"name\" label=\"告警名称\" min-width=\"180\" />\r\n      <el-table-column prop=\"alert_type_text\" label=\"告警类型\" width=\"120\" />\r\n      <el-table-column label=\"告警条件\" min-width=\"200\">\r\n        <template slot-scope=\"scope\">\r\n          <div>{{ formatCondition(scope.row) }}</div>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"通知方式\" width=\"120\">\r\n        <template slot-scope=\"scope\">\r\n          <div>{{ scope.row.notification_type === 'email' ? '邮件' : '其他' }}</div>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"状态\" width=\"100\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag :type=\"scope.row.is_active ? 'success' : 'info'\">\r\n            {{ scope.row.is_active ? '已启用' : '已禁用' }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" width=\"240\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button \r\n            size=\"small\"\r\n            type=\"primary\" \r\n            plain\r\n            @click=\"viewHistory(scope.row.id)\"\r\n          >\r\n            历史记录\r\n          </el-button>\r\n          <el-button \r\n            size=\"small\"\r\n            type=\"success\" \r\n            plain\r\n            @click=\"toggleActive(scope.row)\"\r\n          >\r\n            {{ scope.row.is_active ? '禁用' : '启用' }}\r\n          </el-button>\r\n          <el-button \r\n            size=\"small\"\r\n            type=\"warning\" \r\n            plain\r\n            @click=\"openAlertForm(scope.row)\"\r\n          >\r\n            编辑\r\n          </el-button>\r\n          <el-button \r\n            size=\"small\"\r\n            type=\"danger\" \r\n            plain\r\n            @click=\"confirmDelete(scope.row)\"\r\n          >\r\n            删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 告警配置表单对话框 -->\r\n    <el-dialog\r\n      :title=\"editingAlert.id ? '编辑告警配置' : '添加告警配置'\"\r\n      :visible.sync=\"dialogVisible\"\r\n      width=\"60%\"\r\n    >\r\n      <el-form \r\n        :model=\"editingAlert\" \r\n        :rules=\"rules\" \r\n        ref=\"alertForm\" \r\n        label-width=\"120px\"\r\n      >\r\n        <el-form-item label=\"告警名称\" prop=\"name\">\r\n          <el-input v-model=\"editingAlert.name\" placeholder=\"请输入告警名称\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"告警类型\" prop=\"alert_type\">\r\n          <el-select v-model=\"editingAlert.alert_type\" placeholder=\"请选择告警类型\" style=\"width: 100%\">\r\n            <el-option label=\"脚本执行失败\" value=\"script_failed\" />\r\n            <el-option label=\"脚本执行超时\" value=\"script_timeout\" />\r\n            <el-option label=\"链式任务失败\" value=\"chain_failed\" />\r\n            <el-option label=\"系统资源告警\" value=\"system_resource\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"告警条件\" required>\r\n          <el-row :gutter=\"10\">\r\n            <el-col :span=\"8\">\r\n              <el-form-item prop=\"condition_type\">\r\n                <el-select v-model=\"editingAlert.condition_type\" placeholder=\"条件类型\" style=\"width: 100%\">\r\n                  <el-option label=\"连续次数\" value=\"consecutive_count\" />\r\n                  <el-option label=\"CPU使用率\" value=\"cpu_usage\" v-if=\"editingAlert.alert_type === 'system_resource'\" />\r\n                  <el-option label=\"内存使用率\" value=\"memory_usage\" v-if=\"editingAlert.alert_type === 'system_resource'\" />\r\n                  <el-option label=\"磁盘使用率\" value=\"disk_usage\" v-if=\"editingAlert.alert_type === 'system_resource'\" />\r\n                </el-select>\r\n              </el-form-item>\r\n            </el-col>\r\n            <el-col :span=\"16\">\r\n              <el-form-item prop=\"condition_value\">\r\n                <el-input v-model=\"editingAlert.condition_value\" placeholder=\"条件值\">\r\n                  <template slot=\"append\" v-if=\"editingAlert.condition_type && editingAlert.condition_type.includes('usage')\">%</template>\r\n                  <template slot=\"append\" v-else>次</template>\r\n                </el-input>\r\n              </el-form-item>\r\n            </el-col>\r\n          </el-row>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"通知方式\" prop=\"notification_type\">\r\n          <el-select v-model=\"editingAlert.notification_type\" placeholder=\"请选择通知方式\" style=\"width: 100%\">\r\n            <el-option label=\"邮件通知\" value=\"email\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        \r\n        <el-form-item \r\n          label=\"收件人\" \r\n          prop=\"notification_config.recipients\"\r\n          v-if=\"editingAlert.notification_type === 'email'\"\r\n        >\r\n          <el-input \r\n            v-model=\"editingAlert.notification_config.recipients\" \r\n            placeholder=\"多个收件人请用逗号分隔\" \r\n          />\r\n          <div class=\"hint-text\">多个收件人请用逗号分隔</div>\r\n        </el-form-item>\r\n        \r\n        <el-form-item \r\n          label=\"SMTP服务器\" \r\n          prop=\"notification_config.smtp_server\"\r\n          v-if=\"editingAlert.notification_type === 'email'\"\r\n        >\r\n          <el-input v-model=\"editingAlert.notification_config.smtp_server\" placeholder=\"例如: smtp.example.com\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item \r\n          label=\"SMTP端口\" \r\n          prop=\"notification_config.smtp_port\"\r\n          v-if=\"editingAlert.notification_type === 'email'\"\r\n        >\r\n          <el-input-number v-model=\"editingAlert.notification_config.smtp_port\" :min=\"1\" :max=\"65535\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item \r\n          label=\"SMTP用户名\" \r\n          prop=\"notification_config.username\"\r\n          v-if=\"editingAlert.notification_type === 'email'\"\r\n        >\r\n          <el-input v-model=\"editingAlert.notification_config.username\" placeholder=\"例如: user@example.com\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item \r\n          label=\"SMTP密码\" \r\n          prop=\"notification_config.password\"\r\n          v-if=\"editingAlert.notification_type === 'email'\"\r\n        >\r\n          <el-input \r\n            v-model=\"editingAlert.notification_config.password\"\r\n            placeholder=\"SMTP密码\" \r\n            show-password\r\n          />\r\n        </el-form-item>\r\n        \r\n        <el-form-item \r\n          label=\"发件人\" \r\n          prop=\"notification_config.sender\"\r\n          v-if=\"editingAlert.notification_type === 'email'\"\r\n        >\r\n          <el-input v-model=\"editingAlert.notification_config.sender\" placeholder=\"例如: Script Platform <noreply@example.com>\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"描述\" prop=\"description\">\r\n          <el-input \r\n            v-model=\"editingAlert.description\" \r\n            type=\"textarea\" \r\n            :rows=\"3\" \r\n            placeholder=\"请输入告警配置描述\"\r\n          />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"状态\" v-if=\"editingAlert.id\">\r\n          <el-switch\r\n            v-model=\"editingAlert.is_active\"\r\n            :active-value=\"1\"\r\n            :inactive-value=\"0\"\r\n            active-text=\"启用\"\r\n            inactive-text=\"禁用\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n      \r\n      <div class=\"dialog-footer\" v-if=\"editingAlert.notification_type === 'email'\">\r\n        <el-button \r\n          type=\"primary\" \r\n          plain\r\n          @click=\"testEmail\" \r\n          :loading=\"testingEmail\"\r\n        >\r\n          测试邮件配置\r\n        </el-button>\r\n      </div>\r\n      \r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"saveAlertConfig\" :loading=\"saving\">\r\n          保存\r\n        </el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'AlertsView',\r\n  data() {\r\n    return {\r\n      alertConfigs: [],\r\n      loading: false,\r\n      dialogVisible: false,\r\n      activeFilter: null,\r\n      saving: false,\r\n      testingEmail: false,\r\n      \r\n      editingAlert: {\r\n        id: null,\r\n        name: '',\r\n        description: '',\r\n        alert_type: '',\r\n        condition_type: '',\r\n        condition_value: '',\r\n        notification_type: 'email',\r\n        notification_config: {\r\n          smtp_server: '',\r\n          smtp_port: 587,\r\n          username: '',\r\n          password: '',\r\n          sender: '',\r\n          recipients: ''\r\n        },\r\n        is_active: 1\r\n      },\r\n      \r\n      rules: {\r\n        name: [{ required: true, message: '请输入告警名称', trigger: 'blur' }],\r\n        alert_type: [{ required: true, message: '请选择告警类型', trigger: 'change' }],\r\n        condition_type: [{ required: true, message: '请选择条件类型', trigger: 'change' }],\r\n        condition_value: [{ required: true, message: '请输入条件值', trigger: 'blur' }],\r\n        notification_type: [{ required: true, message: '请选择通知方式', trigger: 'change' }],\r\n        'notification_config.smtp_server': [\r\n          { required: true, message: '请输入SMTP服务器', trigger: 'blur' }\r\n        ],\r\n        'notification_config.smtp_port': [\r\n          { required: true, message: '请输入SMTP端口', trigger: 'blur' }\r\n        ],\r\n        'notification_config.username': [\r\n          { required: true, message: '请输入SMTP用户名', trigger: 'blur' }\r\n        ],\r\n        'notification_config.password': [\r\n          { required: true, message: '请输入SMTP密码', trigger: 'blur' }\r\n        ],\r\n        'notification_config.sender': [\r\n          { required: true, message: '请输入发件人', trigger: 'blur' }\r\n        ],\r\n        'notification_config.recipients': [\r\n          { required: true, message: '请输入收件人', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.loadAlertConfigs()\r\n  },\r\n  methods: {\r\n    async loadAlertConfigs() {\r\n      this.loading = true\r\n      try {\r\n        let url = '/api/alert/config'\r\n        if (this.activeFilter !== null) {\r\n          url += `?is_active=${this.activeFilter}`\r\n        }\r\n        const response = await axios.get(url)\r\n        if (response.data.code === 0) {\r\n          this.alertConfigs = response.data.data.map(config => ({\r\n            ...config,\r\n            alert_type_text: this.getAlertTypeText(config.alert_type)\r\n          }))\r\n        } else {\r\n          this.$message.error(response.data.message || '获取告警配置列表失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('加载告警配置失败:', error)\r\n        this.$message.error('加载告警配置失败: ' + error.message)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n\r\n    getAlertTypeText(type) {\r\n      const map = {\r\n        'script_failed': '脚本执行失败',\r\n        'script_timeout': '脚本执行超时',\r\n        'chain_failed': '链式任务失败',\r\n        'system_resource': '系统资源告警'\r\n      }\r\n      return map[type] || type\r\n    },\r\n\r\n    formatCondition(config) {\r\n      if (!config.condition_type || !config.condition_value) {\r\n        return '未设置'\r\n      }\r\n\r\n      const conditionTypeMap = {\r\n        'consecutive_count': '连续',\r\n        'cpu_usage': 'CPU使用率 >',\r\n        'memory_usage': '内存使用率 >',\r\n        'disk_usage': '磁盘使用率 >'\r\n      }\r\n\r\n      const unit = config.condition_type.includes('usage') ? '%' : '次'\r\n      return `${conditionTypeMap[config.condition_type] || config.condition_type} ${config.condition_value}${unit}`\r\n    },\r\n\r\n    openAlertForm(alert = null) {\r\n      this.resetForm()\r\n      \r\n      if (alert) {\r\n        Object.keys(this.editingAlert).forEach(key => {\r\n          if (key === 'notification_config' && alert[key]) {\r\n            try {\r\n              // 解析通知配置\r\n              const config = typeof alert[key] === 'string' \r\n                ? JSON.parse(alert[key]) \r\n                : alert[key]\r\n              \r\n              // 确保所有属性都存在\r\n              this.editingAlert[key] = {\r\n                smtp_server: '',\r\n                smtp_port: 587,\r\n                username: '',\r\n                password: '',\r\n                sender: '',\r\n                recipients: '',\r\n                ...config\r\n              }\r\n            } catch (e) {\r\n              console.error('解析通知配置失败:', e)\r\n              this.editingAlert[key] = {\r\n                smtp_server: '',\r\n                smtp_port: 587,\r\n                username: '',\r\n                password: '',\r\n                sender: '',\r\n                recipients: ''\r\n              }\r\n            }\r\n          } else if (alert[key] !== undefined) {\r\n            this.editingAlert[key] = alert[key]\r\n          }\r\n        })\r\n      }\r\n      \r\n      this.dialogVisible = true\r\n    },\r\n\r\n    resetForm() {\r\n      this.editingAlert = {\r\n        id: null,\r\n        name: '',\r\n        description: '',\r\n        alert_type: '',\r\n        condition_type: '',\r\n        condition_value: '',\r\n        notification_type: 'email',\r\n        notification_config: {\r\n          smtp_server: '',\r\n          smtp_port: 587,\r\n          username: '',\r\n          password: '',\r\n          sender: '',\r\n          recipients: ''\r\n        },\r\n        is_active: 1\r\n      }\r\n      \r\n      if (this.$refs.alertForm) {\r\n        this.$refs.alertForm.resetFields()\r\n      }\r\n    },\r\n\r\n    async saveAlertConfig() {\r\n      if (!this.$refs.alertForm) return\r\n      \r\n      this.$refs.alertForm.validate(async (valid) => {\r\n        if (!valid) return\r\n        \r\n        this.saving = true\r\n        \r\n        try {\r\n          // 准备要发送的数据\r\n          const alertData = { ...this.editingAlert }\r\n          \r\n          // 确保notification_config是字符串\r\n          if (typeof alertData.notification_config === 'object') {\r\n            alertData.notification_config = JSON.stringify(alertData.notification_config)\r\n          }\r\n          \r\n          let response\r\n          \r\n          if (this.editingAlert.id) {\r\n            // 更新现有配置\r\n            response = await axios.put(`/api/alert/config/${this.editingAlert.id}`, alertData)\r\n          } else {\r\n            // 创建新配置\r\n            response = await axios.post('/api/alert/config', alertData)\r\n          }\r\n          \r\n          if (response.data.code === 0) {\r\n            this.$message.success(response.data.message || '保存告警配置成功')\r\n            this.dialogVisible = false\r\n            this.loadAlertConfigs()\r\n          } else {\r\n            this.$message.error(response.data.message || '保存告警配置失败')\r\n          }\r\n        } catch (error) {\r\n          console.error('保存告警配置失败:', error)\r\n          this.$message.error('保存告警配置失败: ' + error.message)\r\n        } finally {\r\n          this.saving = false\r\n        }\r\n      })\r\n    },\r\n\r\n    async testEmail() {\r\n      if (!this.editingAlert.notification_config) return\r\n      \r\n      const config = this.editingAlert.notification_config\r\n      \r\n      // 验证必填字段\r\n      if (!config.smtp_server || !config.smtp_port || !config.username || \r\n          !config.password || !config.sender || !config.recipients) {\r\n        this.$message.warning('请填写完整的邮件配置信息')\r\n        return\r\n      }\r\n      \r\n      this.testingEmail = true\r\n      \r\n      try {\r\n        const response = await axios.post('/api/alert/test-email', {\r\n          smtp_server: config.smtp_server,\r\n          smtp_port: config.smtp_port,\r\n          username: config.username,\r\n          password: config.password,\r\n          sender: config.sender,\r\n          recipients: config.recipients\r\n        })\r\n        \r\n        if (response.data.code === 0) {\r\n          this.$message.success('测试邮件发送成功，请检查收件箱')\r\n        } else {\r\n          this.$message.error(response.data.message || '测试邮件发送失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('测试邮件发送失败:', error)\r\n        const errorMsg = error.response && error.response.data && error.response.data.message \r\n          ? error.response.data.message \r\n          : error.message;\r\n        this.$message.error('测试邮件发送失败: ' + errorMsg);\r\n      } finally {\r\n        this.testingEmail = false\r\n      }\r\n    },\r\n\r\n    async toggleActive(alert) {\r\n      try {\r\n        const newStatus = alert.is_active ? 0 : 1\r\n        const response = await axios.put(`/api/alert/config/${alert.id}/active`, {\r\n          is_active: newStatus\r\n        })\r\n        \r\n        if (response.data.code === 0) {\r\n          this.$message.success(response.data.message || `告警配置${newStatus ? '启用' : '禁用'}成功`)\r\n          this.loadAlertConfigs()\r\n        } else {\r\n          this.$message.error(response.data.message || '操作失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('切换告警状态失败:', error)\r\n        this.$message.error('操作失败: ' + error.message)\r\n      }\r\n    },\r\n\r\n    confirmDelete(alert) {\r\n      this.$confirm(\r\n        `确定要删除告警配置 \"${alert.name}\" 吗？删除后将无法恢复。`,\r\n        '删除确认',\r\n        {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }\r\n      ).then(async () => {\r\n        try {\r\n          const response = await axios.delete(`/api/alert/config/${alert.id}`)\r\n          \r\n          if (response.data.code === 0) {\r\n            this.$message.success('删除告警配置成功')\r\n            this.loadAlertConfigs()\r\n          } else {\r\n            this.$message.error(response.data.message || '删除告警配置失败')\r\n          }\r\n        } catch (error) {\r\n          console.error('删除告警配置失败:', error)\r\n          this.$message.error('删除告警配置失败: ' + error.message)\r\n        }\r\n      }).catch(() => {})\r\n    },\r\n\r\n    viewHistory(configId) {\r\n      this.$router.push(`/alert/history?config_id=${configId}`)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.alerts-container {\r\n  padding: 20px;\r\n}\r\n\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-container {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.dialog-footer {\r\n  margin-top: 20px;\r\n  text-align: right;\r\n}\r\n\r\n.hint-text {\r\n  font-size: 12px;\r\n  color: #909399;\r\n  margin-top: 5px;\r\n}\r\n</style>\r\n"]}]}